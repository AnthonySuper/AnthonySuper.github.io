{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/erlang.js"],"names":["module","exports","hljs","BASIC_ATOM_RE","FUNCTION_NAME_RE","ERLANG_RESERVED","keyword","literal","COMMENT","NUMBER","className","begin","relevance","NAMED_FUN","FUNCTION_CALL","end","returnBegin","contains","endsWithParent","returnEnd","TUPLE","VAR1","VAR2","RECORD_ACCESS","UNDERSCORE_IDENT_RE","BLOCK_STATEMENTS","beginKeywords","keywords","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","BASIC_MODES","PARAMS","aliases","illegal","TITLE_MODE","starts","excludeEnd","lexemes","IDENT_RE"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,EAAA,uBACAC,EAAA,IAAAD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAE,GACAC,QACA,2IAEAC,QACA,cAGAC,EAAAN,EAAAM,QAAA,SACAC,GACAC,UAAA,SACAC,MAAA,wDACAC,UAAA,GAEAC,GACAF,MAAA,UAAAR,EAAA,SAEAW,GACAH,MAAAP,EAAA,MAAAW,IAAA,MACAC,aAAA,EACAJ,UAAA,EACAK,WAEAN,MAAAP,EAAAQ,UAAA,IAGAD,MAAA,MAAAI,IAAA,MAAAG,gBAAA,EACAC,WAAA,EACAP,UAAA,KAKAQ,GACAT,MAAA,IAAaI,IAAA,IACbH,UAAA,GAGAS,GACAV,MAAA,4BACAC,UAAA,GAEAU,GACAX,MAAA,qBACAC,UAAA,GAEAW,GACAZ,MAAA,IAAAT,EAAAsB,oBACAZ,UAAA,EACAI,aAAA,EACAC,WAEAN,MAAA,IAAAT,EAAAsB,oBACAZ,UAAA,IAGAD,MAAA,IAAiBI,IAAA,IACjBH,UAAA,KAMAa,GACAC,cAAA,0BAAAX,IAAA,MACAY,SAAAtB,GAEAoB,EAAAR,UACAT,EACAK,EACAX,EAAA0B,QAAA1B,EAAA2B,kBAAyCnB,UAAA,KACzCe,EACAX,EACAZ,EAAA4B,kBACArB,EACAW,EACAC,EAAAC,EACAC,GAGA,IAAAQ,GACAvB,EACAK,EACAY,EACAX,EACAZ,EAAA4B,kBACArB,EACAW,EACAC,EAAAC,EACAC,GAEAT,EAAAG,SAAA,GAAAA,SAAAc,EACAX,EAAAH,SAAAc,EACAR,EAAAN,SAAA,GAAAA,SAAAc,EAEA,IAAAC,GACAtB,UAAA,SACAC,MAAA,MAAAI,IAAA,MACAE,SAAAc,GAEA,OACAE,SAAA,OACAN,SAAAtB,EACA6B,QAAA,4CACAjB,WAEAP,UAAA,WACAC,MAAA,IAAAR,EAAA,UAAAY,IAAA,KACAC,aAAA,EACAkB,QAAA,yBACAjB,UACAe,EACA9B,EAAA0B,QAAA1B,EAAAiC,YAAyCxB,MAAAR,KAEzCiC,QACArB,IAAA,QACAY,SAAAtB,EACAY,SAAAc,IAGAvB,GAEAG,MAAA,KAAAI,IAAA,MACAH,UAAA,EACAyB,YAAA,EACArB,aAAA,EACAsB,QAAA,IAAApC,EAAAqC,SACAZ,SACA,0KAGAV,UAAAe,IAEAvB,EACAP,EAAA4B,kBACAP,EACAF,EAAAC,EACAF,GACOT,MAAA","file":"128.b247027b.bundle.js","sourcesContent":["module.exports = function(hljs) {\n  var BASIC_ATOM_RE = '[a-z\\'][a-zA-Z0-9_\\']*';\n  var FUNCTION_NAME_RE = '(' + BASIC_ATOM_RE + ':' + BASIC_ATOM_RE + '|' + BASIC_ATOM_RE + ')';\n  var ERLANG_RESERVED = {\n    keyword:\n      'after and andalso|10 band begin bnot bor bsl bzr bxor case catch cond div end fun if ' +\n      'let not of orelse|10 query receive rem try when xor',\n    literal:\n      'false true'\n  };\n\n  var COMMENT = hljs.COMMENT('%', '$');\n  var NUMBER = {\n    className: 'number',\n    begin: '\\\\b(\\\\d+#[a-fA-F0-9]+|\\\\d+(\\\\.\\\\d+)?([eE][-+]?\\\\d+)?)',\n    relevance: 0\n  };\n  var NAMED_FUN = {\n    begin: 'fun\\\\s+' + BASIC_ATOM_RE + '/\\\\d+'\n  };\n  var FUNCTION_CALL = {\n    begin: FUNCTION_NAME_RE + '\\\\(', end: '\\\\)',\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        begin: FUNCTION_NAME_RE, relevance: 0\n      },\n      {\n        begin: '\\\\(', end: '\\\\)', endsWithParent: true,\n        returnEnd: true,\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n  var TUPLE = {\n    begin: '{', end: '}',\n    relevance: 0\n    // \"contains\" defined later\n  };\n  var VAR1 = {\n    begin: '\\\\b_([A-Z][A-Za-z0-9_]*)?',\n    relevance: 0\n  };\n  var VAR2 = {\n    begin: '[A-Z][a-zA-Z0-9_]*',\n    relevance: 0\n  };\n  var RECORD_ACCESS = {\n    begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0,\n    returnBegin: true,\n    contains: [\n      {\n        begin: '#' + hljs.UNDERSCORE_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: '{', end: '}',\n        relevance: 0\n        // \"contains\" defined later\n      }\n    ]\n  };\n\n  var BLOCK_STATEMENTS = {\n    beginKeywords: 'fun receive if try case', end: 'end',\n    keywords: ERLANG_RESERVED\n  };\n  BLOCK_STATEMENTS.contains = [\n    COMMENT,\n    NAMED_FUN,\n    hljs.inherit(hljs.APOS_STRING_MODE, {className: ''}),\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1, VAR2,\n    RECORD_ACCESS\n  ];\n\n  var BASIC_MODES = [\n    COMMENT,\n    NAMED_FUN,\n    BLOCK_STATEMENTS,\n    FUNCTION_CALL,\n    hljs.QUOTE_STRING_MODE,\n    NUMBER,\n    TUPLE,\n    VAR1, VAR2,\n    RECORD_ACCESS\n  ];\n  FUNCTION_CALL.contains[1].contains = BASIC_MODES;\n  TUPLE.contains = BASIC_MODES;\n  RECORD_ACCESS.contains[1].contains = BASIC_MODES;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', end: '\\\\)',\n    contains: BASIC_MODES\n  };\n  return {\n    aliases: ['erl'],\n    keywords: ERLANG_RESERVED,\n    illegal: '(</|\\\\*=|\\\\+=|-=|/\\\\*|\\\\*/|\\\\(\\\\*|\\\\*\\\\))',\n    contains: [\n      {\n        className: 'function',\n        begin: '^' + BASIC_ATOM_RE + '\\\\s*\\\\(', end: '->',\n        returnBegin: true,\n        illegal: '\\\\(|#|//|/\\\\*|\\\\\\\\|:|;',\n        contains: [\n          PARAMS,\n          hljs.inherit(hljs.TITLE_MODE, {begin: BASIC_ATOM_RE})\n        ],\n        starts: {\n          end: ';|\\\\.',\n          keywords: ERLANG_RESERVED,\n          contains: BASIC_MODES\n        }\n      },\n      COMMENT,\n      {\n        begin: '^-', end: '\\\\.',\n        relevance: 0,\n        excludeEnd: true,\n        returnBegin: true,\n        lexemes: '-' + hljs.IDENT_RE,\n        keywords:\n          '-module -record -undef -export -ifdef -ifndef -author -copyright -doc -vsn ' +\n          '-import -include -include_lib -compile -define -else -endif -file -behaviour ' +\n          '-behavior -spec',\n        contains: [PARAMS]\n      },\n      NUMBER,\n      hljs.QUOTE_STRING_MODE,\n      RECORD_ACCESS,\n      VAR1, VAR2,\n      TUPLE,\n      {begin: /\\.$/} // relevance booster\n    ]\n  };\n};"],"sourceRoot":""}