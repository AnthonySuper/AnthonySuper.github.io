{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/python.js"],"names":["module","exports","hljs","KEYWORDS","keyword","built_in","PROMPT","className","begin","SUBST","end","keywords","illegal","STRING","contains","BACKSLASH_ESCAPE","variants","relevance","APOS_STRING_MODE","QUOTE_STRING_MODE","NUMBER","BINARY_NUMBER_RE","C_NUMBER_RE","PARAMS","aliases","HASH_COMMENT_MODE","beginKeywords","UNDERSCORE_TITLE_MODE","endsWithParent"],"mappings":"2EAAAA,EAAAC,QAAA,SAAAC,GACA,IAAAC,GACAC,QACA,8MAGAC,SACA,2BAEAC,GACAC,UAAA,OAAAC,MAAA,kBAEAC,GACAF,UAAA,QACAC,MAAA,KAAcE,IAAA,KACdC,SAAAR,EACAS,QAAA,KAEAC,GACAN,UAAA,SACAO,UAAAZ,EAAAa,kBACAC,WAEAR,MAAA,cAAAE,IAAA,MACAI,UAAAR,GACAW,UAAA,KAGAT,MAAA,cAAAE,IAAA,MACAI,UAAAR,GACAW,UAAA,KAGAT,MAAA,eAAAE,IAAA,MACAI,UAAAR,EAAAG,KAGAD,MAAA,eAAAE,IAAA,MACAI,UAAAR,EAAAG,KAGAD,MAAA,YAAAE,IAAA,IACAO,UAAA,KAGAT,MAAA,YAAAE,IAAA,IACAO,UAAA,KAGAT,MAAA,UAAAE,IAAA,MAGAF,MAAA,UAAAE,IAAA,MAGAF,MAAA,aAAAE,IAAA,IACAI,UAAAL,KAGAD,MAAA,aAAAE,IAAA,IACAI,UAAAL,IAEAP,EAAAgB,iBACAhB,EAAAiB,oBAGAC,GACAb,UAAA,SAAAU,UAAA,EACAD,WACOR,MAAAN,EAAAmB,iBAAA,YACAb,MAAA,yBACAA,MAAAN,EAAAoB,YAAA,aAGPC,GACAhB,UAAA,SACAC,MAAA,KAAAE,IAAA,KACAI,UAAA,OAAAR,EAAAc,EAAAP,IAGA,OADAJ,EAAAK,UAAAD,EAAAO,EAAAd,IAEAkB,SAAA,YACAb,SAAAR,EACAS,QAAA,iBACAE,UACAR,EACAc,EACAP,EACAX,EAAAuB,mBAEAT,WACWT,UAAA,WAAAmB,cAAA,QACAnB,UAAA,QAAAmB,cAAA,UAEXhB,IAAA,IACAE,QAAA,YACAE,UACAZ,EAAAyB,sBACAJ,GAEAf,MAAA,KAAAoB,gBAAA,EACAjB,SAAA,WAKAJ,UAAA,OACAC,MAAA,WAAAE,IAAA,MAGAF,MAAA","file":"54.2bc3ae2b.bundle.js","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'and elif is global as in if from raise for except finally print import pass return ' +\n      'exec else break not with class assert yield try while continue del or def lambda ' +\n      'async await nonlocal|10 None True False',\n    built_in:\n      'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(fr|rf|f)'''/, end: /'''/,\n        contains: [PROMPT, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n        contains: [PROMPT, SUBST]\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      {\n        begin: /(fr|rf|f)'/, end: /'/,\n        contains: [SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"/, end: /\"/,\n        contains: [SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // donâ€™t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n};"],"sourceRoot":""}