{"version":3,"sources":["webpack:///./node_modules/katex/dist/katex.js"],"names":["require","module","exports","e","t","n","r","s","o","u","a","i","f","Error","code","l","call","length","1","_ParseError","_ParseError2","_interopRequireDefault","_Settings","_Settings2","_buildTree","_buildTree2","_parseTree","_parseTree2","_utils","_utils2","obj","__esModule","default","render","expression","baseNode","options","clearNode","settings","tree","node","toNode","appendChild","document","compatMode","console","warn","renderToString","toMarkup","__parse","ParseError","./src/ParseError","./src/Settings","./src/buildTree","./src/parseTree","./src/utils","2","core-js/library/fn/array/from","3","core-js/library/fn/get-iterator","4","core-js/library/fn/is-iterable","5","core-js/library/fn/json/stringify","6","core-js/library/fn/object/define-property","7","core-js/library/fn/object/freeze","8","instance","Constructor","TypeError","9","_defineProperty","_defineProperty2","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","../core-js/object/define-property","10","_isIterable2","_isIterable3","_getIterator2","_getIterator3","arr","Array","isArray","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","sliceIterator","../core-js/get-iterator","../core-js/is-iterable","11","_from","_from2","arr2","../core-js/array/from","12","from","../../modules/_core","../../modules/es6.array.from","../../modules/es6.string.iterator","13","../modules/core.get-iterator","../modules/es6.string.iterator","../modules/web.dom.iterable","14","../modules/core.is-iterable","15","core","$JSON","JSON","stringify","it","apply","arguments","16","$Object","desc","defineProperty","../../modules/es6.object.define-property","17","freeze","../../modules/es6.object.freeze","18","19","20","isObject","./_is-object","21","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","O","index","./_to-absolute-index","./_to-iobject","./_to-length","22","cof","TAG","ARG","T","B","tryGet","callee","./_cof","./_wks","23","toString","slice","24","version","__e","25","$defineProperty","createDesc","object","./_object-dp","./_property-desc","26","aFunction","fn","that","b","c","./_a-function","27","28","get","./_fails","29","is","createElement","./_global","30","split","31","global","ctx","hide","$export","type","name","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","IS_WRAP","W","expProto","C","this","Function","virtual","R","U","./_core","./_ctx","./_hide","32","exec","33","window","Math","self","__g","34","hasOwnProperty","35","dP","./_descriptors","36","documentElement","37","./_dom-create","38","propertyIsEnumerable","39","Iterators","ITERATOR","ArrayProto","./_iterators","40","41","anObject","iterator","entries","ret","./_an-object","42","create","setToStringTag","IteratorPrototype","NAME","./_object-create","./_set-to-string-tag","43","LIBRARY","redefine","has","$iterCreate","getPrototypeOf","BUGGY","keys","returnThis","Base","DEFAULT","IS_SET","FORCED","methods","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","./_export","./_has","./_iter-create","./_library","./_object-gpo","./_redefine","44","SAFE_CLOSING","riter","skipClosing","safe","iter","45","46","47","48","META","setDesc","id","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","./_uid","49","dPs","enumBugKeys","IE_PROTO","Empty","createDict","iframeDocument","iframe","style","display","src","contentWindow","open","write","lt","close","Properties","result","./_enum-bug-keys","./_html","./_object-dps","./_shared-key","50","IE8_DOM_DEFINE","toPrimitive","Attributes","./_ie8-dom-define","./_to-primitive","51","getKeys","./_object-keys","52","toObject","ObjectProto","constructor","./_to-object","53","arrayIndexOf","names","./_array-includes","54","$keys","./_object-keys-internal","55","fails","exp","56","bitmap","57","58","def","tag","stat","59","shared","uid","./_shared","60","store","61","toInteger","defined","TO_STRING","pos","String","charCodeAt","charAt","./_defined","./_to-integer","62","max","min","63","ceil","floor","isNaN","64","IObject","./_iobject","65","66","67","val","valueOf","68","px","random","concat","69","Symbol","USE_SYMBOL","$exports","70","classof","getIteratorMethod","./_classof","71","getIterator","iterFn","./core.get-iterator-method","72","isIterable","73","isArrayIter","createProperty","getIterFn","arrayLike","step","aLen","mapfn","mapping","./_create-property","./_is-array-iter","./_iter-call","./_iter-detect","74","addToUnscopables","iterated","_t","_k","Arguments","./_add-to-unscopables","./_iter-define","./_iter-step","75","76","$freeze","./_meta","./_object-sap","77","$at","point","./_string-at","78","TO_STRING_TAG","DOMIterables","Collection","./es6.array.iterator","79","re","str","sticky","reloc","__matchAtRelocatable","flags","ignoreCase","multiline","unicode","RegExp","getRelocatable","lastIndex","match","80","getOwnPropertySymbols","propIsEnumerable","assign","test1","getOwnPropertyNames","test2","fromCharCode","order2","map","join","test3","forEach","letter","shouldUseNative","symbols","to","81","controlWordRegex","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_matchAt","_matchAt2","_SourceLocation","_SourceLocation2","_Token","tokenRegex","commentRegex","Lexer","input","Token","text","start","end","test","lex","./ParseError","./SourceLocation","./Token","babel-runtime/helpers/classCallCheck","babel-runtime/helpers/createClass","match-at","82","_toConsumableArray2","_toConsumableArray3","_Lexer","_Lexer2","_macros","_macros2","_objectAssign","_objectAssign2","MacroExpander","macros","lexer","stack","pushToken","future","pop","token","_stack","topToken","popToken","isMacro","consumeSpaces","_getExpansion2","_getExpansion","tokens","numArgs","expansion","args","startOfArg","arg","depth","tok","reverse","_tok","splice","_expansion","expandOnce","expanded","definition","indexOf","stripped","replace","bodyLexer","./Lexer","./macros","babel-runtime/helpers/toConsumableArray","object-assign","83","_fontMetrics2","_fontMetrics3","sizeStyleMap","sizeMultipliers","sizeAtStyle","size","Options","data","color","BASESIZE","textSize","phantom","font","sizeMultiplier","maxSize","_fontMetrics","extension","extend","havingStyle","cramp","wantSize","oldOptions","getFontMetrics","colorMap","katex-blue","katex-orange","katex-pink","katex-red","katex-green","katex-gray","katex-purple","katex-blueA","katex-blueB","katex-blueC","katex-blueD","katex-blueE","katex-tealA","katex-tealB","katex-tealC","katex-tealD","katex-tealE","katex-greenA","katex-greenB","katex-greenC","katex-greenD","katex-greenE","katex-goldA","katex-goldB","katex-goldC","katex-goldD","katex-goldE","katex-redA","katex-redB","katex-redC","katex-redD","katex-redE","katex-maroonA","katex-maroonB","katex-maroonC","katex-maroonD","katex-maroonE","katex-purpleA","katex-purpleB","katex-purpleC","katex-purpleD","katex-purpleE","katex-mintA","katex-mintB","katex-mintC","katex-grayA","katex-grayB","katex-grayC","katex-grayD","katex-grayE","katex-grayF","katex-grayG","katex-grayH","katex-grayI","katex-kaBlue","katex-kaGreen","./fontMetrics","84","_ParseNode","message","error","loc","underlined","left","right","__proto__","position","./ParseNode","85","ParseNode","mode","firstToken","lastToken","range","86","_functions","_functions2","_environments","_environments2","_MacroExpander","_MacroExpander2","_symbols","_symbols2","_units","_unicodeRegexes","_ParseNode2","newArgument","assertFuncOrArg","parsed","Parser","gullet","colorIsTextColor","leftrightDepth","consume","nextToken","expandNextToken","newMode","parse","parseInput","parseExpression","expect","breakOnInfix","breakOnTokenText","body","endOfExpression","infix","atom","parseAtom","throwOnError","errorNode","handleUnsupportedCmd","handleInfixNodes","overIndex","funcName","replaceWith","numerNode","denomNode","numerBody","denomBody","callFunction","symbolToken","symbol","group","parseGroup","funcGreediness","greediness","SUPSUB_GREEDINESS","parseGivenFunction","textordArray","textNode","colorNode","errorColor","base","parseImplicitGroup","superscript","subscript","limits","alwaysHandleSupSub","handleSupSubscript","prime","primes","sup","sub","parseSymbol","parseFunction","func","begin","envName","nameGroup","env","_parseArguments","parseArguments","optArgs","context","parser","handler","endNameToken","contains","sizeFuncs","_body","styleFuncs","_body2","oldFontFuncs","_body3","parseColorGroup","_body4","outerMode","switchMode","_body5","baseGroup","funcData","allowedInText","allowedInMath","_parseArguments2","totalArgs","numOptionalArgs","baseGreediness","argType","argTypes","isOptional","parseGroupOfType","argNode","argGreediness","innerMode","optional","parseSizeGroup","res","modeName","regex","parseStringGroup","parseRegexGroup","number","unit","validUnit","formLigatures","v","nucleus","cjkRegex","newDollar","star","\\rm","\\sf","\\tt","\\bf","\\it","./MacroExpander","./environments","./functions","./symbols","./unicodeRegexes","./units","./utils","87","Settings","displayMode","deflt","Infinity","88","_freeze","_freeze2","SourceLocation","first","second","babel-runtime/core-js/object/freeze","89","Style","cramped","styles","_sup","_sub","_fracNum","_fracDen","_cramp","_text","DISPLAY","TEXT","SCRIPT","SCRIPTSCRIPT","90","endToken","91","_domTree","_domTree2","mainitLetters","lookupSymbol","fontFamily","metrics","getCharacterMetrics","makeSymbol","classes","lookup","symbolNode","italic","height","skew","maxFontSize","isTight","getColor","mathDefault","fontLookup","mathit","fontName","fontClass","sizeElementFromChildren","elem","children","makeSpan","span","fontMap","mathbf","variant","mathrm","textit","mathbb","mathcal","mathfrak","mathscr","mathsf","mathtt","mathsym","makeFragment","fragment","documentFragment","makeVList","positionType","positionData","currPos","oldChildren","shift","diff","bottom","pstrutSize","child","pstrut","realChildren","minPos","maxPos","_child","childWrap","top","marginLeft","marginRight","vlist","rows","depthStrut","topStrut","vtable","makeOrd","makeVerb","tryCombineChars","chars","tryCombine","prependChildren","spacingFunctions","\\qquad","className","\\quad","\\enspace","\\;","\\:","\\,","\\!","./domTree","92","buildGroup","groupTypes","makeNullDelimiter","buildExpression","spliceSpaces","_stringify","_stringify2","bottomStrut","verticalAlign","htmlNode","setAttribute","_Style","_Style2","_buildCommon","_buildCommon2","_delimiter","_delimiter2","_stretchy","_stretchy2","isBinLeftCanceller","isRealGroup","isBinRightCanceller","j","groups","output","spaces","_i2","_i3","container","paddingLeft","getBaseElem","isCharacterBox","baseElem","moreClasses","baseSizingClasses","mathord","textord","bin","rel","inner","punct","ordgroup","newOptions","withFont","elements","withColor","supsub","isSup","isOver","shouldHandleSupSub","supm","subm","fontMetrics","supShift","subShift","supDrop","subDrop","minSupShift","sup1","sup3","sup2","multiplier","scriptspace","ptPerEm","xHeight","sub2","ruleWidth","defaultRuleThickness","psi","_vlistElem","sub1","vlistElem","mclass","getTypeOfDomTree","genfrac","nstyle","fracNum","dstyle","fracDen","numerm","numer","denomm","denom","rule","ruleSpacing","hasBarLine","makeLineSpan","numShift","clearance","denomShift","num1","denom1","num2","num3","denom2","frac","candidateClearance","axisHeight","midShift","delimSize","delim1","delim2","leftDelim","rightDelim","customSizedDelim","sizingClasses","spacing","lap","alignment","fix","smash","smashHeight","smashDepth","_i4","op","supGroup","subGroup","hasLimits","large","baseShift","slant","supKern","subKern","bigOpSpacing1","bigOpSpacing3","bigOpSpacing2","bigOpSpacing4","finalGroup","bigOpSpacing5","mod","modType","modInner","katex","k","x","thickness","line","borderBottomWidth","sizingGroup","baseOptions","overline","innerGroup","havingCrampedStyle","underline","sqrt","theta","phi","lineClearance","minDelimiterHeight","img","sqrtRuleThickness","delimDepth","imgShift","advanceWidth","rootm","toShift","rootVList","rootVListWrap","sizing","havingSize","styling","styleMap","script","scriptscript","newStyle","verb","calculateSize","width","borderRightWidth","borderTopWidth","kern","dimension","accent","supsubGroup","mustShift","isShifty","baseChar","accentBody","isStretchy","svgSpan","styleSpan","label","accentClass","accentWrap","horizBrace","hasSupSub","supSubGroup","havingBaseStyle","braceBody","vSpan","accentUnder","enclose","substr","scale","isColorbox","vertPad","encloseSpan","backgroundColor","borderColor","xArrow","upperGroup","lowerGroup","below","arrowBody","arrowShift","upperShift","lowerShift","raisebox","dy","groupNode","./Style","./buildCommon","./delimiter","./stretchy","babel-runtime/core-js/json/stringify","93","makeText","texExpression","wrapper","_mathMLTree2","MathNode","annotation","TextNode","semantics","math","_mathMLTree","getVariant","defaultVariant","mi","mn","mtext","currentText","_group","isBrace","nodeType","withDelims","leftOp","rightOp","outerNode","accentNode","mathMLnode","space","attr","operator","arrowNode","lowerNode","upperNode","offset","removeUnnecessaryRow","./mathMLTree","94","_buildHTML","_buildHTML2","_buildMathML","_buildMathML2","_Options","_Options2","startStyle","mathMLNode","katexNode","./Options","./Settings","./buildHTML","./buildMathML","95","_ref","htmlBuilder","mathmlBuilder","96","ordargument","97","getMetrics","styleWrap","delim","toStyle","delimSizeMultiplier","centerSpan","makeLargeDelim","center","mathrmSize","makeInner","sizeClass","makeStackedDelim","heightTotal","middle","repeat","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","repeatCount","realHeightTotal","inners","sqrtSvg","sqrtName","viewBoxHeight","alternate","vertSegment","pathNode","attributes","svg","svgNode","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","sizeToMaxHeight","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","stackLargeDelimiterSequence","makeCustomSizedDelim","sequence","delimType","heightDepth","traverseSequence","spanHeight","minWidth","sqrtSpan","makeSmallDelim","sizedDelim","leftRightDelim","delimiterExtend","maxDistFromAxis","totalHeight","98","_slicedToArray2","_slicedToArray3","_svgGeometry","_svgGeometry2","createClass","attribute","sibling","markup","escape","hyphenate","frag","createDocumentFragment","iCombinations","î","ï","í","ì","hangulRegex","_style","createTextNode","needsSpan","escaped","createElementNS","_attributes$i","_attributes$i2","pathName","path","lineNode","_attributes$i3","_attributes$i4","./svgGeometry","babel-runtime/helpers/slicedToArray","99","_defineEnvironment","environments","./defineEnvironment","./environments/array.js","100","_defineEnvironment2","html","_interopRequireWildcard","mml","newObj","parseArray","row","rowGaps","cell","lastRow","cr","dCellStyle","nr","nc","pt","arraycolsep","baselineskip","jot","arraystretch","arrayskip","arstrutHeight","arstrutDepth","inrow","_height","_depth","outrow","elt","gap","addJot","colDescriptions","cols","colSep","colDescrNum","colDescr","firstSeparator","doubleRuleSep","separator","_separator","sepwidth","hskipBeforeAndAfter","pregap","col","align","postgap","colalign","ca","delimiters","matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","emptyGroup","numCols","unshift","_align","_pregap","../ParseError","../ParseNode","../buildCommon","../buildHTML","../buildMathML","../defineEnvironment","../mathMLTree","../units","../utils","101","_fontMetricsData","_fontMetricsData2","sigmasAndXis","stretch","shrink","quad","extraSpace","extraCharacterMap","À","Á","Â","Ã","Ä","Å","Æ","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","Ø","Ù","Ú","Û","Ü","Ý","Þ","ß","à","á","â","ã","ä","å","æ","ç","è","é","ê","ë","ð","ñ","ò","ó","ô","õ","ö","ø","ù","ú","û","ü","ý","þ","ÿ","А","Б","В","Г","Д","Е","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","а","б","в","г","д","е","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","fontMetricsBySizeIndex","sizeIndex","cssEmPerMu","character","ch","./fontMetricsData","102","AMS-Regular","107","165","174","240","295","710","732","770","771","989","1008","8245","8463","8487","8498","8502","8503","8504","8513","8592","8594","8602","8603","8606","8608","8610","8611","8619","8620","8621","8622","8624","8625","8630","8631","8634","8635","8638","8639","8642","8643","8644","8646","8647","8648","8649","8650","8651","8652","8653","8654","8655","8666","8667","8669","8672","8674","8705","8708","8709","8717","8722","8724","8726","8733","8736","8737","8738","8739","8740","8741","8742","8756","8757","8764","8765","8769","8770","8774","8776","8778","8782","8783","8785","8786","8787","8790","8791","8796","8806","8807","8808","8809","8812","8814","8815","8816","8817","8818","8819","8822","8823","8828","8829","8830","8831","8832","8833","8840","8841","8842","8843","8847","8848","8858","8859","8861","8862","8863","8864","8865","8872","8873","8874","8876","8877","8878","8879","8882","8883","8884","8885","8888","8890","8891","8892","8901","8903","8905","8906","8907","8908","8909","8910","8911","8912","8913","8914","8915","8916","8918","8919","8920","8921","8922","8923","8926","8927","8928","8929","8934","8935","8936","8937","8938","8939","8940","8941","8994","8995","9416","9484","9488","9492","9496","9585","9586","9632","9633","9650","9651","9654","9660","9661","9664","9674","9733","10003","10016","10731","10846","10877","10878","10885","10886","10887","10888","10889","10890","10891","10892","10901","10902","10933","10934","10935","10936","10937","10938","10949","10950","10955","10956","57350","57351","57352","57353","57356","57357","57358","57359","57360","57361","57366","57367","57368","57369","57370","57371","Caligraphic-Regular","Fraktur-Regular","103","104","105","106","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","8216","8217","58112","58113","58114","58115","58116","58117","58118","58119","Main-Bold","123","124","125","126","168","172","175","176","177","180","215","247","305","567","711","713","714","715","728","729","730","768","769","772","774","775","776","778","779","780","824","915","916","920","923","926","928","931","933","934","936","937","8211","8212","8220","8221","8224","8225","8242","8407","8465","8467","8472","8476","8501","8593","8595","8596","8597","8598","8599","8600","8601","8636","8637","8640","8641","8656","8657","8658","8659","8660","8661","8704","8706","8707","8711","8712","8715","8723","8725","8727","8728","8729","8730","8734","8743","8744","8745","8746","8747","8768","8771","8781","8801","8804","8805","8810","8811","8826","8827","8834","8835","8838","8839","8846","8849","8850","8851","8852","8853","8854","8855","8856","8857","8866","8867","8868","8869","8900","8902","8968","8969","8970","8971","9657","9667","9711","9824","9825","9826","9827","9837","9838","9839","10216","10217","10815","10927","10928","Main-Italic","163","Main-Regular","160","8230","8614","8617","8618","8773","8784","8800","8904","8942","8943","8945","9136","9137","10222","10223","10229","10230","10231","10232","10233","10234","10236","Math-BoldItalic","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","977","981","982","1009","1013","Math-Italic","Math-Regular","SansSerif-Regular","Script-Regular","Size1-Regular","8214","8719","8720","8721","8748","8749","8750","8896","8897","8898","8899","9168","10752","10753","10754","10756","10758","Size2-Regular","Size3-Regular","Size4-Regular","9115","9116","9117","9118","9119","9120","9121","9122","9123","9124","9125","9126","9127","9128","9129","9130","9131","9132","9133","9143","57344","57345","57680","57681","57682","57683","Typewriter-Regular","127","2018","2019","9251","_defineFunction2","_defineFunction3","functions","defineFunction","textFunctionFonts","\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textit","bottomop","fontAliases","\\Bbb","\\bold","\\frak","tbArg","amount","./defineFunction","./functions/delimsizing","./functions/operators","./functions/phantom","_defineFunction","delimiterSizes","\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg","checkDelimiter","innerHeight","innerDepth","hadMiddle","isMiddle","middleDelim","leftNode","rightNode","middleNode","../defineFunction","../delimiter","temp","word","identifier","../domTree","withPhantom","builtinMacros","defineMacro","dotsByToken",",","\\not","+","=","<",">","-","*",":","\\DOTSB","\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\implies","\\impliedby","\\And","\\longrightarrow","\\Longrightarrow","\\longleftarrow","\\Longleftarrow","\\longleftrightarrow","\\Longleftrightarrow","\\mapsto","\\longmapsto","\\hookrightarrow","\\iff","\\doteq","\\mathbin","\\bmod","\\mathrel","\\relbar","\\Relbar","\\xrightarrow","\\xleftarrow","\\DOTSI","\\int","\\oint","\\iint","\\iiint","\\iiiint","\\idotsint","\\DOTSX","thedots","expandAfterFuture","spaceAfterDots",")","]","\\rbrack","\\}","\\rbrace","\\rangle","\\rceil","\\rfloor","\\rgroup","\\rmoustache","\\right","$",";",".","_Parser","_Parser2","toParse","./Parser","stretchyCodePoint","widehat","widetilde","undertilde","overleftarrow","underleftarrow","xleftarrow","overrightarrow","underrightarrow","xrightarrow","underbrace","overbrace","overleftrightarrow","underleftrightarrow","xleftrightarrow","Overrightarrow","xRightarrow","overleftharpoon","xleftharpoonup","overrightharpoon","xrightharpoonup","xLeftarrow","xLeftrightarrow","xhookleftarrow","xhookrightarrow","xmapsto","xrightharpoondown","xleftharpoondown","xrightleftharpoons","xleftrightharpoons","xtwoheadleftarrow","xtwoheadrightarrow","xLongequal","xtofrom","katexImagesData","overlinesegment","underlinesegment","overgroup","undergroup","pad","lines","viewBoxWidth","paths","numChars","_viewBoxHeight","imgIndex","widthClass","spans","_katexImagesData$labe","numSvgChildren","sqrtMain","sqrtSize1","sqrtSize2","sqrtSize3","sqrtSize4","doubleleftarrow","doublerightarrow","leftarrow","leftbrace","leftbraceunder","leftgroup","leftgroupunder","leftharpoon","leftharpoonplus","leftharpoondown","leftharpoondownplus","lefthook","leftlinesegment","leftmapsto","leftToFrom","longequal","midbrace","midbraceunder","rightarrow","rightbrace","rightbraceunder","rightgroup","rightgroupunder","rightharpoon","rightharpoonplus","rightharpoondown","rightharpoondownplus","righthook","rightlinesegment","rightToFrom","twoheadleftarrow","twoheadrightarrow","tilde1","tilde2","tilde3","tilde4","widehat1","widehat2","widehat3","widehat4","defineSymbol","acceptUnicodeChar","main","ams","_ch","letters","_ch2","_ch3","_ch4","_i5","_ch5","_i6","_ch6","ptPerUnit","mm","cm","in","bp","pc","dd","cc","nd","sp","relativeUnit","ex","em","mu","sizeValue","unitOptions","nativeIndexOf","list","uppercase","ESCAPE_LOOKUP","&","\"","'","ESCAPE_REGEX","setTextContent","testNode","textContent","innerText","setting","defaultIfUndefined","toLowerCase"],"mappings":"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A,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,cACAC,OAAA,mBACAC,OAAA,mBACAC,OAAA,mBACAC,OAAA,mBACAC,MAAA,mBACAC,OAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,gBACAC,MAAA,gBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,YACAC,MAAA,YACAC,MAAA,YACAC,MAAA,YACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,cACAC,OAAA,mBACAC,MAAA,cACAC,MAAA,cACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,iBACAC,MAAA,iBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,mBACAC,MAAA,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","file":"vendors~katex.aaa51527.bundle.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.katex = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _ParseError = require(\"./src/ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _Settings = require(\"./src/Settings\");\n\nvar _Settings2 = _interopRequireDefault(_Settings);\n\nvar _buildTree = require(\"./src/buildTree\");\n\nvar _buildTree2 = _interopRequireDefault(_buildTree);\n\nvar _parseTree = require(\"./src/parseTree\");\n\nvar _parseTree2 = _interopRequireDefault(_parseTree);\n\nvar _utils = require(\"./src/utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function render(expression, baseNode, options) {\n    _utils2.default.clearNode(baseNode);\n\n    var settings = new _Settings2.default(options);\n\n    var tree = (0, _parseTree2.default)(expression, settings);\n    var node = (0, _buildTree2.default)(tree, expression, settings).toNode();\n\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n        render = function render() {\n            throw new _ParseError2.default(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function renderToString(expression, options) {\n    var settings = new _Settings2.default(options);\n\n    var tree = (0, _parseTree2.default)(expression, settings);\n    return (0, _buildTree2.default)(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function generateParseTree(expression, options) {\n    var settings = new _Settings2.default(options);\n    return (0, _parseTree2.default)(expression, settings);\n};\n\nmodule.exports = {\n    render: render,\n    renderToString: renderToString,\n    /**\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: generateParseTree,\n    ParseError: _ParseError2.default\n};\n\n},{\"./src/ParseError\":84,\"./src/Settings\":87,\"./src/buildTree\":94,\"./src/parseTree\":109,\"./src/utils\":115}],2:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n},{\"core-js/library/fn/array/from\":12}],3:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n},{\"core-js/library/fn/get-iterator\":13}],4:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/is-iterable\"), __esModule: true };\n},{\"core-js/library/fn/is-iterable\":14}],5:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/json/stringify\"), __esModule: true };\n},{\"core-js/library/fn/json/stringify\":15}],6:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n},{\"core-js/library/fn/object/define-property\":16}],7:[function(require,module,exports){\nmodule.exports = { \"default\": require(\"core-js/library/fn/object/freeze\"), __esModule: true };\n},{\"core-js/library/fn/object/freeze\":17}],8:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n},{}],9:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n},{\"../core-js/object/define-property\":6}],10:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n},{\"../core-js/get-iterator\":3,\"../core-js/is-iterable\":4}],11:[function(require,module,exports){\n\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n},{\"../core-js/array/from\":2}],12:[function(require,module,exports){\nrequire('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n},{\"../../modules/_core\":24,\"../../modules/es6.array.from\":73,\"../../modules/es6.string.iterator\":77}],13:[function(require,module,exports){\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n},{\"../modules/core.get-iterator\":71,\"../modules/es6.string.iterator\":77,\"../modules/web.dom.iterable\":78}],14:[function(require,module,exports){\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n\n},{\"../modules/core.is-iterable\":72,\"../modules/es6.string.iterator\":77,\"../modules/web.dom.iterable\":78}],15:[function(require,module,exports){\nvar core = require('../../modules/_core');\nvar $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });\nmodule.exports = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n},{\"../../modules/_core\":24}],16:[function(require,module,exports){\nrequire('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n},{\"../../modules/_core\":24,\"../../modules/es6.object.define-property\":75}],17:[function(require,module,exports){\nrequire('../../modules/es6.object.freeze');\nmodule.exports = require('../../modules/_core').Object.freeze;\n\n},{\"../../modules/_core\":24,\"../../modules/es6.object.freeze\":76}],18:[function(require,module,exports){\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n},{}],19:[function(require,module,exports){\nmodule.exports = function () { /* empty */ };\n\n},{}],20:[function(require,module,exports){\nvar isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n},{\"./_is-object\":40}],21:[function(require,module,exports){\n// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n},{\"./_to-absolute-index\":62,\"./_to-iobject\":64,\"./_to-length\":65}],22:[function(require,module,exports){\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n},{\"./_cof\":23,\"./_wks\":69}],23:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n},{}],24:[function(require,module,exports){\nvar core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n},{}],25:[function(require,module,exports){\n'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n},{\"./_object-dp\":50,\"./_property-desc\":56}],26:[function(require,module,exports){\n// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n},{\"./_a-function\":18}],27:[function(require,module,exports){\n// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n},{}],28:[function(require,module,exports){\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n},{\"./_fails\":32}],29:[function(require,module,exports){\nvar isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n},{\"./_global\":33,\"./_is-object\":40}],30:[function(require,module,exports){\n// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n},{}],31:[function(require,module,exports){\nvar global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && key in exports) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n},{\"./_core\":24,\"./_ctx\":26,\"./_global\":33,\"./_hide\":35}],32:[function(require,module,exports){\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n},{}],33:[function(require,module,exports){\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n},{}],34:[function(require,module,exports){\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n},{}],35:[function(require,module,exports){\nvar dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n},{\"./_descriptors\":28,\"./_object-dp\":50,\"./_property-desc\":56}],36:[function(require,module,exports){\nvar document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n},{\"./_global\":33}],37:[function(require,module,exports){\nmodule.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n},{\"./_descriptors\":28,\"./_dom-create\":29,\"./_fails\":32}],38:[function(require,module,exports){\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n},{\"./_cof\":23}],39:[function(require,module,exports){\n// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n},{\"./_iterators\":46,\"./_wks\":69}],40:[function(require,module,exports){\nmodule.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n},{}],41:[function(require,module,exports){\n// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n},{\"./_an-object\":20}],42:[function(require,module,exports){\n'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n},{\"./_hide\":35,\"./_object-create\":49,\"./_property-desc\":56,\"./_set-to-string-tag\":58,\"./_wks\":69}],43:[function(require,module,exports){\n'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n},{\"./_export\":31,\"./_has\":34,\"./_hide\":35,\"./_iter-create\":42,\"./_iterators\":46,\"./_library\":47,\"./_object-gpo\":52,\"./_redefine\":57,\"./_set-to-string-tag\":58,\"./_wks\":69}],44:[function(require,module,exports){\nvar ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n},{\"./_wks\":69}],45:[function(require,module,exports){\nmodule.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n},{}],46:[function(require,module,exports){\nmodule.exports = {};\n\n},{}],47:[function(require,module,exports){\nmodule.exports = true;\n\n},{}],48:[function(require,module,exports){\nvar META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n},{\"./_fails\":32,\"./_has\":34,\"./_is-object\":40,\"./_object-dp\":50,\"./_uid\":68}],49:[function(require,module,exports){\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n},{\"./_an-object\":20,\"./_dom-create\":29,\"./_enum-bug-keys\":30,\"./_html\":36,\"./_object-dps\":51,\"./_shared-key\":59}],50:[function(require,module,exports){\nvar anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n},{\"./_an-object\":20,\"./_descriptors\":28,\"./_ie8-dom-define\":37,\"./_to-primitive\":67}],51:[function(require,module,exports){\nvar dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n},{\"./_an-object\":20,\"./_descriptors\":28,\"./_object-dp\":50,\"./_object-keys\":54}],52:[function(require,module,exports){\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n},{\"./_has\":34,\"./_shared-key\":59,\"./_to-object\":66}],53:[function(require,module,exports){\nvar has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n},{\"./_array-includes\":21,\"./_has\":34,\"./_shared-key\":59,\"./_to-iobject\":64}],54:[function(require,module,exports){\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n},{\"./_enum-bug-keys\":30,\"./_object-keys-internal\":53}],55:[function(require,module,exports){\n// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n},{\"./_core\":24,\"./_export\":31,\"./_fails\":32}],56:[function(require,module,exports){\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n},{}],57:[function(require,module,exports){\nmodule.exports = require('./_hide');\n\n},{\"./_hide\":35}],58:[function(require,module,exports){\nvar def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n},{\"./_has\":34,\"./_object-dp\":50,\"./_wks\":69}],59:[function(require,module,exports){\nvar shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n},{\"./_shared\":60,\"./_uid\":68}],60:[function(require,module,exports){\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n},{\"./_global\":33}],61:[function(require,module,exports){\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n},{\"./_defined\":27,\"./_to-integer\":63}],62:[function(require,module,exports){\nvar toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n},{\"./_to-integer\":63}],63:[function(require,module,exports){\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n},{}],64:[function(require,module,exports){\n// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n},{\"./_defined\":27,\"./_iobject\":38}],65:[function(require,module,exports){\n// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n},{\"./_to-integer\":63}],66:[function(require,module,exports){\n// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n},{\"./_defined\":27}],67:[function(require,module,exports){\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n},{\"./_is-object\":40}],68:[function(require,module,exports){\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n},{}],69:[function(require,module,exports){\nvar store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n},{\"./_global\":33,\"./_shared\":60,\"./_uid\":68}],70:[function(require,module,exports){\nvar classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n},{\"./_classof\":22,\"./_core\":24,\"./_iterators\":46,\"./_wks\":69}],71:[function(require,module,exports){\nvar anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n},{\"./_an-object\":20,\"./_core\":24,\"./core.get-iterator-method\":70}],72:[function(require,module,exports){\nvar classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n\n},{\"./_classof\":22,\"./_core\":24,\"./_iterators\":46,\"./_wks\":69}],73:[function(require,module,exports){\n'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n},{\"./_create-property\":25,\"./_ctx\":26,\"./_export\":31,\"./_is-array-iter\":39,\"./_iter-call\":41,\"./_iter-detect\":44,\"./_to-length\":65,\"./_to-object\":66,\"./core.get-iterator-method\":70}],74:[function(require,module,exports){\n'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n},{\"./_add-to-unscopables\":19,\"./_iter-define\":43,\"./_iter-step\":45,\"./_iterators\":46,\"./_to-iobject\":64}],75:[function(require,module,exports){\nvar $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n},{\"./_descriptors\":28,\"./_export\":31,\"./_object-dp\":50}],76:[function(require,module,exports){\n// 19.1.2.5 Object.freeze(O)\nvar isObject = require('./_is-object');\nvar meta = require('./_meta').onFreeze;\n\nrequire('./_object-sap')('freeze', function ($freeze) {\n  return function freeze(it) {\n    return $freeze && isObject(it) ? $freeze(meta(it)) : it;\n  };\n});\n\n},{\"./_is-object\":40,\"./_meta\":48,\"./_object-sap\":55}],77:[function(require,module,exports){\n'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n},{\"./_iter-define\":43,\"./_string-at\":61}],78:[function(require,module,exports){\nrequire('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n},{\"./_global\":33,\"./_hide\":35,\"./_iterators\":46,\"./_wks\":69,\"./es6.array.iterator\":74}],79:[function(require,module,exports){\nfunction getRelocatable(re) {\n  // In the future, this could use a WeakMap instead of an expando.\n  if (!re.__matchAtRelocatable) {\n    // Disjunctions are the lowest-precedence operator, so we can make any\n    // pattern match the empty string by appending `|()` to it:\n    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-patterns\n    var source = re.source + '|()';\n\n    // We always make the new regex global.\n    var flags = 'g' + (re.ignoreCase ? 'i' : '') + (re.multiline ? 'm' : '') + (re.unicode ? 'u' : '')\n    // sticky (/.../y) doesn't make sense in conjunction with our relocation\n    // logic, so we ignore it here.\n    ;\n\n    re.__matchAtRelocatable = new RegExp(source, flags);\n  }\n  return re.__matchAtRelocatable;\n}\n\nfunction matchAt(re, str, pos) {\n  if (re.global || re.sticky) {\n    throw new Error('matchAt(...): Only non-global regexes are supported');\n  }\n  var reloc = getRelocatable(re);\n  reloc.lastIndex = pos;\n  var match = reloc.exec(str);\n  // Last capturing group is our sentinel that indicates whether the regex\n  // matched at the given location.\n  if (match[match.length - 1] == null) {\n    // Original regex matched.\n    match.length = match.length - 1;\n    return match;\n  } else {\n    return null;\n  }\n}\n\nmodule.exports = matchAt;\n},{}],80:[function(require,module,exports){\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n},{}],81:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.controlWordRegex = undefined;\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _matchAt = require(\"match-at\");\n\nvar _matchAt2 = _interopRequireDefault(_matchAt);\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _SourceLocation = require(\"./SourceLocation\");\n\nvar _SourceLocation2 = _interopRequireDefault(_SourceLocation);\n\nvar _Token = require(\"./Token\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - matches comments (must have trailing newlines)\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\nvar commentRegexString = \"%[^\\n]*[\\n]\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar tokenRegex = new RegExp(\"([ \\r\\n\\t]+)|\" + ( // whitespace\n\"(\" + commentRegexString + \"|\") + // comments\n\"[!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + // single codepoint\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + // surrogate pair\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + ( // \\verb unstarred\n\"|\" + controlWordRegexString) + ( // \\macroName\n\"|\" + controlSymbolRegexString) + // \\\\, \\', etc.\n\")\");\n\n// tokenRegex has no ^ marker, as required by matchAt.\n// These regexs are for matching results from tokenRegex,\n// so they do have ^ markers.\nvar controlWordRegex = exports.controlWordRegex = new RegExp(\"^\" + controlWordRegexString);\nvar commentRegex = new RegExp(\"^\" + commentRegexString);\n\n/** Main Lexer class */\n\nvar Lexer = function () {\n    function Lexer(input) {\n        (0, _classCallCheck3.default)(this, Lexer);\n\n        this.input = input;\n        this.pos = 0;\n    }\n\n    /**\n     * This function lexes a single token.\n     */\n\n\n    (0, _createClass3.default)(Lexer, [{\n        key: \"lex\",\n        value: function lex() {\n            var input = this.input;\n            var pos = this.pos;\n            if (pos === input.length) {\n                return new _Token.Token(\"EOF\", new _SourceLocation2.default(this, pos, pos));\n            }\n            var match = (0, _matchAt2.default)(tokenRegex, input, pos);\n            if (match === null) {\n                throw new _ParseError2.default(\"Unexpected character: '\" + input[pos] + \"'\", new _Token.Token(input[pos], new _SourceLocation2.default(this, pos, pos + 1)));\n            }\n            var text = match[2] || \" \";\n            var start = this.pos;\n            this.pos += match[0].length;\n            var end = this.pos;\n\n            if (commentRegex.test(text)) {\n                return this.lex();\n            } else {\n                return new _Token.Token(text, new _SourceLocation2.default(this, start, end));\n            }\n        }\n    }]);\n    return Lexer;\n}();\n\nexports.default = Lexer;\n\n},{\"./ParseError\":84,\"./SourceLocation\":88,\"./Token\":90,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9,\"match-at\":79}],82:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _toConsumableArray2 = require(\"babel-runtime/helpers/toConsumableArray\");\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _Lexer = require(\"./Lexer\");\n\nvar _Lexer2 = _interopRequireDefault(_Lexer);\n\nvar _Token = require(\"./Token\");\n\nvar _macros = require(\"./macros\");\n\nvar _macros2 = _interopRequireDefault(_macros);\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MacroExpander = function () {\n    function MacroExpander(input, macros) {\n        (0, _classCallCheck3.default)(this, MacroExpander);\n\n        this.lexer = new _Lexer2.default(input);\n        this.macros = (0, _objectAssign2.default)({}, _macros2.default, macros);\n        this.stack = []; // contains tokens in REVERSE order\n    }\n\n    /**\n     * Returns the topmost token on the stack, without expanding it.\n     * Similar in behavior to TeX's `\\futurelet`.\n     */\n\n\n    (0, _createClass3.default)(MacroExpander, [{\n        key: \"future\",\n        value: function future() {\n            if (this.stack.length === 0) {\n                this.pushToken(this.lexer.lex());\n            }\n            return this.stack[this.stack.length - 1];\n        }\n\n        /**\n         * Remove and return the next unexpanded token.\n         */\n\n    }, {\n        key: \"popToken\",\n        value: function popToken() {\n            this.future(); // ensure non-empty stack\n            return this.stack.pop();\n        }\n\n        /**\n         * Consume all following space tokens, without expansion.\n         */\n\n    }, {\n        key: \"consumeSpaces\",\n        value: function consumeSpaces() {\n            for (;;) {\n                var token = this.future();\n                if (token.text === \" \") {\n                    this.stack.pop();\n                } else {\n                    break;\n                }\n            }\n        }\n\n        /**\n         * Expand the next token only once if possible.\n         *\n         * If the token is expanded, the resulting tokens will be pushed onto\n         * the stack in reverse order and will be returned as an array,\n         * also in reverse order.\n         *\n         * If not, the next token will be returned without removing it\n         * from the stack.  This case can be detected by a `Token` return value\n         * instead of an `Array` return value.\n         *\n         * In either case, the next token will be on the top of the stack,\n         * or the stack will be empty.\n         *\n         * Used to implement `expandAfterFuture` and `expandNextToken`.\n         *\n         * At the moment, macro expansion doesn't handle delimited macros,\n         * i.e. things like those defined by \\def\\foo#1\\end{…}.\n         * See the TeX book page 202ff. for details on how those should behave.\n         */\n\n    }, {\n        key: \"expandOnce\",\n        value: function expandOnce() {\n            var _stack;\n\n            var topToken = this.popToken();\n            var name = topToken.text;\n            var isMacro = name.charAt(0) === \"\\\\\";\n            if (isMacro && _Lexer.controlWordRegex.test(name)) {\n                // Consume all spaces after \\macro (but not \\\\, \\', etc.)\n                this.consumeSpaces();\n            }\n            if (!(isMacro && this.macros.hasOwnProperty(name))) {\n                // Fully expanded\n                this.pushToken(topToken);\n                return topToken;\n            }\n\n            var _getExpansion2 = this._getExpansion(name),\n                tokens = _getExpansion2.tokens,\n                numArgs = _getExpansion2.numArgs;\n\n            var expansion = tokens;\n            if (numArgs) {\n                var args = [];\n                // obtain arguments, either single token or balanced {…} group\n                for (var i = 0; i < numArgs; ++i) {\n                    this.consumeSpaces(); // ignore spaces before each argument\n                    var startOfArg = this.popToken();\n                    if (startOfArg.text === \"{\") {\n                        var arg = [];\n                        var depth = 1;\n                        while (depth !== 0) {\n                            var tok = this.popToken();\n                            arg.push(tok);\n                            if (tok.text === \"{\") {\n                                ++depth;\n                            } else if (tok.text === \"}\") {\n                                --depth;\n                            } else if (tok.text === \"EOF\") {\n                                throw new _ParseError2.default(\"End of input in macro argument\", startOfArg);\n                            }\n                        }\n                        arg.pop(); // remove last }\n                        arg.reverse(); // like above, to fit in with stack order\n                        args[i] = arg;\n                    } else if (startOfArg.text === \"EOF\") {\n                        throw new _ParseError2.default(\"End of input expecting macro argument\", topToken);\n                    } else {\n                        args[i] = [startOfArg];\n                    }\n                }\n                // paste arguments in place of the placeholders\n                expansion = expansion.slice(); // make a shallow copy\n                for (var _i = expansion.length - 1; _i >= 0; --_i) {\n                    var _tok = expansion[_i];\n                    if (_tok.text === \"#\") {\n                        if (_i === 0) {\n                            throw new _ParseError2.default(\"Incomplete placeholder at end of macro body\", _tok);\n                        }\n                        _tok = expansion[--_i]; // next token on stack\n                        if (_tok.text === \"#\") {\n                            // ## → #\n                            expansion.splice(_i + 1, 1); // drop first #\n                        } else if (/^[1-9]$/.test(_tok.text)) {\n                            var _expansion;\n\n                            // replace the placeholder with the indicated argument\n                            (_expansion = expansion).splice.apply(_expansion, [_i, 2].concat((0, _toConsumableArray3.default)(args[+_tok.text - 1])));\n                        } else {\n                            throw new _ParseError2.default(\"Not a valid argument number\", _tok);\n                        }\n                    }\n                }\n            }\n            // Concatenate expansion onto top of stack.\n            (_stack = this.stack).push.apply(_stack, (0, _toConsumableArray3.default)(expansion));\n            return expansion;\n        }\n\n        /**\n         * Expand the next token only once (if possible), and return the resulting\n         * top token on the stack (without removing anything from the stack).\n         * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n         * Equivalent to expandOnce() followed by future().\n         */\n\n    }, {\n        key: \"expandAfterFuture\",\n        value: function expandAfterFuture() {\n            this.expandOnce();\n            return this.future();\n        }\n\n        /**\n         * Recursively expand first token, then return first non-expandable token.\n         */\n\n    }, {\n        key: \"expandNextToken\",\n        value: function expandNextToken() {\n            for (;;) {\n                var expanded = this.expandOnce();\n                // expandOnce returns Token if and only if it's fully expanded.\n                if (expanded instanceof _Token.Token) {\n                    // \\relax stops the expansion, but shouldn't get returned (a\n                    // null return value couldn't get implemented as a function).\n                    if (expanded.text === \"\\\\relax\") {\n                        this.stack.pop();\n                    } else {\n                        return this.stack.pop(); // === expanded\n                    }\n                }\n            }\n\n            // Flow unable to figure out that this pathway is impossible.\n            // https://github.com/facebook/flow/issues/4808\n            throw new Error(); // eslint-disable-line no-unreachable\n        }\n\n        /**\n         * Returns the expanded macro as a reversed array of tokens and a macro\n         * argument count.\n         * Caches macro expansions for those that were defined simple TeX strings.\n         */\n\n    }, {\n        key: \"_getExpansion\",\n        value: function _getExpansion(name) {\n            var definition = this.macros[name];\n            var expansion = typeof definition === \"function\" ? definition(this) : definition;\n            if (typeof expansion === \"string\") {\n                var numArgs = 0;\n                if (expansion.indexOf(\"#\") !== -1) {\n                    var stripped = expansion.replace(/##/g, \"\");\n                    while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n                        ++numArgs;\n                    }\n                }\n                var bodyLexer = new _Lexer2.default(expansion);\n                var tokens = [];\n                var tok = bodyLexer.lex();\n                while (tok.text !== \"EOF\") {\n                    tokens.push(tok);\n                    tok = bodyLexer.lex();\n                }\n                tokens.reverse(); // to fit in with stack using push and pop\n                var expanded = { tokens: tokens, numArgs: numArgs };\n                // Cannot cache a macro defined using a function since it relies on\n                // parser context.\n                if (typeof definition !== \"function\") {\n                    this.macros[name] = expanded;\n                }\n                return expanded;\n            }\n\n            return expansion;\n        }\n\n        /**\n         * Add a given token to the token stack.  In particular, this get be used\n         * to put back a token returned from one of the other methods.\n         */\n\n    }, {\n        key: \"pushToken\",\n        value: function pushToken(token) {\n            this.stack.push(token);\n        }\n    }]);\n    return MacroExpander;\n}();\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\nexports.default = MacroExpander;\n\n},{\"./Lexer\":81,\"./ParseError\":84,\"./Token\":90,\"./macros\":107,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9,\"babel-runtime/helpers/toConsumableArray\":11,\"object-assign\":80}],83:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _fontMetrics2 = require(\"./fontMetrics\");\n\nvar _fontMetrics3 = _interopRequireDefault(_fontMetrics2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar sizeStyleMap = [\n// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\nvar sizeMultipliers = [\n// fontMetrics.js:getFontMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n    return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n};\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nvar Options = function () {\n    function Options(data) {\n        (0, _classCallCheck3.default)(this, Options);\n\n        this.style = data.style;\n        this.color = data.color;\n        this.size = data.size || Options.BASESIZE;\n        this.textSize = data.textSize || this.size;\n        this.phantom = !!data.phantom;\n        this.font = data.font;\n        this.sizeMultiplier = sizeMultipliers[this.size - 1];\n        this.maxSize = data.maxSize;\n        this._fontMetrics = undefined;\n    }\n\n    /**\n     * Returns a new options object with the same properties as \"this\".  Properties\n     * from \"extension\" will be copied to the new options object.\n     */\n\n\n    /**\n     * The base size index.\n     */\n\n\n    (0, _createClass3.default)(Options, [{\n        key: \"extend\",\n        value: function extend(extension) {\n            var data = {\n                style: this.style,\n                size: this.size,\n                textSize: this.textSize,\n                color: this.color,\n                phantom: this.phantom,\n                font: this.font,\n                maxSize: this.maxSize\n            };\n\n            for (var key in extension) {\n                if (extension.hasOwnProperty(key)) {\n                    data[key] = extension[key];\n                }\n            }\n\n            return new Options(data);\n        }\n\n        /**\n         * Return an options object with the given style. If `this.style === style`,\n         * returns `this`.\n         */\n\n    }, {\n        key: \"havingStyle\",\n        value: function havingStyle(style) {\n            if (this.style === style) {\n                return this;\n            } else {\n                return this.extend({\n                    style: style,\n                    size: sizeAtStyle(this.textSize, style)\n                });\n            }\n        }\n\n        /**\n         * Return an options object with a cramped version of the current style. If\n         * the current style is cramped, returns `this`.\n         */\n\n    }, {\n        key: \"havingCrampedStyle\",\n        value: function havingCrampedStyle() {\n            return this.havingStyle(this.style.cramp());\n        }\n\n        /**\n         * Return an options object with the given size and in at least `\\textstyle`.\n         * Returns `this` if appropriate.\n         */\n\n    }, {\n        key: \"havingSize\",\n        value: function havingSize(size) {\n            if (this.size === size && this.textSize === size) {\n                return this;\n            } else {\n                return this.extend({\n                    style: this.style.text(),\n                    size: size,\n                    textSize: size\n                });\n            }\n        }\n\n        /**\n         * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n         * changes to at least `\\textstyle`.\n         */\n\n    }, {\n        key: \"havingBaseStyle\",\n        value: function havingBaseStyle(style) {\n            style = style || this.style.text();\n            var wantSize = sizeAtStyle(Options.BASESIZE, style);\n            if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n                return this;\n            } else {\n                return this.extend({\n                    style: style,\n                    size: wantSize\n                });\n            }\n        }\n\n        /**\n         * Create a new options object with the given color.\n         */\n\n    }, {\n        key: \"withColor\",\n        value: function withColor(color) {\n            return this.extend({\n                color: color\n            });\n        }\n\n        /**\n         * Create a new options object with \"phantom\" set to true.\n         */\n\n    }, {\n        key: \"withPhantom\",\n        value: function withPhantom() {\n            return this.extend({\n                phantom: true\n            });\n        }\n\n        /**\n         * Create a new options objects with the give font.\n         */\n\n    }, {\n        key: \"withFont\",\n        value: function withFont(font) {\n            return this.extend({\n                font: font || this.font\n            });\n        }\n\n        /**\n         * Return the CSS sizing classes required to switch from enclosing options\n         * `oldOptions` to `this`. Returns an array of classes.\n         */\n\n    }, {\n        key: \"sizingClasses\",\n        value: function sizingClasses(oldOptions) {\n            if (oldOptions.size !== this.size) {\n                return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n            } else {\n                return [];\n            }\n        }\n\n        /**\n         * Return the CSS sizing classes required to switch to the base size. Like\n         * `this.havingSize(BASESIZE).sizingClasses(this)`.\n         */\n\n    }, {\n        key: \"baseSizingClasses\",\n        value: function baseSizingClasses() {\n            if (this.size !== Options.BASESIZE) {\n                return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n            } else {\n                return [];\n            }\n        }\n\n        /**\n         * Return the font metrics for this size.\n         */\n\n    }, {\n        key: \"fontMetrics\",\n        value: function fontMetrics() {\n            if (!this._fontMetrics) {\n                this._fontMetrics = _fontMetrics3.default.getFontMetrics(this.size);\n            }\n            return this._fontMetrics;\n        }\n\n        /**\n         * A map of color names to CSS colors.\n         * TODO(emily): Remove this when we have real macros\n         */\n\n    }, {\n        key: \"getColor\",\n\n\n        /**\n         * Gets the CSS color of the current options object, accounting for the\n         * `colorMap`.\n         */\n        value: function getColor() {\n            if (this.phantom) {\n                return \"transparent\";\n            } else if (this.color != null && Options.colorMap.hasOwnProperty(this.color)) {\n                return Options.colorMap[this.color];\n            } else {\n                return this.color;\n            }\n        }\n    }]);\n    return Options;\n}();\n\nOptions.BASESIZE = 6;\nOptions.colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#ccfaff\",\n    \"katex-blueB\": \"#80f6ff\",\n    \"katex-blueC\": \"#63d9ea\",\n    \"katex-blueD\": \"#11accd\",\n    \"katex-blueE\": \"#0c7f99\",\n    \"katex-tealA\": \"#94fff5\",\n    \"katex-tealB\": \"#26edd5\",\n    \"katex-tealC\": \"#01d1c1\",\n    \"katex-tealD\": \"#01a995\",\n    \"katex-tealE\": \"#208170\",\n    \"katex-greenA\": \"#b6ffb0\",\n    \"katex-greenB\": \"#8af281\",\n    \"katex-greenC\": \"#74cf70\",\n    \"katex-greenD\": \"#1fab54\",\n    \"katex-greenE\": \"#0d923f\",\n    \"katex-goldA\": \"#ffd0a9\",\n    \"katex-goldB\": \"#ffbb71\",\n    \"katex-goldC\": \"#ff9c39\",\n    \"katex-goldD\": \"#e07d10\",\n    \"katex-goldE\": \"#a75a05\",\n    \"katex-redA\": \"#fca9a9\",\n    \"katex-redB\": \"#ff8482\",\n    \"katex-redC\": \"#f9685d\",\n    \"katex-redD\": \"#e84d39\",\n    \"katex-redE\": \"#bc2612\",\n    \"katex-maroonA\": \"#ffbde0\",\n    \"katex-maroonB\": \"#ff92c6\",\n    \"katex-maroonC\": \"#ed5fa6\",\n    \"katex-maroonD\": \"#ca337c\",\n    \"katex-maroonE\": \"#9e034e\",\n    \"katex-purpleA\": \"#ddd7ff\",\n    \"katex-purpleB\": \"#c6b9fc\",\n    \"katex-purpleC\": \"#aa87ff\",\n    \"katex-purpleD\": \"#7854ab\",\n    \"katex-purpleE\": \"#543b78\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#f6f7f7\",\n    \"katex-grayB\": \"#f0f1f2\",\n    \"katex-grayC\": \"#e3e5e6\",\n    \"katex-grayD\": \"#d6d8da\",\n    \"katex-grayE\": \"#babec2\",\n    \"katex-grayF\": \"#888d93\",\n    \"katex-grayG\": \"#626569\",\n    \"katex-grayH\": \"#3b3e40\",\n    \"katex-grayI\": \"#21242c\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#71B307\"\n};\nexports.default = Options;\n\n},{\"./fontMetrics\":101,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9}],84:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _ParseNode = require(\"./ParseNode\");\n\nvar _ParseNode2 = _interopRequireDefault(_ParseNode);\n\nvar _Token = require(\"./Token\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nvar ParseError =\n// Error position based on passed-in Token or ParseNode.\n\nfunction ParseError(message, // The error message\ntoken) // An object providing position information\n{\n    (0, _classCallCheck3.default)(this, ParseError);\n\n    var error = \"KaTeX parse error: \" + message;\n    var start = void 0;\n\n    var loc = token && token.loc;\n    if (loc && loc.start <= loc.end) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Get the input\n        var input = loc.lexer.input;\n\n        // Prepend some information\n        start = loc.start;\n        var end = loc.end;\n        if (start === input.length) {\n            error += \" at end of input: \";\n        } else {\n            error += \" at position \" + (start + 1) + \": \";\n        }\n\n        // Underline token in question using combining underscores\n        var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\");\n\n        // Extract some context from the input and add it to the error\n        var left = void 0;\n        if (start > 15) {\n            left = \"…\" + input.slice(start - 15, start);\n        } else {\n            left = input.slice(0, start);\n        }\n        var right = void 0;\n        if (end + 15 < input.length) {\n            right = input.slice(end, end + 15) + \"…\";\n        } else {\n            right = input.slice(end);\n        }\n        error += left + underlined + right;\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    // $FlowFixMe\n    self.__proto__ = ParseError.prototype;\n    // $FlowFixMe\n    self.position = start;\n    return self;\n};\n\n// $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n\nexports.default = ParseError;\n\n},{\"./ParseNode\":85,\"./Token\":90,\"babel-runtime/helpers/classCallCheck\":8}],85:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _Token = require(\"./Token\");\n\nvar _SourceLocation = require(\"./SourceLocation\");\n\nvar _SourceLocation2 = _interopRequireDefault(_SourceLocation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The resulting parse tree nodes of the parse tree.\n *\n * It is possible to provide position information, so that a `ParseNode` can\n * fulfill a role similar to a `Token` in error reporting.\n * For details on the corresponding properties see `Token` constructor.\n * Providing such information can lead to better error reporting.\n */\nvar ParseNode = function ParseNode(type, // type of node, like e.g. \"ordgroup\"\nvalue, // type-specific representation of the node\nmode, // parse mode in action for this node, \"math\" or \"text\"\nfirstToken, // first token of the input for this node,\nlastToken) // last token of the input for this node,\n// will default to firstToken if unset\n{\n    (0, _classCallCheck3.default)(this, ParseNode);\n\n    this.type = type;\n    this.value = value;\n    this.mode = mode;\n    this.loc = _SourceLocation2.default.range(firstToken, lastToken);\n};\n\nexports.default = ParseNode;\n\n},{\"./SourceLocation\":88,\"./Token\":90,\"babel-runtime/helpers/classCallCheck\":8}],86:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _functions = require(\"./functions\");\n\nvar _functions2 = _interopRequireDefault(_functions);\n\nvar _environments = require(\"./environments\");\n\nvar _environments2 = _interopRequireDefault(_environments);\n\nvar _MacroExpander = require(\"./MacroExpander\");\n\nvar _MacroExpander2 = _interopRequireDefault(_MacroExpander);\n\nvar _symbols = require(\"./symbols\");\n\nvar _symbols2 = _interopRequireDefault(_symbols);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _units = require(\"./units\");\n\nvar _unicodeRegexes = require(\"./unicodeRegexes\");\n\nvar _ParseNode = require(\"./ParseNode\");\n\nvar _ParseNode2 = _interopRequireDefault(_ParseNode);\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return ParseNodes.\n * The later functions (which are called deeper in the parse) sometimes return\n * ParsedFuncOrArgOrDollar, which contain a ParseNode as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\n/* TODO: Uncomment when porting to flow.\ntype ParsedType = \"fn\" | \"arg\" | \"$\"\ntype ParsedFunc = {|\n    type: \"fn\",\n    result: string, // Function name defined via defineFunction (e.g. \"\\\\frac\").\n    token: Token,\n|};\ntype ParsedArg = {|\n    type: \"arg\",\n    result: ParseNode,\n    token: Token,\n|};\ntype ParsedDollar = {|\n    // Math mode switch\n    type: \"$\",\n    result: \"$\",\n    token: Token,\n|};\ntype ParsedFuncOrArgOrDollar = ParsedFunc | ParsedArg | ParsedDollar;\n*/\n\n/**\n * @param {ParseNode} result\n * @param {Token} token\n * @return {ParsedArg}\n */\nfunction newArgument(result, token) {\n    return { type: \"arg\", result: result, token: token };\n}\n\n/**\n * @param {Token} token\n * @return {ParsedFunc}\n */\n/* eslint no-constant-condition:0 */\nfunction newFunction(token) {\n    return { type: \"fn\", result: token.text, token: token };\n}\n\n/**\n * @param {Token} token\n * @return {ParsedDollar}\n */\nfunction newDollar(token) {\n    return { type: \"$\", result: \"$\", token: token };\n}\n\n/**\n * @param {ParsedFuncOrArgOrDollar} parsed\n * @return {ParsedFuncOrArg}\n */\nfunction assertFuncOrArg(parsed) {\n    if (parsed.type === \"$\") {\n        throw new _ParseError2.default(\"Unexpected $\", parsed.token);\n    }\n    return parsed;\n}\n\nvar Parser = function () {\n    function Parser(input, settings) {\n        (0, _classCallCheck3.default)(this, Parser);\n\n        // Create a new macro expander (gullet) and (indirectly via that) also a\n        // new lexer (mouth) for this parser (stomach, in the language of TeX)\n        this.gullet = new _MacroExpander2.default(input, settings.macros);\n        // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n        // We do this after the macros object has been copied by MacroExpander.\n        if (settings.colorIsTextColor) {\n            this.gullet.macros[\"\\\\color\"] = \"\\\\textcolor\";\n        }\n        // Store the settings for use in parsing\n        this.settings = settings;\n        // Count leftright depth (for \\middle errors)\n        this.leftrightDepth = 0;\n    }\n\n    /**\n     * Checks a result to make sure it has the right type, and throws an\n     * appropriate error otherwise.\n     *\n     * @param {boolean=} consume whether to consume the expected token,\n     *                           defaults to true\n     */\n\n\n    (0, _createClass3.default)(Parser, [{\n        key: \"expect\",\n        value: function expect(text, consume) {\n            if (this.nextToken.text !== text) {\n                throw new _ParseError2.default(\"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\", this.nextToken);\n            }\n            if (consume !== false) {\n                this.consume();\n            }\n        }\n\n        /**\n         * Considers the current look ahead token as consumed,\n         * and fetches the one after that as the new look ahead.\n         */\n\n    }, {\n        key: \"consume\",\n        value: function consume() {\n            this.nextToken = this.gullet.expandNextToken();\n        }\n\n        /**\n         * Switches between \"text\" and \"math\" modes.\n         */\n\n    }, {\n        key: \"switchMode\",\n        value: function switchMode(newMode) {\n            this.mode = newMode;\n        }\n\n        /**\n         * Main parsing function, which parses an entire input.\n         *\n         * @return {Array.<ParseNode>}\n         */\n\n    }, {\n        key: \"parse\",\n        value: function parse() {\n            // Try to parse the input\n            this.mode = \"math\";\n            this.consume();\n            var parse = this.parseInput();\n            return parse;\n        }\n\n        /**\n         * Parses an entire input tree.\n         */\n\n    }, {\n        key: \"parseInput\",\n        value: function parseInput() {\n            // Parse an expression\n            var expression = this.parseExpression(false);\n            // If we succeeded, make sure there's an EOF at the end\n            this.expect(\"EOF\", false);\n            return expression;\n        }\n    }, {\n        key: \"parseExpression\",\n\n\n        /**\n         * Parses an \"expression\", which is a list of atoms.\n         *\n         * @param {boolean} breakOnInfix  Should the parsing stop when we hit infix\n         *                  nodes? This happens when functions have higher precendence\n         *                  than infix nodes in implicit parses.\n         *\n         * @param {?string} breakOnTokenText  The text of the token that the expression\n         *                  should end with, or `null` if something else should end the\n         *                  expression.\n         *\n         * @return {Array<ParseNode>}\n         */\n        value: function parseExpression(breakOnInfix, breakOnTokenText) {\n            var body = [];\n            // Keep adding atoms to the body until we can't parse any more atoms (either\n            // we reached the end, a }, or a \\right)\n            while (true) {\n                // Ignore spaces in math mode\n                if (this.mode === \"math\") {\n                    this.consumeSpaces();\n                }\n                var lex = this.nextToken;\n                if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n                    break;\n                }\n                if (breakOnTokenText && lex.text === breakOnTokenText) {\n                    break;\n                }\n                if (breakOnInfix && _functions2.default[lex.text] && _functions2.default[lex.text].infix) {\n                    break;\n                }\n                var atom = this.parseAtom(breakOnTokenText);\n                if (!atom) {\n                    if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                        var errorNode = this.handleUnsupportedCmd();\n                        body.push(errorNode);\n                        continue;\n                    }\n\n                    break;\n                }\n                body.push(atom);\n            }\n            return this.handleInfixNodes(body);\n        }\n\n        /**\n         * Rewrites infix operators such as \\over with corresponding commands such\n         * as \\frac.\n         *\n         * There can only be one infix operator per group.  If there's more than one\n         * then the expression is ambiguous.  This can be resolved by adding {}.\n         *\n         * @param {Array<ParseNode>} body\n         * @return {Array<ParseNode>}\n         */\n\n    }, {\n        key: \"handleInfixNodes\",\n        value: function handleInfixNodes(body) {\n            var overIndex = -1;\n            var funcName = void 0;\n\n            for (var i = 0; i < body.length; i++) {\n                var node = body[i];\n                if (node.type === \"infix\") {\n                    if (overIndex !== -1) {\n                        throw new _ParseError2.default(\"only one infix operator per group\", node.value.token);\n                    }\n                    overIndex = i;\n                    funcName = node.value.replaceWith;\n                }\n            }\n\n            if (overIndex !== -1) {\n                var numerNode = void 0;\n                var denomNode = void 0;\n\n                var numerBody = body.slice(0, overIndex);\n                var denomBody = body.slice(overIndex + 1);\n\n                if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n                    numerNode = numerBody[0];\n                } else {\n                    numerNode = new _ParseNode2.default(\"ordgroup\", numerBody, this.mode);\n                }\n\n                if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n                    denomNode = denomBody[0];\n                } else {\n                    denomNode = new _ParseNode2.default(\"ordgroup\", denomBody, this.mode);\n                }\n\n                var value = this.callFunction(funcName, [numerNode, denomNode], []);\n                return [new _ParseNode2.default(value.type, value, this.mode)];\n            } else {\n                return body;\n            }\n        }\n\n        // The greediness of a superscript or subscript\n\n    }, {\n        key: \"handleSupSubscript\",\n\n\n        /**\n         * Handle a subscript or superscript with nice errors.\n         * @param {string} name For error reporting.\n         * @return {ParsedNode}\n         */\n        value: function handleSupSubscript(name) {\n            var symbolToken = this.nextToken;\n            var symbol = symbolToken.text;\n            this.consume();\n            this.consumeSpaces(); // ignore spaces before sup/subscript argument\n            var group = this.parseGroup();\n\n            if (!group) {\n                if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n                    return this.handleUnsupportedCmd();\n                } else {\n                    throw new _ParseError2.default(\"Expected group after '\" + symbol + \"'\", symbolToken);\n                }\n            }\n\n            var arg = assertFuncOrArg(group);\n            if (arg.type === \"fn\") {\n                // ^ and _ have a greediness, so handle interactions with functions'\n                // greediness\n                var funcGreediness = _functions2.default[group.result].greediness;\n                if (funcGreediness > Parser.SUPSUB_GREEDINESS) {\n                    return this.parseGivenFunction(group);\n                } else {\n                    throw new _ParseError2.default(\"Got function '\" + group.result + \"' with no arguments \" + \"as \" + name, symbolToken);\n                }\n            } else {\n                return group.result;\n            }\n        }\n\n        /**\n         * Converts the textual input of an unsupported command into a text node\n         * contained within a color node whose color is determined by errorColor\n         */\n\n    }, {\n        key: \"handleUnsupportedCmd\",\n        value: function handleUnsupportedCmd() {\n            var text = this.nextToken.text;\n            var textordArray = [];\n\n            for (var i = 0; i < text.length; i++) {\n                textordArray.push(new _ParseNode2.default(\"textord\", text[i], \"text\"));\n            }\n\n            var textNode = new _ParseNode2.default(\"text\", {\n                body: textordArray,\n                type: \"text\"\n            }, this.mode);\n\n            var colorNode = new _ParseNode2.default(\"color\", {\n                color: this.settings.errorColor,\n                value: [textNode],\n                type: \"color\"\n            }, this.mode);\n\n            this.consume();\n            return colorNode;\n        }\n\n        /**\n         * Parses a group with optional super/subscripts.\n         *\n         * @param {\"]\" | \"}\"} breakOnTokenText - character to stop parsing the group on.\n         * @return {?ParseNode}\n         */\n\n    }, {\n        key: \"parseAtom\",\n        value: function parseAtom(breakOnTokenText) {\n            // The body of an atom is an implicit group, so that things like\n            // \\left(x\\right)^2 work correctly.\n            var base = this.parseImplicitGroup(breakOnTokenText);\n\n            // In text mode, we don't have superscripts or subscripts\n            if (this.mode === \"text\") {\n                return base;\n            }\n\n            // Note that base may be empty (i.e. null) at this point.\n\n            var superscript = void 0;\n            var subscript = void 0;\n            while (true) {\n                // Guaranteed in math mode, so eat any spaces first.\n                this.consumeSpaces();\n\n                // Lex the first token\n                var lex = this.nextToken;\n\n                if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n                    // We got a limit control\n                    if (!base || base.type !== \"op\") {\n                        throw new _ParseError2.default(\"Limit controls must follow a math operator\", lex);\n                    } else {\n                        var limits = lex.text === \"\\\\limits\";\n                        base.value.limits = limits;\n                        base.value.alwaysHandleSupSub = true;\n                    }\n                    this.consume();\n                } else if (lex.text === \"^\") {\n                    // We got a superscript start\n                    if (superscript) {\n                        throw new _ParseError2.default(\"Double superscript\", lex);\n                    }\n                    superscript = this.handleSupSubscript(\"superscript\");\n                } else if (lex.text === \"_\") {\n                    // We got a subscript start\n                    if (subscript) {\n                        throw new _ParseError2.default(\"Double subscript\", lex);\n                    }\n                    subscript = this.handleSupSubscript(\"subscript\");\n                } else if (lex.text === \"'\") {\n                    // We got a prime\n                    if (superscript) {\n                        throw new _ParseError2.default(\"Double superscript\", lex);\n                    }\n                    var prime = new _ParseNode2.default(\"textord\", \"\\\\prime\", this.mode);\n\n                    // Many primes can be grouped together, so we handle this here\n                    var primes = [prime];\n                    this.consume();\n                    // Keep lexing tokens until we get something that's not a prime\n                    while (this.nextToken.text === \"'\") {\n                        // For each one, add another prime to the list\n                        primes.push(prime);\n                        this.consume();\n                    }\n                    // If there's a superscript following the primes, combine that\n                    // superscript in with the primes.\n                    if (this.nextToken.text === \"^\") {\n                        primes.push(this.handleSupSubscript(\"superscript\"));\n                    }\n                    // Put everything into an ordgroup as the superscript\n                    superscript = new _ParseNode2.default(\"ordgroup\", primes, this.mode);\n                } else {\n                    // If it wasn't ^, _, or ', stop parsing super/subscripts\n                    break;\n                }\n            }\n\n            if (superscript || subscript) {\n                // If we got either a superscript or subscript, create a supsub\n                return new _ParseNode2.default(\"supsub\", {\n                    base: base,\n                    sup: superscript,\n                    sub: subscript\n                }, this.mode);\n            } else {\n                // Otherwise return the original body\n                return base;\n            }\n        }\n\n        // A list of the size-changing functions, for use in parseImplicitGroup\n\n\n        // A list of the style-changing functions, for use in parseImplicitGroup\n\n\n        // Old font functions\n\n    }, {\n        key: \"parseImplicitGroup\",\n\n\n        /**\n         * Parses an implicit group, which is a group that starts at the end of a\n         * specified, and ends right before a higher explicit group ends, or at EOL. It\n         * is used for functions that appear to affect the current style, like \\Large or\n         * \\textrm, where instead of keeping a style we just pretend that there is an\n         * implicit grouping after it until the end of the group. E.g.\n         *   small text {\\Large large text} small text again\n         * It is also used for \\left and \\right to get the correct grouping.\n         *\n         * @param {\"]\" | \"}\"} breakOnTokenText - character to stop parsing the group on.\n         * @return {?ParseNode}\n         */\n        value: function parseImplicitGroup(breakOnTokenText) {\n            var start = this.parseSymbol();\n\n            if (start == null) {\n                // If we didn't get anything we handle, fall back to parseFunction\n                return this.parseFunction();\n            }\n\n            var func = start.result;\n\n            if (func === \"\\\\left\") {\n                // If we see a left:\n                // Parse the entire left function (including the delimiter)\n                var left = this.parseGivenFunction(start);\n                // Parse out the implicit body\n                ++this.leftrightDepth;\n                var body = this.parseExpression(false);\n                --this.leftrightDepth;\n                // Check the next token\n                this.expect(\"\\\\right\", false);\n                var right = this.parseFunction();\n                return new _ParseNode2.default(\"leftright\", {\n                    body: body,\n                    left: left.value.value,\n                    right: right.value.value\n                }, this.mode);\n            } else if (func === \"\\\\begin\") {\n                // begin...end is similar to left...right\n                var begin = this.parseGivenFunction(start);\n                var envName = begin.value.name;\n                if (!_environments2.default.has(envName)) {\n                    throw new _ParseError2.default(\"No such environment: \" + envName, begin.value.nameGroup);\n                }\n                // Build the environment object. Arguments and other information will\n                // be made available to the begin and end methods using properties.\n                var env = _environments2.default.get(envName);\n\n                var _parseArguments = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n                    args = _parseArguments.args,\n                    optArgs = _parseArguments.optArgs;\n\n                var context = {\n                    mode: this.mode,\n                    envName: envName,\n                    parser: this\n                };\n                var result = env.handler(context, args, optArgs);\n                this.expect(\"\\\\end\", false);\n                var endNameToken = this.nextToken;\n                var end = this.parseFunction();\n                if (end.value.name !== envName) {\n                    throw new _ParseError2.default(\"Mismatch: \\\\begin{\" + envName + \"} matched \" + \"by \\\\end{\" + end.value.name + \"}\", endNameToken);\n                }\n                result.position = end.position;\n                return result;\n            } else if (_utils2.default.contains(Parser.sizeFuncs, func)) {\n                // If we see a sizing function, parse out the implicit body\n                this.consumeSpaces();\n                var _body = this.parseExpression(false, breakOnTokenText);\n                return new _ParseNode2.default(\"sizing\", {\n                    // Figure out what size to use based on the list of functions above\n                    size: _utils2.default.indexOf(Parser.sizeFuncs, func) + 1,\n                    value: _body\n                }, this.mode);\n            } else if (_utils2.default.contains(Parser.styleFuncs, func)) {\n                // If we see a styling function, parse out the implicit body\n                this.consumeSpaces();\n                var _body2 = this.parseExpression(true, breakOnTokenText);\n                return new _ParseNode2.default(\"styling\", {\n                    // Figure out what style to use by pulling out the style from\n                    // the function name\n                    style: func.slice(1, func.length - 5),\n                    value: _body2\n                }, this.mode);\n            } else if (func in Parser.oldFontFuncs) {\n                var style = Parser.oldFontFuncs[func];\n                // If we see an old font function, parse out the implicit body\n                this.consumeSpaces();\n                var _body3 = this.parseExpression(true, breakOnTokenText);\n                if (style.slice(0, 4) === 'text') {\n                    return new _ParseNode2.default(\"text\", {\n                        style: style,\n                        body: new _ParseNode2.default(\"ordgroup\", _body3, this.mode)\n                    }, this.mode);\n                } else {\n                    return new _ParseNode2.default(\"font\", {\n                        font: style,\n                        body: new _ParseNode2.default(\"ordgroup\", _body3, this.mode)\n                    }, this.mode);\n                }\n            } else if (func === \"\\\\color\") {\n                // If we see a styling function, parse out the implicit body\n                var color = this.parseColorGroup(false);\n                if (!color) {\n                    throw new _ParseError2.default(\"\\\\color not followed by color\");\n                }\n                var _body4 = this.parseExpression(true, breakOnTokenText);\n                return new _ParseNode2.default(\"color\", {\n                    type: \"color\",\n                    color: color.result.value,\n                    value: _body4\n                }, this.mode);\n            } else if (func === \"$\") {\n                if (this.mode === \"math\") {\n                    throw new _ParseError2.default(\"$ within math mode\");\n                }\n                this.consume();\n                var outerMode = this.mode;\n                this.switchMode(\"math\");\n                var _body5 = this.parseExpression(false, \"$\");\n                this.expect(\"$\", true);\n                this.switchMode(outerMode);\n                return new _ParseNode2.default(\"styling\", {\n                    style: \"text\",\n                    value: _body5\n                }, \"math\");\n            } else {\n                // Defer to parseGivenFunction if it's not a function we handle\n                return this.parseGivenFunction(start);\n            }\n        }\n\n        /**\n         * Parses an entire function, including its base and all of its arguments.\n         * It also handles the case where the parsed node is not a function.\n         *\n         * @return {?ParseNode}\n         */\n\n    }, {\n        key: \"parseFunction\",\n        value: function parseFunction() {\n            var baseGroup = this.parseGroup();\n            return baseGroup ? this.parseGivenFunction(baseGroup) : null;\n        }\n\n        /**\n         * Same as parseFunction(), except that the base is provided, guaranteeing a\n         * non-nullable result.\n         *\n         * @param {ParsedFuncOrArgOrDollar} baseGroup\n         * @return {ParseNode}\n         */\n\n    }, {\n        key: \"parseGivenFunction\",\n        value: function parseGivenFunction(baseGroup) {\n            baseGroup = assertFuncOrArg(baseGroup);\n            if (baseGroup.type === \"fn\") {\n                var func = baseGroup.result;\n                var funcData = _functions2.default[func];\n                if (this.mode === \"text\" && !funcData.allowedInText) {\n                    throw new _ParseError2.default(\"Can't use function '\" + func + \"' in text mode\", baseGroup.token);\n                } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n                    throw new _ParseError2.default(\"Can't use function '\" + func + \"' in math mode\", baseGroup.token);\n                }\n\n                var _parseArguments2 = this.parseArguments(func, funcData),\n                    args = _parseArguments2.args,\n                    optArgs = _parseArguments2.optArgs;\n\n                var token = baseGroup.token;\n                var result = this.callFunction(func, args, optArgs, token);\n                return new _ParseNode2.default(result.type, result, this.mode);\n            } else {\n                return baseGroup.result;\n            }\n        }\n\n        /**\n         * Call a function handler with a suitable context and arguments.\n         * @param {string} name\n         * @param {Array<ParseNode>} args\n         * @param {Array<?ParseNode>} optArgs\n         * @param {Token=} token\n         */\n\n    }, {\n        key: \"callFunction\",\n        value: function callFunction(name, args, optArgs, token) {\n            var context = {\n                funcName: name,\n                parser: this,\n                token: token\n            };\n            return _functions2.default[name].handler(context, args, optArgs);\n        }\n\n        /**\n         * Parses the arguments of a function or environment\n         *\n         * @param {string} func  \"\\name\" or \"\\begin{name}\"\n         * @param {{\n         *   numArgs: number,\n         *   numOptionalArgs: (number|undefined),\n         * }} funcData\n         * @return {{\n         *   args: Array<ParseNode>,\n         *   optArgs: Array<?ParseNode>,\n         * }}\n         */\n\n    }, {\n        key: \"parseArguments\",\n        value: function parseArguments(func, funcData) {\n            var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n            if (totalArgs === 0) {\n                return { args: [], optArgs: [] };\n            }\n\n            var baseGreediness = funcData.greediness;\n            var args = [];\n            var optArgs = [];\n\n            for (var i = 0; i < totalArgs; i++) {\n                var argType = funcData.argTypes && funcData.argTypes[i];\n                var isOptional = i < funcData.numOptionalArgs;\n                // Ignore spaces between arguments.  As the TeXbook says:\n                // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n                //  put spaces between the arguments (e.g., ‘\\row x n’), because\n                //  TeX doesn’t use single spaces as undelimited arguments.\"\n                if (i > 0 && !isOptional) {\n                    this.consumeSpaces();\n                }\n                // Also consume leading spaces in math mode, as parseSymbol\n                // won't know what to do with them.  This can only happen with\n                // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n                // In LaTeX, the \\foo's get treated as (blank) arguments).\n                // In KaTeX, for now, both spaces will get consumed.\n                // TODO(edemaine)\n                if (i === 0 && !isOptional && this.mode === \"math\") {\n                    this.consumeSpaces();\n                }\n                var nextToken = this.nextToken;\n                var arg = argType ? this.parseGroupOfType(argType, isOptional) : this.parseGroup(isOptional);\n                if (!arg) {\n                    if (isOptional) {\n                        optArgs.push(null);\n                        continue;\n                    }\n                    if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n                        arg = newArgument(this.handleUnsupportedCmd(), nextToken);\n                    } else {\n                        throw new _ParseError2.default(\"Expected group after '\" + func + \"'\", nextToken);\n                    }\n                }\n                var argNode = void 0;\n                arg = assertFuncOrArg(arg);\n                if (arg.type === \"fn\") {\n                    var argGreediness = _functions2.default[arg.result].greediness;\n                    if (argGreediness > baseGreediness) {\n                        argNode = this.parseGivenFunction(arg);\n                    } else {\n                        throw new _ParseError2.default(\"Got function '\" + arg.result + \"' as \" + \"argument to '\" + func + \"'\", nextToken);\n                    }\n                } else {\n                    argNode = arg.result;\n                }\n                (isOptional ? optArgs : args).push(argNode);\n            }\n\n            return { args: args, optArgs: optArgs };\n        }\n\n        /**\n         * Parses a group when the mode is changing.\n         *\n         * @return {?ParsedFuncOrArgOrDollar}\n         */\n\n    }, {\n        key: \"parseGroupOfType\",\n        value: function parseGroupOfType(innerMode, optional) {\n            var outerMode = this.mode;\n            // Handle `original` argTypes\n            if (innerMode === \"original\") {\n                innerMode = outerMode;\n            }\n\n            if (innerMode === \"color\") {\n                return this.parseColorGroup(optional);\n            }\n            if (innerMode === \"size\") {\n                return this.parseSizeGroup(optional);\n            }\n\n            // By the time we get here, innerMode is one of \"text\" or \"math\".\n            // We switch the mode of the parser, recurse, then restore the old mode.\n            this.switchMode(innerMode);\n            var res = this.parseGroup(optional);\n            this.switchMode(outerMode);\n            return res;\n        }\n    }, {\n        key: \"consumeSpaces\",\n        value: function consumeSpaces() {\n            while (this.nextToken.text === \" \") {\n                this.consume();\n            }\n        }\n\n        /**\n         * Parses a group, essentially returning the string formed by the\n         * brace-enclosed tokens plus some position information.\n         *\n         * @param {string} modeName  Used to describe the mode in error messages\n         * @param {boolean=} optional  Whether the group is optional or required\n         * @return {?Token}\n         */\n\n    }, {\n        key: \"parseStringGroup\",\n        value: function parseStringGroup(modeName, optional) {\n            if (optional && this.nextToken.text !== \"[\") {\n                return null;\n            }\n            var outerMode = this.mode;\n            this.mode = \"text\";\n            this.expect(optional ? \"[\" : \"{\");\n            var str = \"\";\n            var firstToken = this.nextToken;\n            var lastToken = firstToken;\n            while (this.nextToken.text !== (optional ? \"]\" : \"}\")) {\n                if (this.nextToken.text === \"EOF\") {\n                    throw new _ParseError2.default(\"Unexpected end of input in \" + modeName, firstToken.range(this.nextToken, str));\n                }\n                lastToken = this.nextToken;\n                str += lastToken.text;\n                this.consume();\n            }\n            this.mode = outerMode;\n            this.expect(optional ? \"]\" : \"}\");\n            return firstToken.range(lastToken, str);\n        }\n\n        /**\n         * Parses a regex-delimited group: the largest sequence of tokens\n         * whose concatenated strings match `regex`. Returns the string\n         * formed by the tokens plus some position information.\n         *\n         * @param {RegExp} regex\n         * @param {string} modeName  Used to describe the mode in error messages\n         * @return {Token}\n         */\n\n    }, {\n        key: \"parseRegexGroup\",\n        value: function parseRegexGroup(regex, modeName) {\n            var outerMode = this.mode;\n            this.mode = \"text\";\n            var firstToken = this.nextToken;\n            var lastToken = firstToken;\n            var str = \"\";\n            while (this.nextToken.text !== \"EOF\" && regex.test(str + this.nextToken.text)) {\n                lastToken = this.nextToken;\n                str += lastToken.text;\n                this.consume();\n            }\n            if (str === \"\") {\n                throw new _ParseError2.default(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n            }\n            this.mode = outerMode;\n            return firstToken.range(lastToken, str);\n        }\n\n        /**\n         * Parses a color description.\n         */\n\n    }, {\n        key: \"parseColorGroup\",\n        value: function parseColorGroup(optional) {\n            var res = this.parseStringGroup(\"color\", optional);\n            if (!res) {\n                return null;\n            }\n            var match = /^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n            if (!match) {\n                throw new _ParseError2.default(\"Invalid color: '\" + res.text + \"'\", res);\n            }\n            return newArgument(new _ParseNode2.default(\"color\", match[0], this.mode), res);\n        }\n\n        /**\n         * Parses a size specification, consisting of magnitude and unit.\n         */\n\n    }, {\n        key: \"parseSizeGroup\",\n        value: function parseSizeGroup(optional) {\n            var res = void 0;\n            if (!optional && this.nextToken.text !== \"{\") {\n                res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n            } else {\n                res = this.parseStringGroup(\"size\", optional);\n            }\n            if (!res) {\n                return null;\n            }\n            var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n            if (!match) {\n                throw new _ParseError2.default(\"Invalid size: '\" + res.text + \"'\", res);\n            }\n            var data = {\n                number: +(match[1] + match[2]), // sign + magnitude, cast to number\n                unit: match[3]\n            };\n            if (!(0, _units.validUnit)(data)) {\n                throw new _ParseError2.default(\"Invalid unit: '\" + data.unit + \"'\", res);\n            }\n            return newArgument(new _ParseNode2.default(\"size\", data, this.mode), res);\n        }\n\n        /**\n         * If the argument is false or absent, this parses an ordinary group,\n         * which is either a single nucleus (like \"x\") or an expression\n         * in braces (like \"{x+y}\").\n         * If the argument is true, it parses either a bracket-delimited expression\n         * (like \"[x+y]\") or returns null to indicate the absence of a\n         * bracket-enclosed group.\n         *\n         * @param {boolean=} optional  Whether the group is optional or required\n         * @return {?ParsedFuncOrArgOrDollar}\n         */\n\n    }, {\n        key: \"parseGroup\",\n        value: function parseGroup(optional) {\n            var firstToken = this.nextToken;\n            // Try to parse an open brace\n            if (this.nextToken.text === (optional ? \"[\" : \"{\")) {\n                // If we get a brace, parse an expression\n                this.consume();\n                var expression = this.parseExpression(false, optional ? \"]\" : \"}\");\n                var lastToken = this.nextToken;\n                // Make sure we get a close brace\n                this.expect(optional ? \"]\" : \"}\");\n                if (this.mode === \"text\") {\n                    this.formLigatures(expression);\n                }\n                return newArgument(new _ParseNode2.default(\"ordgroup\", expression, this.mode, firstToken, lastToken), firstToken.range(lastToken, firstToken.text));\n            } else {\n                // Otherwise, just return a nucleus, or nothing for an optional group\n                return optional ? null : this.parseSymbol();\n            }\n        }\n\n        /**\n         * Form ligature-like combinations of characters for text mode.\n         * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n         * The result will simply replace multiple textord nodes with a single\n         * character in each value by a single textord node having multiple\n         * characters in its value.  The representation is still ASCII source.\n         *\n         * @param {Array.<ParseNode>} group  the nodes of this group,\n         *                                   list will be moified in place\n         */\n\n    }, {\n        key: \"formLigatures\",\n        value: function formLigatures(group) {\n            var n = group.length - 1;\n            for (var i = 0; i < n; ++i) {\n                var a = group[i];\n                var v = a.value;\n                if (v === \"-\" && group[i + 1].value === \"-\") {\n                    if (i + 1 < n && group[i + 2].value === \"-\") {\n                        group.splice(i, 3, new _ParseNode2.default(\"textord\", \"---\", \"text\", a, group[i + 2]));\n                        n -= 2;\n                    } else {\n                        group.splice(i, 2, new _ParseNode2.default(\"textord\", \"--\", \"text\", a, group[i + 1]));\n                        n -= 1;\n                    }\n                }\n                if ((v === \"'\" || v === \"`\") && group[i + 1].value === v) {\n                    group.splice(i, 2, new _ParseNode2.default(\"textord\", v + v, \"text\", a, group[i + 1]));\n                    n -= 1;\n                }\n            }\n        }\n\n        /**\n         * Parse a single symbol out of the string. Here, we handle both the functions\n         * we have defined, as well as the single character symbols\n         *\n         * @return {?ParsedFuncOrArgOrDollar}\n         */\n\n    }, {\n        key: \"parseSymbol\",\n        value: function parseSymbol() {\n            var nucleus = this.nextToken;\n\n            if (_functions2.default[nucleus.text]) {\n                this.consume();\n                // If there exists a function with this name, we return the function and\n                // say that it is a function.\n                return newFunction(nucleus);\n            } else if (_symbols2.default[this.mode][nucleus.text]) {\n                this.consume();\n                // Otherwise if this is a no-argument function, find the type it\n                // corresponds to in the symbols map\n                return newArgument(new _ParseNode2.default(_symbols2.default[this.mode][nucleus.text].group, nucleus.text, this.mode, nucleus), nucleus);\n            } else if (this.mode === \"text\" && _unicodeRegexes.cjkRegex.test(nucleus.text)) {\n                this.consume();\n                return newArgument(new _ParseNode2.default(\"textord\", nucleus.text, this.mode, nucleus), nucleus);\n            } else if (nucleus.text === \"$\") {\n                return newDollar(nucleus);\n            } else if (/^\\\\verb[^a-zA-Z]/.test(nucleus.text)) {\n                this.consume();\n                var arg = nucleus.text.slice(5);\n                var star = arg.charAt(0) === \"*\";\n                if (star) {\n                    arg = arg.slice(1);\n                }\n                // Lexer's tokenRegex is constructed to always have matching\n                // first/last characters.\n                if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n                    throw new _ParseError2.default(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n                }\n                arg = arg.slice(1, -1); // remove first and last char\n                return newArgument(new _ParseNode2.default(\"verb\", {\n                    body: arg,\n                    star: star\n                }, \"text\"), nucleus);\n            } else {\n                return null;\n            }\n        }\n    }]);\n    return Parser;\n}();\n\nParser.endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\", \"\\\\\\\\\", \"\\\\cr\"];\nParser.SUPSUB_GREEDINESS = 1;\nParser.sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nParser.styleFuncs = [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"];\nParser.oldFontFuncs = {\n    \"\\\\rm\": \"mathrm\",\n    \"\\\\sf\": \"mathsf\",\n    \"\\\\tt\": \"mathtt\",\n    \"\\\\bf\": \"mathbf\",\n    \"\\\\it\": \"mathit\"\n    //\"\\\\sl\": \"textsl\",\n    //\"\\\\sc\": \"textsc\",\n};\nexports.default = Parser;\n\n},{\"./MacroExpander\":82,\"./ParseError\":84,\"./ParseNode\":85,\"./environments\":99,\"./functions\":103,\"./symbols\":112,\"./unicodeRegexes\":113,\"./units\":114,\"./utils\":115,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9}],87:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nvar Settings = function Settings(options) {\n    (0, _classCallCheck3.default)(this, Settings);\n\n    // allow null options\n    options = options || {};\n    this.displayMode = _utils2.default.deflt(options.displayMode, false);\n    this.throwOnError = _utils2.default.deflt(options.throwOnError, true);\n    this.errorColor = _utils2.default.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.colorIsTextColor = _utils2.default.deflt(options.colorIsTextColor, false);\n    this.maxSize = Math.max(0, _utils2.default.deflt(options.maxSize, Infinity));\n};\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\nexports.default = Settings;\n\n},{\"./utils\":115,\"babel-runtime/helpers/classCallCheck\":8}],88:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _freeze = require(\"babel-runtime/core-js/object/freeze\");\n\nvar _freeze2 = _interopRequireDefault(_freeze);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nvar SourceLocation = function () {\n    // End offset, zero-based exclusive.\n\n    // Lexer holding the input string.\n    function SourceLocation(lexer, start, end) {\n        (0, _classCallCheck3.default)(this, SourceLocation);\n\n        this.lexer = lexer;\n        this.start = start;\n        this.end = end;\n        (0, _freeze2.default)(this); // Immutable to allow sharing in range().\n    }\n\n    /**\n     * Merges two `SourceLocation`s from location providers, given they are\n     * provided in order of appearance.\n     * - Returns the first one's location if only the first is provided.\n     * - Returns a merged range of the first and the last if both are provided\n     *   and their lexers match.\n     * - Otherwise, returns null.\n     */\n    // Start offset, zero-based inclusive.\n\n\n    (0, _createClass3.default)(SourceLocation, null, [{\n        key: \"range\",\n        value: function range(first, second) {\n            if (!second) {\n                return first && first.loc;\n            } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n                return null;\n            } else {\n                return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n            }\n        }\n    }]);\n    return SourceLocation;\n}();\n\nexports.default = SourceLocation;\n\n},{\"babel-runtime/core-js/object/freeze\":7,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9}],89:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nvar Style = function () {\n    function Style(id, size, cramped) {\n        (0, _classCallCheck3.default)(this, Style);\n\n        this.id = id;\n        this.size = size;\n        this.cramped = cramped;\n    }\n\n    /**\n     * Get the style of a superscript given a base in the current style.\n     */\n\n\n    (0, _createClass3.default)(Style, [{\n        key: \"sup\",\n        value: function sup() {\n            return styles[_sup[this.id]];\n        }\n\n        /**\n         * Get the style of a subscript given a base in the current style.\n         */\n\n    }, {\n        key: \"sub\",\n        value: function sub() {\n            return styles[_sub[this.id]];\n        }\n\n        /**\n         * Get the style of a fraction numerator given the fraction in the current\n         * style.\n         */\n\n    }, {\n        key: \"fracNum\",\n        value: function fracNum() {\n            return styles[_fracNum[this.id]];\n        }\n\n        /**\n         * Get the style of a fraction denominator given the fraction in the current\n         * style.\n         */\n\n    }, {\n        key: \"fracDen\",\n        value: function fracDen() {\n            return styles[_fracDen[this.id]];\n        }\n\n        /**\n         * Get the cramped version of a style (in particular, cramping a cramped style\n         * doesn't change the style).\n         */\n\n    }, {\n        key: \"cramp\",\n        value: function cramp() {\n            return styles[_cramp[this.id]];\n        }\n\n        /**\n         * Get a text or display version of this style.\n         */\n\n    }, {\n        key: \"text\",\n        value: function text() {\n            return styles[_text[this.id]];\n        }\n\n        /**\n         * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n         */\n\n    }, {\n        key: \"isTight\",\n        value: function isTight() {\n            return this.size >= 2;\n        }\n    }]);\n    return Style;\n}();\n\n// Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// Instances of the different styles\nvar styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)];\n\n// Lookup tables for switching from one style to another\nvar _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar _text = [D, Dc, T, Tc, T, Tc, T, Tc];\n\n// We only export some of the styles.\nexports.default = {\n    DISPLAY: styles[D],\n    TEXT: styles[T],\n    SCRIPT: styles[S],\n    SCRIPTSCRIPT: styles[SS]\n};\n\n},{\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9}],90:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Token = undefined;\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _SourceLocation = require(\"./SourceLocation\");\n\nvar _SourceLocation2 = _interopRequireDefault(_SourceLocation);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\n\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\nvar Token = exports.Token = function () {\n    function Token(text, // the text of this token\n    loc) {\n        (0, _classCallCheck3.default)(this, Token);\n\n        this.text = text;\n        this.loc = loc;\n    }\n\n    /**\n     * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n     * the whole input range enclosed by these two.\n     */\n\n\n    (0, _createClass3.default)(Token, [{\n        key: \"range\",\n        value: function range(endToken, // last token of the range, inclusive\n        text) // the text of the newly constructed token\n        {\n            return new Token(text, _SourceLocation2.default.range(this, endToken));\n        }\n    }]);\n    return Token;\n}();\n\n},{\"./SourceLocation\":88,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9}],91:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _domTree = require(\"./domTree\");\n\nvar _domTree2 = _interopRequireDefault(_domTree);\n\nvar _fontMetrics = require(\"./fontMetrics\");\n\nvar _fontMetrics2 = _interopRequireDefault(_fontMetrics);\n\nvar _symbols = require(\"./symbols\");\n\nvar _symbols2 = _interopRequireDefault(_symbols);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// The following have to be loaded from Main-Italic font, using class mainit\n/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\nvar mainitLetters = [\"\\\\imath\", // dotless i\n\"\\\\jmath\", // dotless j\n\"\\\\pounds\"];\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nvar lookupSymbol = function lookupSymbol(value, fontFamily, mode) {\n    // Replace the value with its replaced value from symbol.js\n    if (_symbols2.default[mode][value] && _symbols2.default[mode][value].replace) {\n        value = _symbols2.default[mode][value].replace;\n    }\n    return {\n        value: value,\n        metrics: _fontMetrics2.default.getCharacterMetrics(value, fontFamily)\n    };\n};\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\nvar makeSymbol = function makeSymbol(value, fontFamily, mode, options, classes) {\n    var lookup = lookupSymbol(value, fontFamily, mode);\n    var metrics = lookup.metrics;\n    value = lookup.value;\n\n    var symbolNode = void 0;\n    if (metrics) {\n        var italic = metrics.italic;\n        if (mode === \"text\") {\n            italic = 0;\n        }\n        symbolNode = new _domTree2.default.symbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\"No character metrics for '\" + value + \"' in style '\" + fontFamily + \"'\");\n        symbolNode = new _domTree2.default.symbolNode(value, 0, 0, 0, 0, classes);\n    }\n\n    if (options) {\n        symbolNode.maxFontSize = options.sizeMultiplier;\n        if (options.style.isTight()) {\n            symbolNode.classes.push(\"mtight\");\n        }\n        if (options.getColor()) {\n            symbolNode.style.color = options.getColor();\n        }\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\nvar mathsym = function mathsym(value, mode, options, classes) {\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text\n    if (value === \"\\\\\" || _symbols2.default[mode][value].font === \"main\") {\n        return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n    } else {\n        return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar mathDefault = function mathDefault(value, mode, options, classes, type) {\n    if (type === \"mathord\") {\n        var fontLookup = mathit(value, mode, options, classes);\n        return makeSymbol(value, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n    } else if (type === \"textord\") {\n        var font = _symbols2.default[mode][value] && _symbols2.default[mode][value].font;\n        if (font === \"ams\") {\n            return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n        } else {\n            // if (font === \"main\") {\n            return makeSymbol(value, \"Main-Regular\", mode, options, classes.concat([\"mathrm\"]));\n        }\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (mainit or mathit) to use for font \"mathit\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"mathit\".\n */\nvar mathit = function mathit(value, mode, options, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n    // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n    // need to use Main-Italic instead\n    _utils2.default.contains(mainitLetters, value)) {\n        return {\n            fontName: \"Main-Italic\",\n            fontClass: \"mainit\"\n        };\n    } else {\n        return {\n            fontName: \"Math-Italic\",\n            fontClass: \"mathit\"\n        };\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar makeOrd = function makeOrd(group, options, type) {\n    var mode = group.mode;\n    var value = group.value;\n\n    var classes = [\"mord\"];\n\n    var font = options.font;\n    if (font) {\n        var fontLookup = void 0;\n        if (font === \"mathit\" || _utils2.default.contains(mainitLetters, value)) {\n            fontLookup = mathit(value, mode, options, classes);\n        } else {\n            fontLookup = fontMap[font];\n        }\n        if (lookupSymbol(value, fontLookup.fontName, mode).metrics) {\n            return makeSymbol(value, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass || font]));\n        } else {\n            return mathDefault(value, mode, options, classes, type);\n        }\n    } else {\n        return mathDefault(value, mode, options, classes, type);\n    }\n};\n\n/**\n * Combine as many characters as possible in the given array of characters\n * via their tryCombine method.\n */\nvar tryCombineChars = function tryCombineChars(chars) {\n    for (var i = 0; i < chars.length - 1; i++) {\n        if (chars[i].tryCombine(chars[i + 1])) {\n            chars.splice(i + 1, 1);\n            i--;\n        }\n    }\n    return chars;\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    if (elem.children) {\n        for (var i = 0; i < elem.children.length; i++) {\n            if (elem.children[i].height > height) {\n                height = elem.children[i].height;\n            }\n            if (elem.children[i].depth > depth) {\n                depth = elem.children[i].depth;\n            }\n            if (elem.children[i].maxFontSize > maxFontSize) {\n                maxFontSize = elem.children[i].maxFontSize;\n            }\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO: Ensure that `options` is always provided (currently some call sites\n * don't pass it).\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\nvar makeSpan = function makeSpan(classes, children, options) {\n    var span = new _domTree2.default.span(classes, children, options);\n\n    sizeElementFromChildren(span);\n\n    return span;\n};\n\n/**\n * Prepends the given children to the given span, updating height, depth, and\n * maxFontSize.\n */\nvar prependChildren = function prependChildren(span, children) {\n    span.children = children.concat(span.children);\n\n    sizeElementFromChildren(span);\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar makeFragment = function makeFragment(children) {\n    var fragment = new _domTree2.default.documentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * Arguments:\n *  - children: A list of child or kern nodes to be stacked on top of each other\n *              (i.e. the first element will be at the bottom, and the last at\n *              the top). Element nodes are specified as\n *                {type: \"elem\", elem: node}\n *              while kern nodes are specified as\n *                {type: \"kern\", size: size}\n *  - positionType: The method by which the vlist should be positioned. Valid\n *                  values are:\n *                   - \"individualShift\": The children list only contains elem\n *                                        nodes, and each node contains an extra\n *                                        \"shift\" value of how much it should be\n *                                        shifted (note that shifting is always\n *                                        moving downwards). positionData is\n *                                        ignored.\n *                   - \"top\": The positionData specifies the topmost point of\n *                            the vlist (note this is expected to be a height,\n *                            so positive values move up)\n *                   - \"bottom\": The positionData specifies the bottommost point\n *                               of the vlist (note this is expected to be a\n *                               depth, so positive values move down\n *                   - \"shift\": The vlist will be positioned such that its\n *                              baseline is positionData away from the baseline\n *                              of the first child. Positive values move\n *                              downwards.\n *                   - \"firstBaseline\": The vlist will be positioned such that\n *                                      its baseline is aligned with the\n *                                      baseline of the first child.\n *                                      positionData is ignored. (this is\n *                                      equivalent to \"shift\" with\n *                                      positionData=0)\n *  - positionData: Data used in different ways depending on positionType\n *  - options: An Options object\n *\n */\nvar makeVList = function makeVList(children, positionType, positionData, options) {\n    var depth = void 0;\n    var currPos = void 0;\n    var i = void 0;\n    if (positionType === \"individualShift\") {\n        var oldChildren = children;\n        children = [oldChildren[0]];\n\n        // Add in kerns to the list of children to get each element to be\n        // shifted to the correct specified shift\n        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        currPos = depth;\n        for (i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n            var size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            children.push({ type: \"kern\", size: size });\n            children.push(oldChildren[i]);\n        }\n    } else if (positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = positionData;\n        for (i = 0; i < children.length; i++) {\n            if (children[i].type === \"kern\") {\n                bottom -= children[i].size;\n            } else {\n                bottom -= children[i].elem.height + children[i].elem.depth;\n            }\n        }\n        depth = bottom;\n    } else if (positionType === \"bottom\") {\n        depth = -positionData;\n    } else if (positionType === \"shift\") {\n        depth = -children[0].elem.depth - positionData;\n    } else if (positionType === \"firstBaseline\") {\n        depth = -children[0].elem.depth;\n    } else {\n        depth = 0;\n    }\n\n    // Create a strut that is taller than any list item. The strut is added to\n    // each item, where it will determine the item's baseline. Since it has\n    // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n    // top edge and the strut's bottom edge will sit on the item's baseline,\n    // with no additional line-height spacing. This allows the item baseline to\n    // be positioned precisely without worrying about font ascent and\n    // line-height.\n    var pstrutSize = 0;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"elem\") {\n            var child = children[i].elem;\n            pstrutSize = Math.max(pstrutSize, child.maxFontSize, child.height);\n        }\n    }\n    pstrutSize += 2;\n    var pstrut = makeSpan([\"pstrut\"], []);\n    pstrut.style.height = pstrutSize + \"em\";\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    var minPos = depth;\n    var maxPos = depth;\n    currPos = depth;\n    for (i = 0; i < children.length; i++) {\n        if (children[i].type === \"kern\") {\n            currPos += children[i].size;\n        } else {\n            var _child = children[i].elem;\n\n            var childWrap = makeSpan([], [pstrut, _child]);\n            childWrap.style.top = -pstrutSize - currPos - _child.depth + \"em\";\n            if (children[i].marginLeft) {\n                childWrap.style.marginLeft = children[i].marginLeft;\n            }\n            if (children[i].marginRight) {\n                childWrap.style.marginRight = children[i].marginRight;\n            }\n\n            realChildren.push(childWrap);\n            currPos += _child.height + _child.depth;\n        }\n        minPos = Math.min(minPos, currPos);\n        maxPos = Math.max(maxPos, currPos);\n    }\n\n    // The vlist contents go in a table-cell with `vertical-align:bottom`.\n    // This cell's bottom edge will determine the containing table's baseline\n    // without overly expanding the containing line-box.\n    var vlist = makeSpan([\"vlist\"], realChildren);\n    vlist.style.height = maxPos + \"em\";\n\n    // A second row is used if necessary to represent the vlist's depth.\n    var rows = void 0;\n    if (minPos < 0) {\n        var depthStrut = makeSpan([\"vlist\"], []);\n        depthStrut.style.height = -minPos + \"em\";\n\n        // Safari wants the first row to have inline content; otherwise it\n        // puts the bottom of the *second* row on the baseline.\n        var topStrut = makeSpan([\"vlist-s\"], [new _domTree2.default.symbolNode(\"\\u200B\")]);\n\n        rows = [makeSpan([\"vlist-r\"], [vlist, topStrut]), makeSpan([\"vlist-r\"], [depthStrut])];\n    } else {\n        rows = [makeSpan([\"vlist-r\"], [vlist])];\n    }\n\n    var vtable = makeSpan([\"vlist-t\"], rows);\n    if (rows.length === 2) {\n        vtable.classes.push(\"vlist-t2\");\n    }\n    vtable.height = maxPos;\n    vtable.depth = -minPos;\n    return vtable;\n};\n\n// Converts verb group into body string, dealing with \\verb* form\nvar makeVerb = function makeVerb(group, options) {\n    var text = group.value.body;\n    if (group.value.star) {\n        text = text.replace(/ /g, \"\\u2423\"); // Open Box\n    } else {\n        text = text.replace(/ /g, '\\xA0'); // No-Break Space\n        // (so that, in particular, spaces don't coalesce)\n    }\n    return text;\n};\n\n// A map of spacing functions to their attributes, like size and corresponding\n// CSS class\nvar spacingFunctions = {\n    \"\\\\qquad\": {\n        size: \"2em\",\n        className: \"qquad\"\n    },\n    \"\\\\quad\": {\n        size: \"1em\",\n        className: \"quad\"\n    },\n    \"\\\\enspace\": {\n        size: \"0.5em\",\n        className: \"enspace\"\n    },\n    \"\\\\;\": {\n        size: \"0.277778em\",\n        className: \"thickspace\"\n    },\n    \"\\\\:\": {\n        size: \"0.22222em\",\n        className: \"mediumspace\"\n    },\n    \"\\\\,\": {\n        size: \"0.16667em\",\n        className: \"thinspace\"\n    },\n    \"\\\\!\": {\n        size: \"-0.16667em\",\n        className: \"negativethinspace\"\n    }\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\"\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\"\n    },\n    \"textit\": {\n        variant: \"italic\",\n        fontName: \"Main-Italic\"\n    },\n\n    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic\n    // and Math-Italic.  This is handled by a special case in makeOrd which ends\n    // up calling mathit.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\"\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\"\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\"\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\"\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\"\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\"\n    }\n};\n\nexports.default = {\n    fontMap: fontMap,\n    makeSymbol: makeSymbol,\n    mathsym: mathsym,\n    makeSpan: makeSpan,\n    makeFragment: makeFragment,\n    makeVList: makeVList,\n    makeOrd: makeOrd,\n    makeVerb: makeVerb,\n    tryCombineChars: tryCombineChars,\n    prependChildren: prependChildren,\n    spacingFunctions: spacingFunctions\n};\n\n},{\"./domTree\":98,\"./fontMetrics\":101,\"./symbols\":112,\"./utils\":115}],92:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildGroup = exports.groupTypes = exports.makeNullDelimiter = exports.buildExpression = exports.spliceSpaces = undefined;\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = buildHTML;\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _Style = require(\"./Style\");\n\nvar _Style2 = _interopRequireDefault(_Style);\n\nvar _buildCommon = require(\"./buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _delimiter = require(\"./delimiter\");\n\nvar _delimiter2 = _interopRequireDefault(_delimiter);\n\nvar _domTree = require(\"./domTree\");\n\nvar _domTree2 = _interopRequireDefault(_domTree);\n\nvar _units = require(\"./units\");\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _stretchy = require(\"./stretchy\");\n\nvar _stretchy2 = _interopRequireDefault(_stretchy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * WARNING: New methods on groupTypes should be added to src/functions.\n *\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupTypes functions are\n * called, to produce a final HTML tree.\n */\n\nvar makeSpan = _buildCommon2.default.makeSpan;\n\nvar isSpace = function isSpace(node) {\n    return node instanceof _domTree2.default.span && node.classes[0] === \"mspace\";\n};\n\n// Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\nvar isBin = function isBin(node) {\n    return node && node.classes[0] === \"mbin\";\n};\n\nvar isBinLeftCanceller = function isBinLeftCanceller(node, isRealGroup) {\n    // TODO: This code assumes that a node's math class is the first element\n    // of its `classes` array. A later cleanup should ensure this, for\n    // instance by changing the signature of `makeSpan`.\n    if (node) {\n        return _utils2.default.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"], node.classes[0]);\n    } else {\n        return isRealGroup;\n    }\n};\n\nvar isBinRightCanceller = function isBinRightCanceller(node, isRealGroup) {\n    if (node) {\n        return _utils2.default.contains([\"mrel\", \"mclose\", \"mpunct\"], node.classes[0]);\n    } else {\n        return isRealGroup;\n    }\n};\n\n/**\n * Splice out any spaces from `children` starting at position `i`, and return\n * the spliced-out array. Returns null if `children[i]` does not exist or is not\n * a space.\n */\nvar spliceSpaces = exports.spliceSpaces = function spliceSpaces(children, i) {\n    var j = i;\n    while (j < children.length && isSpace(children[j])) {\n        j++;\n    }\n    if (j === i) {\n        return null;\n    } else {\n        return children.splice(i, j - i);\n    }\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color).\n */\nvar buildExpression = exports.buildExpression = function buildExpression(expression, options, isRealGroup) {\n    // Parse expressions into `groups`.\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        var output = buildGroup(group, options);\n        if (output instanceof _domTree2.default.documentFragment) {\n            Array.prototype.push.apply(groups, output.children);\n        } else {\n            groups.push(output);\n        }\n    }\n    // At this point `groups` consists entirely of `symbolNode`s and `span`s.\n\n    // Explicit spaces (e.g., \\;, \\,) should be ignored with respect to atom\n    // spacing (e.g., \"add thick space between mord and mrel\"). Since CSS\n    // adjacency rules implement atom spacing, spaces should be invisible to\n    // CSS. So we splice them out of `groups` and into the atoms themselves.\n    for (var _i = 0; _i < groups.length; _i++) {\n        var spaces = spliceSpaces(groups, _i);\n        if (spaces) {\n            // Splicing of spaces may have removed all remaining groups.\n            if (_i < groups.length) {\n                // If there is a following group, move space within it.\n                if (groups[_i] instanceof _domTree2.default.symbolNode) {\n                    groups[_i] = makeSpan([].concat(groups[_i].classes), [groups[_i]]);\n                }\n                _buildCommon2.default.prependChildren(groups[_i], spaces);\n            } else {\n                // Otherwise, put any spaces back at the end of the groups.\n                Array.prototype.push.apply(groups, spaces);\n                break;\n            }\n        }\n    }\n\n    // Binary operators change to ordinary symbols in some contexts.\n    for (var _i2 = 0; _i2 < groups.length; _i2++) {\n        if (isBin(groups[_i2]) && (isBinLeftCanceller(groups[_i2 - 1], isRealGroup) || isBinRightCanceller(groups[_i2 + 1], isRealGroup))) {\n            groups[_i2].classes[0] = \"mord\";\n        }\n    }\n\n    // Process \\\\not commands within the group.\n    // TODO(kevinb): Handle multiple \\\\not commands in a row.\n    // TODO(kevinb): Handle \\\\not{abc} correctly.  The \\\\not should appear over\n    // the 'a' instead of the 'c'.\n    for (var _i3 = 0; _i3 < groups.length; _i3++) {\n        if (groups[_i3].value === \"\\u0338\" && _i3 + 1 < groups.length) {\n            var children = groups.slice(_i3, _i3 + 2);\n\n            children[0].classes = [\"mainrm\"];\n            // \\u0338 is a combining glyph so we could reorder the children so\n            // that it comes after the other glyph.  This works correctly on\n            // most browsers except for Safari.  Instead we absolutely position\n            // the glyph and set its right side to match that of the other\n            // glyph which is visually equivalent.\n            children[0].style.position = \"absolute\";\n            children[0].style.right = \"0\";\n\n            // Copy the classes from the second glyph to the new container.\n            // This is so it behaves the same as though there was no \\\\not.\n            var classes = groups[_i3 + 1].classes;\n            var container = makeSpan(classes, children);\n\n            // LaTeX adds a space between ords separated by a \\\\not.\n            if (classes.indexOf(\"mord\") !== -1) {\n                // \\glue(\\thickmuskip) 2.77771 plus 2.77771\n                container.style.paddingLeft = \"0.277771em\";\n            }\n\n            // Ensure that the \\u0338 is positioned relative to the container.\n            container.style.position = \"relative\";\n            groups.splice(_i3, 2, container);\n        }\n    }\n\n    return groups;\n};\n\n// Return math atom class (mclass) of a domTree.\nvar getTypeOfDomTree = function getTypeOfDomTree(node) {\n    if (node instanceof _domTree2.default.documentFragment) {\n        if (node.children.length) {\n            return getTypeOfDomTree(node.children[node.children.length - 1]);\n        }\n    } else {\n        if (_utils2.default.contains([\"mord\", \"mop\", \"mbin\", \"mrel\", \"mopen\", \"mclose\", \"mpunct\", \"minner\"], node.classes[0])) {\n            return node.classes[0];\n        }\n    }\n    return null;\n};\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar shouldHandleSupSub = function shouldHandleSupSub(group, options) {\n    if (!group.value.base) {\n        return false;\n    } else {\n        var base = group.value.base;\n        if (base.type === \"op\") {\n            // Operators handle supsubs differently when they have limits\n            // (e.g. `\\displaystyle\\sum_2^3`)\n            return base.value.limits && (options.style.size === _Style2.default.DISPLAY.size || base.value.alwaysHandleSupSub);\n        } else if (base.type === \"accent\") {\n            return isCharacterBox(base.value.base);\n        } else if (base.type === \"horizBrace\") {\n            var isSup = group.value.sub ? false : true;\n            return isSup === base.value.isOver;\n        } else {\n            return null;\n        }\n    }\n};\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function getBaseElem(group) {\n    if (!group) {\n        return false;\n    } else if (group.type === \"ordgroup\") {\n        if (group.value.length === 1) {\n            return getBaseElem(group.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.value.value.length === 1) {\n            return getBaseElem(group.value.value[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"font\") {\n        return getBaseElem(group.value.body);\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar isCharacterBox = function isCharacterBox(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"bin\" || baseElem.type === \"rel\" || baseElem.type === \"inner\" || baseElem.type === \"open\" || baseElem.type === \"close\" || baseElem.type === \"punct\";\n};\n\nvar makeNullDelimiter = exports.makeNullDelimiter = function makeNullDelimiter(options, classes) {\n    var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n    return makeSpan(classes.concat(moreClasses));\n};\n\n/**\n * This is a map of group types to the function used to handle that type.\n * Simpler types come at the beginning, while complicated types come afterwards.\n */\nvar groupTypes = exports.groupTypes = {};\n\ngroupTypes.mathord = function (group, options) {\n    return _buildCommon2.default.makeOrd(group, options, \"mathord\");\n};\n\ngroupTypes.textord = function (group, options) {\n    return _buildCommon2.default.makeOrd(group, options, \"textord\");\n};\n\ngroupTypes.bin = function (group, options) {\n    return _buildCommon2.default.mathsym(group.value, group.mode, options, [\"mbin\"]);\n};\n\ngroupTypes.rel = function (group, options) {\n    return _buildCommon2.default.mathsym(group.value, group.mode, options, [\"mrel\"]);\n};\n\ngroupTypes.open = function (group, options) {\n    return _buildCommon2.default.mathsym(group.value, group.mode, options, [\"mopen\"]);\n};\n\ngroupTypes.close = function (group, options) {\n    return _buildCommon2.default.mathsym(group.value, group.mode, options, [\"mclose\"]);\n};\n\ngroupTypes.inner = function (group, options) {\n    return _buildCommon2.default.mathsym(group.value, group.mode, options, [\"minner\"]);\n};\n\ngroupTypes.punct = function (group, options) {\n    return _buildCommon2.default.mathsym(group.value, group.mode, options, [\"mpunct\"]);\n};\n\ngroupTypes.ordgroup = function (group, options) {\n    return makeSpan([\"mord\"], buildExpression(group.value, options, true), options);\n};\n\ngroupTypes.text = function (group, options) {\n    var newOptions = options.withFont(group.value.font);\n    var inner = buildExpression(group.value.body, newOptions, true);\n    _buildCommon2.default.tryCombineChars(inner);\n    return makeSpan([\"mord\", \"text\"], inner, newOptions);\n};\n\ngroupTypes.color = function (group, options) {\n    var elements = buildExpression(group.value.value, options.withColor(group.value.color), false);\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return new _buildCommon2.default.makeFragment(elements);\n};\n\ngroupTypes.supsub = function (group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    if (shouldHandleSupSub(group, options)) {\n        return groupTypes[group.value.base.type](group, options);\n    }\n\n    var base = buildGroup(group.value.base, options);\n    var supm = void 0;\n    var subm = void 0;\n\n    var metrics = options.fontMetrics();\n    var newOptions = void 0;\n\n    // Rule 18a\n    var supShift = 0;\n    var subShift = 0;\n\n    if (group.value.sup) {\n        newOptions = options.havingStyle(options.style.sup());\n        supm = buildGroup(group.value.sup, newOptions, options);\n        if (!isCharacterBox(group.value.base)) {\n            supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n        }\n    }\n\n    if (group.value.sub) {\n        newOptions = options.havingStyle(options.style.sub());\n        subm = buildGroup(group.value.sub, newOptions, options);\n        if (!isCharacterBox(group.value.base)) {\n            subShift = base.depth + newOptions.fontMetrics().subDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n        }\n    }\n\n    // Rule 18c\n    var minSupShift = void 0;\n    if (options.style === _Style2.default.DISPLAY) {\n        minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n        minSupShift = metrics.sup3;\n    } else {\n        minSupShift = metrics.sup2;\n    }\n\n    // scriptspace is a font-size-independent size, so scale it\n    // appropriately\n    var multiplier = options.sizeMultiplier;\n    var scriptspace = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n\n    var supsub = void 0;\n    if (!group.value.sup) {\n        // Rule 18b\n        subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n\n        var vlistElem = [{ type: \"elem\", elem: subm, marginRight: scriptspace }];\n        // Subscripts shouldn't be shifted by the base's italic correction.\n        // Account for that by shifting the subscript back the appropriate\n        // amount. Note we only do this when the base is a single symbol.\n        if (base instanceof _domTree2.default.symbolNode) {\n            vlistElem[0].marginLeft = -base.italic + \"em\";\n        }\n\n        supsub = _buildCommon2.default.makeVList(vlistElem, \"shift\", subShift, options);\n    } else if (!group.value.sub) {\n        // Rule 18c, d\n        supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n\n        supsub = _buildCommon2.default.makeVList([{ type: \"elem\", elem: supm, marginRight: scriptspace }], \"shift\", -supShift, options);\n    } else {\n        supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n        subShift = Math.max(subShift, metrics.sub2);\n\n        var ruleWidth = metrics.defaultRuleThickness;\n\n        // Rule 18e\n        if (supShift - supm.depth - (subm.height - subShift) < 4 * ruleWidth) {\n            subShift = 4 * ruleWidth - (supShift - supm.depth) + subm.height;\n            var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n            if (psi > 0) {\n                supShift += psi;\n                subShift -= psi;\n            }\n        }\n\n        var _vlistElem = [{ type: \"elem\", elem: subm, shift: subShift, marginRight: scriptspace }, { type: \"elem\", elem: supm, shift: -supShift, marginRight: scriptspace }];\n        // See comment above about subscripts not being shifted\n        if (base instanceof _domTree2.default.symbolNode) {\n            _vlistElem[0].marginLeft = -base.italic + \"em\";\n        }\n\n        supsub = _buildCommon2.default.makeVList(_vlistElem, \"individualShift\", null, options);\n    }\n\n    // We ensure to wrap the supsub vlist in a span.msupsub to reset text-align\n    var mclass = getTypeOfDomTree(base) || \"mord\";\n    return makeSpan([mclass], [base, makeSpan([\"msupsub\"], [supsub])], options);\n};\n\ngroupTypes.genfrac = function (group, options) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var style = options.style;\n    if (group.value.size === \"display\") {\n        style = _Style2.default.DISPLAY;\n    } else if (group.value.size === \"text\") {\n        style = _Style2.default.TEXT;\n    }\n\n    var nstyle = style.fracNum();\n    var dstyle = style.fracDen();\n    var newOptions = void 0;\n\n    newOptions = options.havingStyle(nstyle);\n    var numerm = buildGroup(group.value.numer, newOptions, options);\n\n    newOptions = options.havingStyle(dstyle);\n    var denomm = buildGroup(group.value.denom, newOptions, options);\n\n    var rule = void 0;\n    var ruleWidth = void 0;\n    var ruleSpacing = void 0;\n    if (group.value.hasBarLine) {\n        rule = makeLineSpan(\"frac-line\", options);\n        ruleWidth = rule.height;\n        ruleSpacing = rule.height;\n    } else {\n        rule = null;\n        ruleWidth = 0;\n        ruleSpacing = options.fontMetrics().defaultRuleThickness;\n    }\n\n    // Rule 15b\n    var numShift = void 0;\n    var clearance = void 0;\n    var denomShift = void 0;\n    if (style.size === _Style2.default.DISPLAY.size) {\n        numShift = options.fontMetrics().num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleSpacing;\n        } else {\n            clearance = 7 * ruleSpacing;\n        }\n        denomShift = options.fontMetrics().denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = options.fontMetrics().num2;\n            clearance = ruleSpacing;\n        } else {\n            numShift = options.fontMetrics().num3;\n            clearance = 3 * ruleSpacing;\n        }\n        denomShift = options.fontMetrics().denom2;\n    }\n\n    var frac = void 0;\n    if (ruleWidth === 0) {\n        // Rule 15c\n        var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n        if (candidateClearance < clearance) {\n            numShift += 0.5 * (clearance - candidateClearance);\n            denomShift += 0.5 * (clearance - candidateClearance);\n        }\n\n        frac = _buildCommon2.default.makeVList([{ type: \"elem\", elem: denomm, shift: denomShift }, { type: \"elem\", elem: numerm, shift: -numShift }], \"individualShift\", null, options);\n    } else {\n        // Rule 15d\n        var axisHeight = options.fontMetrics().axisHeight;\n\n        if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n            numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n            denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n        }\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = _buildCommon2.default.makeVList([{ type: \"elem\", elem: denomm, shift: denomShift }, { type: \"elem\", elem: rule, shift: midShift }, { type: \"elem\", elem: numerm, shift: -numShift }], \"individualShift\", null, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    newOptions = options.havingStyle(style);\n    frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n    frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize = void 0;\n    if (style.size === _Style2.default.DISPLAY.size) {\n        delimSize = options.fontMetrics().delim1;\n    } else {\n        delimSize = options.fontMetrics().delim2;\n    }\n\n    var leftDelim = void 0;\n    var rightDelim = void 0;\n    if (group.value.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n        leftDelim = _delimiter2.default.customSizedDelim(group.value.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n    }\n    if (group.value.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n        rightDelim = _delimiter2.default.customSizedDelim(group.value.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n    }\n\n    return makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\ngroupTypes.spacing = function (group, options) {\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" || group.value === \" \" || group.value === \"~\") {\n        // Spaces are generated by adding an actual space. Each of these\n        // things has an entry in the symbols table, so these will be turned\n        // into appropriate outputs.\n        if (group.mode === \"text\") {\n            return _buildCommon2.default.makeOrd(group, options, \"textord\");\n        } else {\n            return makeSpan([\"mspace\"], [_buildCommon2.default.mathsym(group.value, group.mode, options)], options);\n        }\n    } else {\n        // Other kinds of spaces are of arbitrary width. We use CSS to\n        // generate these.\n        return makeSpan([\"mspace\", _buildCommon2.default.spacingFunctions[group.value].className], [], options);\n    }\n};\n\ngroupTypes.lap = function (group, options) {\n    // mathllap, mathrlap, mathclap\n    var inner = void 0;\n    if (group.value.alignment === \"clap\") {\n        // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n        inner = makeSpan([], [buildGroup(group.value.body, options)]);\n        // wrap, since CSS will center a .clap > .inner > span\n        inner = makeSpan([\"inner\"], [inner], options);\n    } else {\n        inner = makeSpan([\"inner\"], [buildGroup(group.value.body, options)]);\n    }\n    var fix = makeSpan([\"fix\"], []);\n    return makeSpan([\"mord\", group.value.alignment], [inner, fix], options);\n};\n\ngroupTypes.smash = function (group, options) {\n    var node = makeSpan([\"mord\"], [buildGroup(group.value.body, options)]);\n\n    if (!group.value.smashHeight && !group.value.smashDepth) {\n        return node;\n    }\n\n    if (group.value.smashHeight) {\n        node.height = 0;\n        // In order to influence makeVList, we have to reset the children.\n        if (node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                node.children[i].height = 0;\n            }\n        }\n    }\n\n    if (group.value.smashDepth) {\n        node.depth = 0;\n        if (node.children) {\n            for (var _i4 = 0; _i4 < node.children.length; _i4++) {\n                node.children[_i4].depth = 0;\n            }\n        }\n    }\n\n    // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n    return _buildCommon2.default.makeVList([{ type: \"elem\", elem: node }], \"firstBaseline\", null, options);\n};\n\ngroupTypes.op = function (group, options) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup = void 0;\n    var subGroup = void 0;\n    var hasLimits = false;\n    if (group.type === \"supsub\") {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = group.value.sup;\n        subGroup = group.value.sub;\n        group = group.value.base;\n        hasLimits = true;\n    }\n\n    var style = options.style;\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\"\\\\smallint\"];\n\n    var large = false;\n    if (style.size === _Style2.default.DISPLAY.size && group.value.symbol && !_utils2.default.contains(noSuccessor, group.value.body)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base = void 0;\n    if (group.value.symbol) {\n        // If this is a symbol, create the symbol.\n        var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n        base = _buildCommon2.default.makeSymbol(group.value.body, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n    } else if (group.value.value) {\n        // If this is a list, compose that list.\n        var inner = buildExpression(group.value.value, options, true);\n        if (inner.length === 1 && inner[0] instanceof _domTree2.default.symbolNode) {\n            base = inner[0];\n            base.classes[0] = \"mop\"; // replace old mclass\n        } else {\n            base = makeSpan([\"mop\"], inner, options);\n        }\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.value.body.length; i++) {\n            output.push(_buildCommon2.default.mathsym(group.value.body[i], group.mode));\n        }\n        base = makeSpan([\"mop\"], output, options);\n    }\n\n    // If content of op is a single symbol, shift it vertically.\n    var baseShift = 0;\n    var slant = 0;\n    if (base instanceof _domTree2.default.symbolNode) {\n        // Shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight;\n\n        // The slant of the symbol is just its italic correction.\n        slant = base.italic;\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = makeSpan([], [base]);\n\n        var supm = void 0;\n        var supKern = void 0;\n        var subm = void 0;\n        var subKern = void 0;\n        var newOptions = void 0;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            newOptions = options.havingStyle(style.sup());\n            supm = buildGroup(supGroup, newOptions, options);\n\n            supKern = Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - supm.depth);\n        }\n\n        if (subGroup) {\n            newOptions = options.havingStyle(style.sub());\n            subm = buildGroup(subGroup, newOptions, options);\n\n            subKern = Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - subm.height);\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup = void 0;\n        var top = void 0;\n        var bottom = void 0;\n        if (!supGroup) {\n            top = base.height - baseShift;\n\n            // Shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup = _buildCommon2.default.makeVList([{ type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }, { type: \"elem\", elem: subm, marginLeft: -slant + \"em\" }, { type: \"kern\", size: subKern }, { type: \"elem\", elem: base }], \"top\", top, options);\n        } else if (!subGroup) {\n            bottom = base.depth + baseShift;\n\n            finalGroup = _buildCommon2.default.makeVList([{ type: \"elem\", elem: base }, { type: \"kern\", size: supKern }, { type: \"elem\", elem: supm, marginLeft: slant + \"em\" }, { type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }], \"bottom\", bottom, options);\n        } else if (!supGroup && !subGroup) {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        } else {\n            bottom = options.fontMetrics().bigOpSpacing5 + subm.height + subm.depth + subKern + base.depth + baseShift;\n\n            finalGroup = _buildCommon2.default.makeVList([{ type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }, { type: \"elem\", elem: subm, marginLeft: -slant + \"em\" }, { type: \"kern\", size: subKern }, { type: \"elem\", elem: base }, { type: \"kern\", size: supKern }, { type: \"elem\", elem: supm, marginLeft: slant + \"em\" }, { type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }], \"bottom\", bottom, options);\n        }\n\n        return makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n    } else {\n        if (baseShift) {\n            base.style.position = \"relative\";\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\ngroupTypes.mod = function (group, options) {\n    var inner = [];\n\n    if (group.value.modType === \"bmod\") {\n        // “\\nonscript\\mskip-\\medmuskip\\mkern5mu”\n        if (!options.style.isTight()) {\n            inner.push(makeSpan([\"mspace\", \"negativemediumspace\"], [], options));\n        }\n        inner.push(makeSpan([\"mspace\", \"thickspace\"], [], options));\n    } else if (options.style.size === _Style2.default.DISPLAY.size) {\n        inner.push(makeSpan([\"mspace\", \"quad\"], [], options));\n    } else if (group.value.modType === \"mod\") {\n        inner.push(makeSpan([\"mspace\", \"twelvemuspace\"], [], options));\n    } else {\n        inner.push(makeSpan([\"mspace\", \"eightmuspace\"], [], options));\n    }\n\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(_buildCommon2.default.mathsym(\"(\", group.mode));\n    }\n\n    if (group.value.modType !== \"pod\") {\n        var modInner = [_buildCommon2.default.mathsym(\"m\", group.mode), _buildCommon2.default.mathsym(\"o\", group.mode), _buildCommon2.default.mathsym(\"d\", group.mode)];\n        if (group.value.modType === \"bmod\") {\n            inner.push(makeSpan([\"mbin\"], modInner, options));\n            // “\\mkern5mu\\nonscript\\mskip-\\medmuskip”\n            inner.push(makeSpan([\"mspace\", \"thickspace\"], [], options));\n            if (!options.style.isTight()) {\n                inner.push(makeSpan([\"mspace\", \"negativemediumspace\"], [], options));\n            }\n        } else {\n            Array.prototype.push.apply(inner, modInner);\n            inner.push(makeSpan([\"mspace\", \"sixmuspace\"], [], options));\n        }\n    }\n\n    if (group.value.value) {\n        Array.prototype.push.apply(inner, buildExpression(group.value.value, options, false));\n    }\n\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(_buildCommon2.default.mathsym(\")\", group.mode));\n    }\n\n    return _buildCommon2.default.makeFragment(inner);\n};\n\ngroupTypes.katex = function (group, options) {\n    // The KaTeX logo. The offsets for the K and a were chosen to look\n    // good, but the offsets for the T, E, and X were taken from the\n    // definition of \\TeX in TeX (see TeXbook pg. 356)\n    var k = makeSpan([\"k\"], [_buildCommon2.default.mathsym(\"K\", group.mode)], options);\n    var a = makeSpan([\"a\"], [_buildCommon2.default.mathsym(\"A\", group.mode)], options);\n\n    a.height = (a.height + 0.2) * 0.75;\n    a.depth = (a.height - 0.2) * 0.75;\n\n    var t = makeSpan([\"t\"], [_buildCommon2.default.mathsym(\"T\", group.mode)], options);\n    var e = makeSpan([\"e\"], [_buildCommon2.default.mathsym(\"E\", group.mode)], options);\n\n    e.height = e.height - 0.2155;\n    e.depth = e.depth + 0.2155;\n\n    var x = makeSpan([\"x\"], [_buildCommon2.default.mathsym(\"X\", group.mode)], options);\n\n    return makeSpan([\"mord\", \"katex-logo\"], [k, a, t, e, x], options);\n};\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n    var line = makeSpan([className], [], options);\n    line.height = thickness || options.fontMetrics().defaultRuleThickness;\n    line.style.borderBottomWidth = line.height + \"em\";\n    line.maxFontSize = 1.0;\n    return line;\n};\n\ngroupTypes.overline = function (group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n    // Build the inner group in the cramped style.\n    var innerGroup = buildGroup(group.value.body, options.havingCrampedStyle());\n\n    // Create the line above the body\n    var line = makeLineSpan(\"overline-line\", options);\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: innerGroup }, { type: \"kern\", size: 3 * line.height }, { type: \"elem\", elem: line }, { type: \"kern\", size: line.height }], \"firstBaseline\", null, options);\n\n    return makeSpan([\"mord\", \"overline\"], [vlist], options);\n};\n\ngroupTypes.underline = function (group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    var innerGroup = buildGroup(group.value.body, options);\n\n    // Create the line above the body\n    var line = makeLineSpan(\"underline-line\", options);\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = _buildCommon2.default.makeVList([{ type: \"kern\", size: line.height }, { type: \"elem\", elem: line }, { type: \"kern\", size: 3 * line.height }, { type: \"elem\", elem: innerGroup }], \"top\", innerGroup.height, options);\n\n    return makeSpan([\"mord\", \"underline\"], [vlist], options);\n};\n\ngroupTypes.sqrt = function (group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    var inner = buildGroup(group.value.body, options.havingCrampedStyle());\n    if (inner.height === 0) {\n        // Render a small surd.\n        inner.height = options.fontMetrics().xHeight;\n    }\n\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n    if (inner instanceof _domTree2.default.documentFragment) {\n        inner = makeSpan([], [inner], options);\n    }\n\n    // Calculate the minimum size for the \\surd delimiter\n    var metrics = options.fontMetrics();\n    var theta = metrics.defaultRuleThickness;\n\n    var phi = theta;\n    if (options.style.id < _Style2.default.TEXT.id) {\n        phi = options.fontMetrics().xHeight;\n    }\n\n    // Calculate the clearance between the body and line\n    var lineClearance = theta + phi / 4;\n\n    var minDelimiterHeight = (inner.height + inner.depth + lineClearance + theta) * options.sizeMultiplier;\n\n    // Create a sqrt SVG of the required minimum size\n    var img = _delimiter2.default.customSizedDelim(\"\\\\surd\", minDelimiterHeight, false, options, group.mode);\n\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    var ruleWidth = options.fontMetrics().sqrtRuleThickness * img.sizeMultiplier;\n\n    var delimDepth = img.height - ruleWidth;\n\n    // Adjust the clearance based on the delimiter size\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n        lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    }\n\n    // Shift the sqrt image\n    var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n\n    inner.style.paddingLeft = img.advanceWidth + \"em\";\n\n    // Overlay the image and the argument.\n    var body = _buildCommon2.default.makeVList([{ type: \"elem\", elem: inner }, { type: \"kern\", size: -(inner.height + imgShift) }, { type: \"elem\", elem: img }, { type: \"kern\", size: ruleWidth }], \"firstBaseline\", null, options);\n    body.children[0].children[0].classes.push(\"svg-align\");\n\n    if (!group.value.index) {\n        return makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n        // Handle the optional root index\n\n        // The index is always in scriptscript style\n        var newOptions = options.havingStyle(_Style2.default.SCRIPTSCRIPT);\n        var rootm = buildGroup(group.value.index, newOptions, options);\n\n        // The amount the index is shifted by. This is taken from the TeX\n        // source, in the definition of `\\r@@t`.\n        var toShift = 0.6 * (body.height - body.depth);\n\n        // Build a VList with the superscript shifted up correctly\n        var rootVList = _buildCommon2.default.makeVList([{ type: \"elem\", elem: rootm }], \"shift\", -toShift, options);\n        // Add a class surrounding it so we can add on the appropriate\n        // kerning\n        var rootVListWrap = makeSpan([\"root\"], [rootVList]);\n\n        return makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n};\n\nfunction sizingGroup(value, options, baseOptions) {\n    var inner = buildExpression(value, options, false);\n    var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n\n    // Add size-resetting classes to the inner list and set maxFontSize\n    // manually. Handle nested size changes.\n    for (var i = 0; i < inner.length; i++) {\n        var pos = _utils2.default.indexOf(inner[i].classes, \"sizing\");\n        if (pos < 0) {\n            Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n        } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n            // This is a nested size change: e.g., inner[i] is the \"b\" in\n            // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n            // but not the new size.\n            inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n        }\n\n        inner[i].height *= multiplier;\n        inner[i].depth *= multiplier;\n    }\n\n    return _buildCommon2.default.makeFragment(inner);\n}\n\ngroupTypes.sizing = function (group, options) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var newOptions = options.havingSize(group.value.size);\n    return sizingGroup(group.value.value, newOptions, options);\n};\n\ngroupTypes.styling = function (group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n\n    // Figure out what style we're changing to.\n    var styleMap = {\n        \"display\": _Style2.default.DISPLAY,\n        \"text\": _Style2.default.TEXT,\n        \"script\": _Style2.default.SCRIPT,\n        \"scriptscript\": _Style2.default.SCRIPTSCRIPT\n    };\n\n    var newStyle = styleMap[group.value.style];\n    var newOptions = options.havingStyle(newStyle);\n    return sizingGroup(group.value.value, newOptions, options);\n};\n\ngroupTypes.font = function (group, options) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font));\n};\n\ngroupTypes.verb = function (group, options) {\n    var text = _buildCommon2.default.makeVerb(group, options);\n    var body = [];\n    // \\verb enters text mode and therefore is sized like \\textstyle\n    var newOptions = options.havingStyle(options.style.text());\n    for (var i = 0; i < text.length; i++) {\n        if (text[i] === '\\xA0') {\n            // spaces appear as nonbreaking space\n            // The space character isn't in the Typewriter-Regular font,\n            // so we implement it as a kern of the same size as a character.\n            // 0.525 is the width of a texttt character in LaTeX.\n            // It automatically gets scaled by the font size.\n            var rule = makeSpan([\"mord\", \"rule\"], [], newOptions);\n            rule.style.marginLeft = \"0.525em\";\n            body.push(rule);\n        } else {\n            body.push(_buildCommon2.default.makeSymbol(text[i], \"Typewriter-Regular\", group.mode, newOptions, [\"mathtt\"]));\n        }\n    }\n    _buildCommon2.default.tryCombineChars(body);\n    return makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), body, newOptions);\n};\n\ngroupTypes.rule = function (group, options) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options);\n\n    // Calculate the shift, width, and height of the rule, and account for units\n    var shift = 0;\n    if (group.value.shift) {\n        shift = (0, _units.calculateSize)(group.value.shift, options);\n    }\n\n    var width = (0, _units.calculateSize)(group.value.width, options);\n    var height = (0, _units.calculateSize)(group.value.height, options);\n\n    // Style the rule to the right size\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\";\n\n    // Record the height and width\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift;\n    // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n\n    return rule;\n};\n\ngroupTypes.kern = function (group, options) {\n    // Make an empty span for the rule\n    var rule = makeSpan([\"mord\", \"rule\"], [], options);\n\n    if (group.value.dimension) {\n        var dimension = (0, _units.calculateSize)(group.value.dimension, options);\n        rule.style.marginLeft = dimension + \"em\";\n    }\n\n    return rule;\n};\n\ngroupTypes.accent = function (group, options) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = group.value.base;\n\n    var supsubGroup = void 0;\n    if (group.type === \"supsub\") {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The supsub group is the group that was passed in\n        var supsub = group;\n        // The real accent group is the base of the supsub group\n        group = supsub.value.base;\n        // The character box is the base of the accent group\n        base = group.value.base;\n        // Stick the character box into the base of the supsub group\n        supsub.value.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supsubGroup = buildGroup(supsub, options);\n    }\n\n    // Build the base group\n    var body = buildGroup(base, options.havingCrampedStyle());\n\n    // Does the accent need to shift for the skew of a character?\n    var mustShift = group.value.isShifty && isCharacterBox(base);\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew = 0;\n    if (mustShift) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildGroup(baseChar, options.havingCrampedStyle());\n        // Finally, we pull the skew off of the symbol.\n        skew = baseGroup.skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, options.fontMetrics().xHeight);\n\n    // Build the accent\n    var accentBody = void 0;\n    if (!group.value.isStretchy) {\n        var accent = _buildCommon2.default.makeSymbol(group.value.label, \"Main-Regular\", group.mode, options);\n        // Remove the italic correction of the accent, because it only serves to\n        // shift the accent over to a place we don't want.\n        accent.italic = 0;\n\n        // The \\vec character that the fonts use is a combining character, and\n        // thus shows up much too far to the left. To account for this, we add a\n        // specific class which shifts the accent over to where we want it.\n        // TODO(emily): Fix this in a better way, like by changing the font\n        // Similarly, text accent \\H is a combining character and\n        // requires a different adjustment.\n        var accentClass = null;\n        if (group.value.label === \"\\\\vec\") {\n            accentClass = \"accent-vec\";\n        } else if (group.value.label === '\\\\H') {\n            accentClass = \"accent-hungarian\";\n        }\n\n        accentBody = makeSpan([], [accent]);\n        accentBody = makeSpan([\"accent-body\", accentClass], [accentBody]);\n\n        // Shift the accent over by the skew. Note we shift by twice the skew\n        // because we are centering the accent, so by adding 2*skew to the left,\n        // we shift it to the right by 1*skew.\n        accentBody.style.marginLeft = 2 * skew + \"em\";\n\n        accentBody = _buildCommon2.default.makeVList([{ type: \"elem\", elem: body }, { type: \"kern\", size: -clearance }, { type: \"elem\", elem: accentBody }], \"firstBaseline\", null, options);\n    } else {\n        accentBody = _stretchy2.default.svgSpan(group, options);\n\n        accentBody = _buildCommon2.default.makeVList([{ type: \"elem\", elem: body }, { type: \"elem\", elem: accentBody }], \"firstBaseline\", null, options);\n\n        var styleSpan = accentBody.children[0].children[0].children[1];\n        styleSpan.classes.push(\"svg-align\"); // text-align: left;\n        if (skew > 0) {\n            // Shorten the accent and nudge it to the right.\n            styleSpan.style.width = \"calc(100% - \" + 2 * skew + \"em)\";\n            styleSpan.style.marginLeft = 2 * skew + \"em\";\n        }\n    }\n\n    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n    if (supsubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supsubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supsubGroup.classes[0] = \"mord\";\n\n        return supsubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\ngroupTypes.horizBrace = function (group, options) {\n    var style = options.style;\n\n    var hasSupSub = group.type === \"supsub\";\n    var supSubGroup = void 0;\n    var newOptions = void 0;\n    if (hasSupSub) {\n        // Ref: LaTeX source2e: }}}}\\limits}\n        // i.e. LaTeX treats the brace similar to an op and passes it\n        // with \\limits, so we need to assign supsub style.\n        if (group.value.sup) {\n            newOptions = options.havingStyle(style.sup());\n            supSubGroup = buildGroup(group.value.sup, newOptions, options);\n        } else {\n            newOptions = options.havingStyle(style.sub());\n            supSubGroup = buildGroup(group.value.sub, newOptions, options);\n        }\n        group = group.value.base;\n    }\n\n    // Build the base group\n    var body = buildGroup(group.value.base, options.havingBaseStyle(_Style2.default.DISPLAY));\n\n    // Create the stretchy element\n    var braceBody = _stretchy2.default.svgSpan(group, options);\n\n    // Generate the vlist, with the appropriate kerns               ┏━━━━━━━━┓\n    // This first vlist contains the subject matter and the brace:   equation\n    var vlist = void 0;\n    if (group.value.isOver) {\n        vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: body }, { type: \"kern\", size: 0.1 }, { type: \"elem\", elem: braceBody }], \"firstBaseline\", null, options);\n        vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    } else {\n        vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: braceBody }, { type: \"kern\", size: 0.1 }, { type: \"elem\", elem: body }], \"bottom\", body.depth + 0.1 + braceBody.height, options);\n        vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n    }\n\n    if (hasSupSub) {\n        // In order to write the supsub, wrap the first vlist in another vlist:\n        // They can't all go in the same vlist, because the note might be wider\n        // than the equation. We want the equation to control the brace width.\n\n        //      note          long note           long note\n        //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n        //    equation           eqn                 eqn\n\n        var vSpan = makeSpan([\"mord\", group.value.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n        if (group.value.isOver) {\n            vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: vSpan }, { type: \"kern\", size: 0.2 }, { type: \"elem\", elem: supSubGroup }], \"firstBaseline\", null, options);\n        } else {\n            vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: supSubGroup }, { type: \"kern\", size: 0.2 }, { type: \"elem\", elem: vSpan }], \"bottom\", vSpan.depth + 0.2 + supSubGroup.height, options);\n        }\n    }\n\n    return makeSpan([\"mord\", group.value.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\ngroupTypes.accentUnder = function (group, options) {\n    // Treat under accents much like underlines.\n    var innerGroup = buildGroup(group.value.base, options);\n\n    var accentBody = _stretchy2.default.svgSpan(group, options);\n    var kern = /tilde/.test(group.value.label) ? 0.12 : 0;\n\n    // Generate the vlist, with the appropriate kerns\n    var vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: accentBody }, { type: \"kern\", size: kern }, { type: \"elem\", elem: innerGroup }], \"bottom\", accentBody.height + kern, options);\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n\n    return makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n};\n\ngroupTypes.enclose = function (group, options) {\n    // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n    var inner = buildGroup(group.value.body, options);\n\n    var label = group.value.label.substr(1);\n    var scale = options.sizeMultiplier;\n    var img = void 0;\n    var imgShift = 0;\n    var isColorbox = /color/.test(label);\n\n    if (label === \"sout\") {\n        img = makeSpan([\"stretchy\", \"sout\"]);\n        img.height = options.fontMetrics().defaultRuleThickness / scale;\n        imgShift = -0.5 * options.fontMetrics().xHeight;\n    } else {\n        // Add horizontal padding\n        inner.classes.push(/cancel/.test(label) ? \"cancel-pad\" : \"boxpad\");\n\n        // Add vertical padding\n        var vertPad = 0;\n        // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n        // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n        if (/box/.test(label)) {\n            vertPad = label === \"colorbox\" ? 0.3 : 0.34;\n        } else {\n            vertPad = isCharacterBox(group.value.body) ? 0.2 : 0;\n        }\n\n        img = _stretchy2.default.encloseSpan(inner, label, vertPad, options);\n        imgShift = inner.depth + vertPad;\n\n        if (isColorbox) {\n            img.style.backgroundColor = group.value.backgroundColor.value;\n            if (label === \"fcolorbox\") {\n                img.style.borderColor = group.value.borderColor.value;\n            }\n        }\n    }\n\n    var vlist = void 0;\n    if (isColorbox) {\n        vlist = _buildCommon2.default.makeVList([\n        // Put the color background behind inner;\n        { type: \"elem\", elem: img, shift: imgShift }, { type: \"elem\", elem: inner, shift: 0 }], \"individualShift\", null, options);\n    } else {\n        vlist = _buildCommon2.default.makeVList([\n        // Write the \\cancel stroke on top of inner.\n        { type: \"elem\", elem: inner, shift: 0 }, { type: \"elem\", elem: img, shift: imgShift }], \"individualShift\", null, options);\n    }\n\n    if (/cancel/.test(label)) {\n        vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n\n        // cancel does not create horiz space for its line extension.\n        // That is, not when adjacent to a mord.\n        return makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n    } else {\n        return makeSpan([\"mord\"], [vlist], options);\n    }\n};\n\ngroupTypes.xArrow = function (group, options) {\n    var style = options.style;\n\n    // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n\n    var newOptions = options.havingStyle(style.sup());\n    var upperGroup = buildGroup(group.value.body, newOptions, options);\n    upperGroup.classes.push(\"x-arrow-pad\");\n\n    var lowerGroup = void 0;\n    if (group.value.below) {\n        // Build the lower group\n        newOptions = options.havingStyle(style.sub());\n        lowerGroup = buildGroup(group.value.below, newOptions, options);\n        lowerGroup.classes.push(\"x-arrow-pad\");\n    }\n\n    var arrowBody = _stretchy2.default.svgSpan(group, options);\n\n    // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n    var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height;\n    // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n    var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111;\n\n    // Generate the vlist\n    var vlist = void 0;\n    if (group.value.below) {\n        var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n        vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: upperGroup, shift: upperShift }, { type: \"elem\", elem: arrowBody, shift: arrowShift }, { type: \"elem\", elem: lowerGroup, shift: lowerShift }], \"individualShift\", null, options);\n    } else {\n        vlist = _buildCommon2.default.makeVList([{ type: \"elem\", elem: upperGroup, shift: upperShift }, { type: \"elem\", elem: arrowBody, shift: arrowShift }], \"individualShift\", null, options);\n    }\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n\n    return makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n};\n\ngroupTypes.mclass = function (group, options) {\n    var elements = buildExpression(group.value.value, options, true);\n\n    return makeSpan([group.value.mclass], elements, options);\n};\n\ngroupTypes.raisebox = function (group, options) {\n    var body = groupTypes.sizing({ value: {\n            value: [{\n                type: \"text\",\n                value: {\n                    body: group.value.value,\n                    font: \"mathrm\" // simulate \\textrm\n                }\n            }],\n            size: 6 // simulate \\normalsize\n        } }, options);\n    var dy = (0, _units.calculateSize)(group.value.dy.value, options);\n    return _buildCommon2.default.makeVList([{\n        type: \"elem\",\n        elem: body\n    }], \"shift\", -dy, options);\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildGroup = exports.buildGroup = function buildGroup(group, options, baseOptions) {\n    if (!group) {\n        return makeSpan();\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var groupNode = groupTypes[group.type](group, options);\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (baseOptions && options.size !== baseOptions.size) {\n            groupNode = makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n\n            var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new _ParseError2.default(\"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nfunction buildHTML(tree, options) {\n    // buildExpression is destructive, so we need to make a clone\n    // of the incoming tree so that it isn't accidentally changed\n    tree = JSON.parse((0, _stringify2.default)(tree));\n\n    // Build the expression contained in the tree\n    var expression = buildExpression(tree, options, true);\n    var body = makeSpan([\"base\"], expression, options);\n\n    // Add struts, which ensure that the top of the HTML element falls at the\n    // height of the expression, and the bottom of the HTML element falls at the\n    // depth of the expression.\n    var topStrut = makeSpan([\"strut\"]);\n    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);\n\n    topStrut.style.height = body.height + \"em\";\n    bottomStrut.style.height = body.height + body.depth + \"em\";\n    // We'd like to use `vertical-align: top` but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead staying in the\n    // normal place) so we use an absolute value for vertical-align instead\n    bottomStrut.style.verticalAlign = -body.depth + \"em\";\n\n    // Wrap the struts and body together\n    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);\n\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    return htmlNode;\n}\n\n},{\"./ParseError\":84,\"./Style\":89,\"./buildCommon\":91,\"./delimiter\":97,\"./domTree\":98,\"./stretchy\":110,\"./units\":114,\"./utils\":115,\"babel-runtime/core-js/json/stringify\":5}],93:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.buildGroup = exports.buildExpression = exports.groupTypes = exports.makeText = undefined;\nexports.default = buildMathML;\n\nvar _buildCommon = require(\"./buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _fontMetrics = require(\"./fontMetrics\");\n\nvar _fontMetrics2 = _interopRequireDefault(_fontMetrics);\n\nvar _mathMLTree = require(\"./mathMLTree\");\n\nvar _mathMLTree2 = _interopRequireDefault(_mathMLTree);\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _Style = require(\"./Style\");\n\nvar _Style2 = _interopRequireDefault(_Style);\n\nvar _symbols = require(\"./symbols\");\n\nvar _symbols2 = _interopRequireDefault(_symbols);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _stretchy = require(\"./stretchy\");\n\nvar _stretchy2 = _interopRequireDefault(_stretchy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\n/**\n * WARNING: New methods on groupTypes should be added to src/functions.\n *\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\nvar makeText = exports.makeText = function makeText(text, mode) {\n    if (_symbols2.default[mode][text] && _symbols2.default[mode][text].replace) {\n        text = _symbols2.default[mode][text].replace;\n    }\n\n    return new _mathMLTree2.default.TextNode(text);\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar getVariant = function getVariant(group, options) {\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    }\n\n    var value = group.value;\n    if (_utils2.default.contains([\"\\\\imath\", \"\\\\jmath\"], value)) {\n        return null;\n    }\n\n    if (_symbols2.default[mode][value] && _symbols2.default[mode][value].replace) {\n        value = _symbols2.default[mode][value].replace;\n    }\n\n    var fontName = _buildCommon2.default.fontMap[font].fontName;\n    if (_fontMetrics2.default.getCharacterMetrics(value, fontName)) {\n        return _buildCommon2.default.fontMap[options.font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Functions for handling the different types of groups found in the parse\n * tree. Each function should take a parse group and return a MathML node.\n */\nvar groupTypes = exports.groupTypes = {};\n\nvar defaultVariant = {\n    \"mi\": \"italic\",\n    \"mn\": \"normal\",\n    \"mtext\": \"normal\"\n};\n\ngroupTypes.mathord = function (group, options) {\n    var node = new _mathMLTree2.default.MathNode(\"mi\", [makeText(group.value, group.mode)]);\n\n    var variant = getVariant(group, options) || \"italic\";\n    if (variant !== defaultVariant[node.type]) {\n        node.setAttribute(\"mathvariant\", variant);\n    }\n    return node;\n};\n\ngroupTypes.textord = function (group, options) {\n    var text = makeText(group.value, group.mode);\n\n    var variant = getVariant(group, options) || \"normal\";\n\n    var node = void 0;\n    if (group.mode === 'text') {\n        node = new _mathMLTree2.default.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.value)) {\n        // TODO(kevinb) merge adjacent <mn> nodes\n        // do it as a post processing step\n        node = new _mathMLTree2.default.MathNode(\"mn\", [text]);\n    } else if (group.value === \"\\\\prime\") {\n        node = new _mathMLTree2.default.MathNode(\"mo\", [text]);\n    } else {\n        node = new _mathMLTree2.default.MathNode(\"mi\", [text]);\n    }\n    if (variant !== defaultVariant[node.type]) {\n        node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n};\n\ngroupTypes.bin = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.rel = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.open = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.close = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.inner = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value, group.mode)]);\n\n    return node;\n};\n\ngroupTypes.punct = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value, group.mode)]);\n\n    node.setAttribute(\"separator\", \"true\");\n\n    return node;\n};\n\ngroupTypes.ordgroup = function (group, options) {\n    var inner = buildExpression(group.value, options);\n\n    var node = new _mathMLTree2.default.MathNode(\"mrow\", inner);\n\n    return node;\n};\n\ngroupTypes.text = function (group, options) {\n    var body = group.value.body;\n\n    // Convert each element of the body into MathML, and combine consecutive\n    // <mtext> outputs into a single <mtext> tag.  In this way, we don't\n    // nest non-text items (e.g., $nested-math$) within an <mtext>.\n    var inner = [];\n    var currentText = null;\n    for (var i = 0; i < body.length; i++) {\n        var _group = buildGroup(body[i], options);\n        if (_group.type === 'mtext' && currentText != null) {\n            Array.prototype.push.apply(currentText.children, _group.children);\n        } else {\n            inner.push(_group);\n            if (_group.type === 'mtext') {\n                currentText = _group;\n            }\n        }\n    }\n\n    // If there is a single tag in the end (presumably <mtext>),\n    // just return it.  Otherwise, wrap them in an <mrow>.\n    if (inner.length === 1) {\n        return inner[0];\n    } else {\n        return new _mathMLTree2.default.MathNode(\"mrow\", inner);\n    }\n};\n\ngroupTypes.color = function (group, options) {\n    var inner = buildExpression(group.value.value, options);\n\n    var node = new _mathMLTree2.default.MathNode(\"mstyle\", inner);\n\n    node.setAttribute(\"mathcolor\", group.value.color);\n\n    return node;\n};\n\ngroupTypes.supsub = function (group, options) {\n    // Is the inner group a relevant horizonal brace?\n    var isBrace = false;\n    var isOver = void 0;\n    var isSup = void 0;\n    if (group.value.base) {\n        if (group.value.base.value.type === \"horizBrace\") {\n            isSup = group.value.sup ? true : false;\n            if (isSup === group.value.base.value.isOver) {\n                isBrace = true;\n                isOver = group.value.base.value.isOver;\n            }\n        }\n    }\n\n    var removeUnnecessaryRow = true;\n    var children = [buildGroup(group.value.base, options, removeUnnecessaryRow)];\n\n    if (group.value.sub) {\n        children.push(buildGroup(group.value.sub, options, removeUnnecessaryRow));\n    }\n\n    if (group.value.sup) {\n        children.push(buildGroup(group.value.sup, options, removeUnnecessaryRow));\n    }\n\n    var nodeType = void 0;\n    if (isBrace) {\n        nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.value.sub) {\n        nodeType = \"msup\";\n    } else if (!group.value.sup) {\n        nodeType = \"msub\";\n    } else {\n        var base = group.value.base;\n        if (base && base.value.limits && options.style === _Style2.default.DISPLAY) {\n            nodeType = \"munderover\";\n        } else {\n            nodeType = \"msubsup\";\n        }\n    }\n\n    var node = new _mathMLTree2.default.MathNode(nodeType, children);\n\n    return node;\n};\n\ngroupTypes.genfrac = function (group, options) {\n    var node = new _mathMLTree2.default.MathNode(\"mfrac\", [buildGroup(group.value.numer, options), buildGroup(group.value.denom, options)]);\n\n    if (!group.value.hasBarLine) {\n        node.setAttribute(\"linethickness\", \"0px\");\n    }\n\n    if (group.value.leftDelim != null || group.value.rightDelim != null) {\n        var withDelims = [];\n\n        if (group.value.leftDelim != null) {\n            var leftOp = new _mathMLTree2.default.MathNode(\"mo\", [new _mathMLTree2.default.TextNode(group.value.leftDelim)]);\n\n            leftOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(leftOp);\n        }\n\n        withDelims.push(node);\n\n        if (group.value.rightDelim != null) {\n            var rightOp = new _mathMLTree2.default.MathNode(\"mo\", [new _mathMLTree2.default.TextNode(group.value.rightDelim)]);\n\n            rightOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(rightOp);\n        }\n\n        var outerNode = new _mathMLTree2.default.MathNode(\"mrow\", withDelims);\n\n        return outerNode;\n    }\n\n    return node;\n};\n\ngroupTypes.sqrt = function (group, options) {\n    var node = void 0;\n    if (group.value.index) {\n        node = new _mathMLTree2.default.MathNode(\"mroot\", [buildGroup(group.value.body, options), buildGroup(group.value.index, options)]);\n    } else {\n        node = new _mathMLTree2.default.MathNode(\"msqrt\", [buildGroup(group.value.body, options)]);\n    }\n\n    return node;\n};\n\ngroupTypes.accent = function (group, options) {\n    var accentNode = void 0;\n    if (group.value.isStretchy) {\n        accentNode = _stretchy2.default.mathMLnode(group.value.label);\n    } else {\n        accentNode = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value.label, group.mode)]);\n    }\n\n    var node = new _mathMLTree2.default.MathNode(\"mover\", [buildGroup(group.value.base, options), accentNode]);\n\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.spacing = function (group) {\n    var node = void 0;\n\n    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" || group.value === \" \" || group.value === \"~\") {\n        node = new _mathMLTree2.default.MathNode(\"mtext\", [new _mathMLTree2.default.TextNode(\"\\xA0\")]);\n    } else {\n        node = new _mathMLTree2.default.MathNode(\"mspace\");\n\n        node.setAttribute(\"width\", _buildCommon2.default.spacingFunctions[group.value].size);\n    }\n\n    return node;\n};\n\ngroupTypes.op = function (group, options) {\n    var node = void 0;\n\n    // TODO(emily): handle big operators using the `largeop` attribute\n\n    if (group.value.symbol) {\n        // This is a symbol. Just add the symbol.\n        node = new _mathMLTree2.default.MathNode(\"mo\", [makeText(group.value.body, group.mode)]);\n    } else if (group.value.value) {\n        // This is an operator with children. Add them.\n        node = new _mathMLTree2.default.MathNode(\"mo\", buildExpression(group.value.value, options));\n    } else {\n        // This is a text operator. Add all of the characters from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup.\n        node = new _mathMLTree2.default.MathNode(\"mi\", [new _mathMLTree2.default.TextNode(group.value.body.slice(1))]);\n\n        // TODO(ron): Append an <mo>&ApplyFunction;</mo> as in \\operatorname\n        // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.2\n    }\n\n    return node;\n};\n\ngroupTypes.mod = function (group, options) {\n    var inner = [];\n\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(new _mathMLTree2.default.MathNode(\"mo\", [makeText(\"(\", group.mode)]));\n    }\n    if (group.value.modType !== \"pod\") {\n        inner.push(new _mathMLTree2.default.MathNode(\"mo\", [makeText(\"mod\", group.mode)]));\n    }\n    if (group.value.value) {\n        var space = new _mathMLTree2.default.MathNode(\"mspace\");\n        space.setAttribute(\"width\", \"0.333333em\");\n        inner.push(space);\n        inner = inner.concat(buildExpression(group.value.value, options));\n    }\n    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {\n        inner.push(new _mathMLTree2.default.MathNode(\"mo\", [makeText(\")\", group.mode)]));\n    }\n\n    return new _mathMLTree2.default.MathNode(\"mo\", inner);\n};\n\ngroupTypes.katex = function (group) {\n    var node = new _mathMLTree2.default.MathNode(\"mtext\", [new _mathMLTree2.default.TextNode(\"KaTeX\")]);\n\n    return node;\n};\n\ngroupTypes.font = function (group, options) {\n    var font = group.value.font;\n    return buildGroup(group.value.body, options.withFont(font));\n};\n\ngroupTypes.styling = function (group, options) {\n    // Figure out what style we're changing to.\n    // TODO(kevinb): dedupe this with buildHTML.js\n    // This will be easier of handling of styling nodes is in the same file.\n    var styleMap = {\n        \"display\": _Style2.default.DISPLAY,\n        \"text\": _Style2.default.TEXT,\n        \"script\": _Style2.default.SCRIPT,\n        \"scriptscript\": _Style2.default.SCRIPTSCRIPT\n    };\n\n    var newStyle = styleMap[group.value.style];\n    var newOptions = options.havingStyle(newStyle);\n\n    var inner = buildExpression(group.value.value, newOptions);\n\n    var node = new _mathMLTree2.default.MathNode(\"mstyle\", inner);\n\n    var styleAttributes = {\n        \"display\": [\"0\", \"true\"],\n        \"text\": [\"0\", \"false\"],\n        \"script\": [\"1\", \"false\"],\n        \"scriptscript\": [\"2\", \"false\"]\n    };\n\n    var attr = styleAttributes[group.value.style];\n\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n\n    return node;\n};\n\ngroupTypes.sizing = function (group, options) {\n    var newOptions = options.havingSize(group.value.size);\n    var inner = buildExpression(group.value.value, newOptions);\n\n    var node = new _mathMLTree2.default.MathNode(\"mstyle\", inner);\n\n    // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n\n    return node;\n};\n\ngroupTypes.verb = function (group, options) {\n    var text = new _mathMLTree2.default.TextNode(_buildCommon2.default.makeVerb(group, options));\n    var node = new _mathMLTree2.default.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", _buildCommon2.default.fontMap[\"mathtt\"].variant);\n    return node;\n};\n\ngroupTypes.overline = function (group, options) {\n    var operator = new _mathMLTree2.default.MathNode(\"mo\", [new _mathMLTree2.default.TextNode(\"\\u203E\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new _mathMLTree2.default.MathNode(\"mover\", [buildGroup(group.value.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\ngroupTypes.underline = function (group, options) {\n    var operator = new _mathMLTree2.default.MathNode(\"mo\", [new _mathMLTree2.default.TextNode(\"\\u203E\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n\n    var node = new _mathMLTree2.default.MathNode(\"munder\", [buildGroup(group.value.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n\n    return node;\n};\n\ngroupTypes.accentUnder = function (group, options) {\n    var accentNode = _stretchy2.default.mathMLnode(group.value.label);\n    var node = new _mathMLTree2.default.MathNode(\"munder\", [buildGroup(group.value.body, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n};\n\ngroupTypes.enclose = function (group, options) {\n    var node = new _mathMLTree2.default.MathNode(\"menclose\", [buildGroup(group.value.body, options)]);\n    switch (group.value.label) {\n        case \"\\\\cancel\":\n            node.setAttribute(\"notation\", \"updiagonalstrike\");\n            break;\n        case \"\\\\bcancel\":\n            node.setAttribute(\"notation\", \"downdiagonalstrike\");\n            break;\n        case \"\\\\sout\":\n            node.setAttribute(\"notation\", \"horizontalstrike\");\n            break;\n        case \"\\\\fbox\":\n            node.setAttribute(\"notation\", \"box\");\n            break;\n        case \"\\\\colorbox\":\n            node.setAttribute(\"mathbackground\", group.value.backgroundColor.value);\n            break;\n        case \"\\\\fcolorbox\":\n            node.setAttribute(\"mathbackground\", group.value.backgroundColor.value);\n            // TODO(ron): I don't know any way to set the border color.\n            node.setAttribute(\"notation\", \"box\");\n            break;\n        default:\n            // xcancel\n            node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n    }\n    return node;\n};\n\ngroupTypes.horizBrace = function (group, options) {\n    var accentNode = _stretchy2.default.mathMLnode(group.value.label);\n    return new _mathMLTree2.default.MathNode(group.value.isOver ? \"mover\" : \"munder\", [buildGroup(group.value.base, options), accentNode]);\n};\n\ngroupTypes.xArrow = function (group, options) {\n    var arrowNode = _stretchy2.default.mathMLnode(group.value.label);\n    var node = void 0;\n    var lowerNode = void 0;\n\n    if (group.value.body) {\n        var upperNode = buildGroup(group.value.body, options);\n        if (group.value.below) {\n            lowerNode = buildGroup(group.value.below, options);\n            node = new _mathMLTree2.default.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n        } else {\n            node = new _mathMLTree2.default.MathNode(\"mover\", [arrowNode, upperNode]);\n        }\n    } else if (group.value.below) {\n        lowerNode = buildGroup(group.value.below, options);\n        node = new _mathMLTree2.default.MathNode(\"munder\", [arrowNode, lowerNode]);\n    } else {\n        node = new _mathMLTree2.default.MathNode(\"mover\", [arrowNode]);\n    }\n    return node;\n};\n\ngroupTypes.rule = function (group) {\n    // TODO(emily): Figure out if there's an actual way to draw black boxes\n    // in MathML.\n    var node = new _mathMLTree2.default.MathNode(\"mrow\");\n\n    return node;\n};\n\ngroupTypes.kern = function (group) {\n    // TODO(kevin): Figure out if there's a way to add space in MathML\n    var node = new _mathMLTree2.default.MathNode(\"mrow\");\n\n    return node;\n};\n\ngroupTypes.lap = function (group, options) {\n    // mathllap, mathrlap, mathclap\n    var node = new _mathMLTree2.default.MathNode(\"mpadded\", [buildGroup(group.value.body, options)]);\n\n    if (group.value.alignment !== \"rlap\") {\n        var offset = group.value.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n        node.setAttribute(\"lspace\", offset + \"width\");\n    }\n    node.setAttribute(\"width\", \"0px\");\n\n    return node;\n};\n\ngroupTypes.smash = function (group, options) {\n    var node = new _mathMLTree2.default.MathNode(\"mpadded\", [buildGroup(group.value.body, options)]);\n\n    if (group.value.smashHeight) {\n        node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.value.smashDepth) {\n        node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n};\n\ngroupTypes.mclass = function (group, options) {\n    var inner = buildExpression(group.value.value, options);\n    return new _mathMLTree2.default.MathNode(\"mstyle\", inner);\n};\n\ngroupTypes.raisebox = function (group, options) {\n    var node = new _mathMLTree2.default.MathNode(\"mpadded\", [buildGroup(group.value.body, options)]);\n    var dy = group.value.dy.value.number + group.value.dy.value.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes. A little simpler than the HTML version because we don't do any\n * previous-node handling.\n */\nvar buildExpression = exports.buildExpression = function buildExpression(expression, options) {\n    var groups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var group = expression[i];\n        groups.push(buildGroup(group, options));\n    }\n\n    // TODO(kevinb): combine \\\\not with mrels and mords\n\n    return groups;\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupTypes function\n * on it to produce a MathML node.\n */\nvar buildGroup = exports.buildGroup = function buildGroup(group, options) {\n    var removeUnnecessaryRow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!group) {\n        return new _mathMLTree2.default.MathNode(\"mrow\");\n    }\n\n    if (groupTypes[group.type]) {\n        // Call the groupTypes function\n        var result = groupTypes[group.type](group, options);\n        if (removeUnnecessaryRow) {\n            if (result.type === \"mrow\" && result.children.length === 1) {\n                return result.children[0];\n            }\n        }\n        return result;\n    } else {\n        throw new _ParseError2.default(\"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nfunction buildMathML(tree, texExpression, options) {\n    var expression = buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly.\n    var wrapper = new _mathMLTree2.default.MathNode(\"mrow\", expression);\n\n    // Build a TeX annotation of the source\n    var annotation = new _mathMLTree2.default.MathNode(\"annotation\", [new _mathMLTree2.default.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new _mathMLTree2.default.MathNode(\"semantics\", [wrapper, annotation]);\n\n    var math = new _mathMLTree2.default.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    return _buildCommon2.default.makeSpan([\"katex-mathml\"], [math]);\n}\n\n},{\"./ParseError\":84,\"./Style\":89,\"./buildCommon\":91,\"./fontMetrics\":101,\"./mathMLTree\":108,\"./stretchy\":110,\"./symbols\":112,\"./utils\":115}],94:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _buildHTML = require(\"./buildHTML\");\n\nvar _buildHTML2 = _interopRequireDefault(_buildHTML);\n\nvar _buildMathML = require(\"./buildMathML\");\n\nvar _buildMathML2 = _interopRequireDefault(_buildMathML);\n\nvar _buildCommon = require(\"./buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _Options = require(\"./Options\");\n\nvar _Options2 = _interopRequireDefault(_Options);\n\nvar _Settings = require(\"./Settings\");\n\nvar _Settings2 = _interopRequireDefault(_Settings);\n\nvar _Style = require(\"./Style\");\n\nvar _Style2 = _interopRequireDefault(_Style);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar buildTree = function buildTree(tree, expression, settings) {\n    settings = settings || new _Settings2.default({});\n\n    var startStyle = _Style2.default.TEXT;\n    if (settings.displayMode) {\n        startStyle = _Style2.default.DISPLAY;\n    }\n\n    // Setup the default options\n    var options = new _Options2.default({\n        style: startStyle,\n        maxSize: settings.maxSize\n    });\n\n    // `buildHTML` sometimes messes with the parse tree (like turning bins ->\n    // ords), so we build the MathML version first.\n    var mathMLNode = (0, _buildMathML2.default)(tree, expression, options);\n    var htmlNode = (0, _buildHTML2.default)(tree, options);\n\n    var katexNode = _buildCommon2.default.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n\n    if (settings.displayMode) {\n        return _buildCommon2.default.makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nexports.default = buildTree;\n\n},{\"./Options\":83,\"./Settings\":87,\"./Style\":89,\"./buildCommon\":91,\"./buildHTML\":92,\"./buildMathML\":93}],95:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports._environments = undefined;\nexports.default = defineEnvironment;\n\nvar _buildHTML = require(\"./buildHTML\");\n\nvar _buildMathML = require(\"./buildMathML\");\n\nvar _Options = require(\"./Options\");\n\nvar _Options2 = _interopRequireDefault(_Options);\n\nvar _ParseNode = require(\"./ParseNode\");\n\nvar _ParseNode2 = _interopRequireDefault(_ParseNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\n\n\n/**\n * The context contains the following properties:\n *  - mode: current parsing mode.\n *  - envName: the name of the environment, one of the listed names.\n *  - parser: the parser object.\n */\n\n\n/**\n *  - context: information and references provided by the parser\n *  - args: an array of arguments passed to \\begin{name}\n *  - optArgs: an array of optional arguments passed to \\begin{name}\n */\n\n\n/**\n *  - numArgs: (default 0) The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (default false) Whether or not the environment is allowed\n *                   inside text mode (not enforced yet).\n *  - numOptionalArgs: (default 0) Just like for a function\n */\n\n\n/**\n * Final enviornment spec for use at parse time.\n * This is almost identical to `EnvDefSpec`, except it\n * 1. includes the function handler\n * 2. requires all arguments except argType\n * It is generated by `defineEnvironment()` below.\n */\nvar _environments = exports._environments = {};\n\nfunction defineEnvironment(_ref) {\n    var type = _ref.type,\n        names = _ref.names,\n        props = _ref.props,\n        handler = _ref.handler,\n        htmlBuilder = _ref.htmlBuilder,\n        mathmlBuilder = _ref.mathmlBuilder;\n\n    // Set default values of environments\n    var data = {\n        numArgs: props.numArgs || 0,\n        greediness: 1,\n        allowedInText: false,\n        numOptionalArgs: 0,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        _environments[names[i]] = data;\n    }\n    if (htmlBuilder) {\n        _buildHTML.groupTypes[type] = htmlBuilder;\n    }\n    if (mathmlBuilder) {\n        _buildMathML.groupTypes[type] = mathmlBuilder;\n    }\n}\n\n},{\"./Options\":83,\"./ParseNode\":85,\"./buildHTML\":92,\"./buildMathML\":93}],96:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ordargument = exports._functions = undefined;\nexports.default = defineFunction;\n\nvar _buildHTML = require(\"./buildHTML\");\n\nvar _buildMathML = require(\"./buildMathML\");\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\n\n\n/** Context provided to function handlers for error messages. */\n\n\n// TODO: Enumerate all allowed output types.\n\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\nvar _functions = exports._functions = {};\n\nfunction defineFunction(_ref) {\n    var type = _ref.type,\n        names = _ref.names,\n        props = _ref.props,\n        handler = _ref.handler,\n        htmlBuilder = _ref.htmlBuilder,\n        mathmlBuilder = _ref.mathmlBuilder;\n\n    // Set default values of functions\n    var data = {\n        numArgs: props.numArgs,\n        argTypes: props.argTypes,\n        greediness: props.greediness === undefined ? 1 : props.greediness,\n        allowedInText: !!props.allowedInText,\n        allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        infix: !!props.infix,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        _functions[names[i]] = data;\n    }\n    if (type) {\n        if (htmlBuilder) {\n            _buildHTML.groupTypes[type] = htmlBuilder;\n        }\n        if (mathmlBuilder) {\n            _buildMathML.groupTypes[type] = mathmlBuilder;\n        }\n    }\n}\n\n// Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\nvar ordargument = exports.ordargument = function ordargument(arg) {\n    if (arg.type === \"ordgroup\") {\n        return arg.value;\n    } else {\n        return [arg];\n    }\n};\n\n},{\"./buildHTML\":92,\"./buildMathML\":93}],97:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _Style = require(\"./Style\");\n\nvar _Style2 = _interopRequireDefault(_Style);\n\nvar _domTree = require(\"./domTree\");\n\nvar _domTree2 = _interopRequireDefault(_domTree);\n\nvar _buildCommon = require(\"./buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _fontMetrics = require(\"./fontMetrics\");\n\nvar _fontMetrics2 = _interopRequireDefault(_fontMetrics);\n\nvar _symbols = require(\"./symbols\");\n\nvar _symbols2 = _interopRequireDefault(_symbols);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar getMetrics = function getMetrics(symbol, font) {\n    if (_symbols2.default.math[symbol] && _symbols2.default.math[symbol].replace) {\n        return _fontMetrics2.default.getCharacterMetrics(_symbols2.default.math[symbol].replace, font);\n    } else {\n        return _fontMetrics2.default.getCharacterMetrics(symbol, font);\n    }\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\nvar styleWrap = function styleWrap(delim, toStyle, options, classes) {\n    var newOptions = options.havingBaseStyle(toStyle);\n\n    var span = _buildCommon2.default.makeSpan((classes || []).concat(newOptions.sizingClasses(options)), [delim], options);\n\n    span.delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n    span.height *= span.delimSizeMultiplier;\n    span.depth *= span.delimSizeMultiplier;\n    span.maxFontSize = newOptions.sizeMultiplier;\n\n    return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n    var newOptions = options.havingBaseStyle(style);\n    var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n\n    span.classes.push(\"delimcenter\");\n    span.style.top = shift + \"em\";\n    span.height -= shift;\n    span.depth += shift;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n    var text = _buildCommon2.default.makeSymbol(delim, \"Main-Regular\", mode, options);\n    var span = styleWrap(text, style, options, classes);\n    if (center) {\n        centerSpan(span, options, style);\n    }\n    return span;\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar mathrmSize = function mathrmSize(value, size, mode, options) {\n    return _buildCommon2.default.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n    var inner = mathrmSize(delim, size, mode, options);\n    var span = styleWrap(_buildCommon2.default.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), _Style2.default.TEXT, options, classes);\n    if (center) {\n        centerSpan(span, options, _Style2.default.TEXT);\n    }\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar makeInner = function makeInner(symbol, font, mode) {\n    var sizeClass = void 0;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else if (font === \"Size4-Regular\") {\n        sizeClass = \"delim-size4\";\n    }\n\n    var inner = _buildCommon2.default.makeSpan([\"delimsizinginner\", sizeClass], [_buildCommon2.default.makeSpan([], [_buildCommon2.default.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return { type: \"elem\", elem: inner };\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top = void 0;\n    var middle = void 0;\n    var repeat = void 0;\n    var bottom = void 0;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23D0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23D0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23D0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23A1\";\n        repeat = \"\\u23A2\";\n        bottom = \"\\u23A3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23A4\";\n        repeat = \"\\u23A5\";\n        bottom = \"\\u23A6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\") {\n        repeat = top = \"\\u23A2\";\n        bottom = \"\\u23A3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\") {\n        top = \"\\u23A1\";\n        repeat = bottom = \"\\u23A2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\") {\n        repeat = top = \"\\u23A5\";\n        bottom = \"\\u23A6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\") {\n        top = \"\\u23A4\";\n        repeat = bottom = \"\\u23A5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239B\";\n        repeat = \"\\u239C\";\n        bottom = \"\\u239D\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239E\";\n        repeat = \"\\u239F\";\n        bottom = \"\\u23A0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23A7\";\n        middle = \"\\u23A8\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23AB\";\n        middle = \"\\u23AC\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\") {\n        top = \"\\u23A7\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\") {\n        top = \"\\u23AB\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\") {\n        top = \"\\u23A7\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\") {\n        top = \"\\u23AB\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = getMetrics(top, font);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = getMetrics(repeat, font);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = getMetrics(bottom, font);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = getMetrics(middle, font);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = options.fontMetrics().axisHeight;\n    if (center) {\n        axisHeight *= options.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(makeInner(bottom, font, mode));\n\n    if (middle === null) {\n        // Add that many symbols\n        for (var i = 0; i < repeatCount; i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (var _i = 0; _i < repeatCount; _i++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n        inners.push(makeInner(middle, font, mode));\n        for (var _i2 = 0; _i2 < repeatCount; _i2++) {\n            inners.push(makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var newOptions = options.havingBaseStyle(_Style2.default.TEXT);\n    var inner = _buildCommon2.default.makeVList(inners, \"bottom\", depth, newOptions);\n\n    return styleWrap(_buildCommon2.default.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), _Style2.default.TEXT, options, classes);\n};\n\nvar sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n    var alternate = void 0;\n    if (sqrtName === \"sqrtTall\") {\n        // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n        // One path edge has a variable length. It runs from the viniculumn\n        // to a point near (14 units) the bottom of the surd. The viniculum\n        // is 40 units thick. So the length of the line in question is:\n        var vertSegment = viewBoxHeight - 54;\n        alternate = \"M702 0H400000v40H742v\" + vertSegment + \"l-4 4-4 4c-.667.667\\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 0H400000v40H742z\";\n    }\n    var pathNode = new _domTree2.default.pathNode(sqrtName, alternate);\n\n    // Note: 1000:1 ratio of viewBox to document em width.\n    var attributes = [[\"width\", \"400em\"], [\"height\", height + \"em\"]];\n    attributes.push([\"viewBox\", \"0 0 400000 \" + viewBoxHeight]);\n    attributes.push([\"preserveAspectRatio\", \"xMinYMin slice\"]);\n    var svg = new _domTree2.default.svgNode([pathNode], attributes);\n\n    return _buildCommon2.default.makeSpan([\"hide-tail\"], [svg], options);\n};\n\nvar sqrtSpan = function sqrtSpan(height, delim, options) {\n    // Create a span containing an SVG image of a sqrt symbol.\n    var span = void 0;\n    var sizeMultiplier = options.sizeMultiplier; // default\n    var spanHeight = void 0;\n    var viewBoxHeight = void 0;\n\n    if (delim.type === \"small\") {\n        // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n        viewBoxHeight = 1000; // from font\n        var newOptions = options.havingBaseStyle(delim.style);\n        sizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n        spanHeight = 1 * sizeMultiplier;\n        span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"0.853em\";\n        span.advanceWidth = 0.833 * sizeMultiplier; // from the font.\n    } else if (delim.type === \"large\") {\n        // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n        viewBoxHeight = 1000 * sizeToMaxHeight[delim.size];\n        spanHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n        span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"1.02em\";\n        span.advanceWidth = 1.0 / sizeMultiplier; // from the font\n    } else {\n        // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n        // We'll use a single SVG to accomplish the same thing.\n        spanHeight = height / sizeMultiplier;\n        viewBoxHeight = Math.floor(1000 * height);\n        span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"0.742em\";\n        span.advanceWidth = 1.056 / sizeMultiplier;\n    }\n\n    span.height = spanHeight;\n    span.style.height = spanHeight + \"em\";\n    span.sizeMultiplier = sizeMultiplier;\n\n    return span;\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\", \"\\\\surd\"];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\"];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (_utils2.default.contains(stackLargeDelimiters, delim) || _utils2.default.contains(stackNeverDelimiters, delim)) {\n        return makeLargeDelim(delim, size, false, options, mode, classes);\n    } else if (_utils2.default.contains(stackAlwaysDelimiters, delim)) {\n        return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n    } else {\n        throw new _ParseError2.default(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{ type: \"small\", style: _Style2.default.SCRIPTSCRIPT }, { type: \"small\", style: _Style2.default.SCRIPT }, { type: \"small\", style: _Style2.default.TEXT }, { type: \"large\", size: 1 }, { type: \"large\", size: 2 }, { type: \"large\", size: 3 }, { type: \"large\", size: 4 }];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [{ type: \"small\", style: _Style2.default.SCRIPTSCRIPT }, { type: \"small\", style: _Style2.default.SCRIPT }, { type: \"small\", style: _Style2.default.TEXT }, { type: \"stack\" }];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [{ type: \"small\", style: _Style2.default.SCRIPTSCRIPT }, { type: \"small\", style: _Style2.default.SCRIPT }, { type: \"small\", style: _Style2.default.TEXT }, { type: \"large\", size: 1 }, { type: \"large\", size: 2 }, { type: \"large\", size: 3 }, { type: \"large\", size: 4 }, { type: \"stack\" }];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n */\nvar delimTypeToFont = function delimTypeToFont(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = getMetrics(delim, delimTypeToFont(sequence[i]));\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            var newOptions = options.havingBaseStyle(sequence[i].style);\n            heightDepth *= newOptions.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n    if (delim === \"<\" || delim === \"\\\\lt\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence = void 0;\n    if (_utils2.default.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (_utils2.default.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    if (delim === \"\\\\surd\") {\n        // Get an SVG image\n        return sqrtSpan(height, delimType, options);\n    } else {\n        // Get the delimiter from font glyphs.\n        // Depending on the sequence element we decided on, call the\n        // appropriate function.\n        if (delimType.type === \"small\") {\n            return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n        } else if (delimType.type === \"large\") {\n            return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n        } else if (delimType.type === \"stack\") {\n            return makeStackedDelim(delim, height, center, options, mode, classes);\n        }\n    }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n\n    var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n    // In real TeX, calculations are done using integral values which are\n    // 65536 per pt, or 655360 per em. So, the division here truncates in\n    // TeX but doesn't here, producing different results. If we wanted to\n    // exactly match TeX's calculation, we could do\n    //   Math.floor(655360 * maxDistFromAxis / 500) *\n    //    delimiterFactor / 655360\n    // (To see the difference, compare\n    //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n    // in TeX and KaTeX)\n    maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\nexports.default = {\n    sizedDelim: makeSizedDelim,\n    customSizedDelim: makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim\n};\n\n},{\"./ParseError\":84,\"./Style\":89,\"./buildCommon\":91,\"./domTree\":98,\"./fontMetrics\":101,\"./symbols\":112,\"./utils\":115}],98:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray2 = require(\"babel-runtime/helpers/slicedToArray\");\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _unicodeRegexes = require(\"./unicodeRegexes\");\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _svgGeometry = require(\"./svgGeometry\");\n\nvar _svgGeometry2 = _interopRequireDefault(_svgGeometry);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove null or empty classes.\n */\nvar createClass = function createClass(classes) {\n    classes = classes.slice();\n    for (var i = classes.length - 1; i >= 0; i--) {\n        if (!classes[i]) {\n            classes.splice(i, 1);\n        }\n    }\n\n    return classes.join(\" \");\n};\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n */\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n */\n\nvar span = function () {\n    function span(classes, children, options) {\n        (0, _classCallCheck3.default)(this, span);\n\n        this.classes = classes || [];\n        this.children = children || [];\n        this.height = 0;\n        this.depth = 0;\n        this.maxFontSize = 0;\n        this.style = {};\n        this.attributes = {};\n        if (options) {\n            if (options.style.isTight()) {\n                this.classes.push(\"mtight\");\n            }\n            if (options.getColor()) {\n                this.style.color = options.getColor();\n            }\n        }\n    }\n\n    /**\n     * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all\n     * browsers support attributes the same, and having too many custom attributes\n     * is probably bad.\n     */\n\n\n    (0, _createClass3.default)(span, [{\n        key: \"setAttribute\",\n        value: function setAttribute(attribute, value) {\n            this.attributes[attribute] = value;\n        }\n    }, {\n        key: \"tryCombine\",\n        value: function tryCombine(sibling) {\n            return false;\n        }\n\n        /**\n         * Convert the span into an HTML node\n         */\n\n    }, {\n        key: \"toNode\",\n        value: function toNode() {\n            var span = document.createElement(\"span\");\n\n            // Apply the class\n            span.className = createClass(this.classes);\n\n            // Apply inline styles\n            for (var style in this.style) {\n                if (Object.prototype.hasOwnProperty.call(this.style, style)) {\n                    span.style[style] = this.style[style];\n                }\n            }\n\n            // Apply attributes\n            for (var attr in this.attributes) {\n                if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                    span.setAttribute(attr, this.attributes[attr]);\n                }\n            }\n\n            // Append the children, also as HTML nodes\n            for (var i = 0; i < this.children.length; i++) {\n                span.appendChild(this.children[i].toNode());\n            }\n\n            return span;\n        }\n\n        /**\n         * Convert the span into an HTML markup string\n         */\n\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            var markup = \"<span\";\n\n            // Add the class\n            if (this.classes.length) {\n                markup += \" class=\\\"\";\n                markup += _utils2.default.escape(createClass(this.classes));\n                markup += \"\\\"\";\n            }\n\n            var styles = \"\";\n\n            // Add the styles, after hyphenation\n            for (var style in this.style) {\n                if (this.style.hasOwnProperty(style)) {\n                    styles += _utils2.default.hyphenate(style) + \":\" + this.style[style] + \";\";\n                }\n            }\n\n            if (styles) {\n                markup += \" style=\\\"\" + _utils2.default.escape(styles) + \"\\\"\";\n            }\n\n            // Add the attributes\n            for (var attr in this.attributes) {\n                if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                    markup += \" \" + attr + \"=\\\"\";\n                    markup += _utils2.default.escape(this.attributes[attr]);\n                    markup += \"\\\"\";\n                }\n            }\n\n            markup += \">\";\n\n            // Add the markup of the children, also as markup\n            for (var i = 0; i < this.children.length; i++) {\n                markup += this.children[i].toMarkup();\n            }\n\n            markup += \"</span>\";\n\n            return markup;\n        }\n    }]);\n    return span;\n}();\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. Thus, it only\n * contains children and doesn't have any HTML properties. It also keeps track\n * of a height, depth, and maxFontSize.\n */\n\n\nvar documentFragment = function () {\n    function documentFragment(children) {\n        (0, _classCallCheck3.default)(this, documentFragment);\n\n        this.children = children || [];\n        this.height = 0;\n        this.depth = 0;\n        this.maxFontSize = 0;\n    }\n\n    /**\n     * Convert the fragment into a node\n     */\n\n\n    (0, _createClass3.default)(documentFragment, [{\n        key: \"toNode\",\n        value: function toNode() {\n            // Create a fragment\n            var frag = document.createDocumentFragment();\n\n            // Append the children\n            for (var i = 0; i < this.children.length; i++) {\n                frag.appendChild(this.children[i].toNode());\n            }\n\n            return frag;\n        }\n\n        /**\n         * Convert the fragment into HTML markup\n         */\n\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            var markup = \"\";\n\n            // Simply concatenate the markup for the children together\n            for (var i = 0; i < this.children.length; i++) {\n                markup += this.children[i].toMarkup();\n            }\n\n            return markup;\n        }\n    }]);\n    return documentFragment;\n}();\n\nvar iCombinations = {\n    'î': \"\\u0131\\u0302\",\n    'ï': \"\\u0131\\u0308\",\n    'í': \"\\u0131\\u0301\",\n    // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n    'ì': \"\\u0131\\u0300\"\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nvar symbolNode = function () {\n    function symbolNode(value, height, depth, italic, skew, classes, style) {\n        (0, _classCallCheck3.default)(this, symbolNode);\n\n        this.value = value || \"\";\n        this.height = height || 0;\n        this.depth = depth || 0;\n        this.italic = italic || 0;\n        this.skew = skew || 0;\n        this.classes = classes || [];\n        this.style = style || {};\n        this.maxFontSize = 0;\n\n        // Mark CJK characters with specific classes so that we can specify which\n        // fonts to use.  This allows us to render these characters with a serif\n        // font in situations where the browser would either default to a sans serif\n        // or render a placeholder character.\n        if (_unicodeRegexes.cjkRegex.test(value)) {\n            // I couldn't find any fonts that contained Hangul as well as all of\n            // the other characters we wanted to test there for it gets its own\n            // CSS class.\n            if (_unicodeRegexes.hangulRegex.test(value)) {\n                this.classes.push('hangul_fallback');\n            } else {\n                this.classes.push('cjk_fallback');\n            }\n        }\n\n        if (/[îïíì]/.test(this.value)) {\n            // add ī when we add Extended Latin\n            this.value = iCombinations[this.value];\n        }\n    }\n\n    (0, _createClass3.default)(symbolNode, [{\n        key: \"tryCombine\",\n        value: function tryCombine(sibling) {\n            if (!sibling || !(sibling instanceof symbolNode) || this.italic > 0 || createClass(this.classes) !== createClass(sibling.classes) || this.skew !== sibling.skew || this.maxFontSize !== sibling.maxFontSize) {\n                return false;\n            }\n            for (var style in this.style) {\n                if (this.style.hasOwnProperty(style) && this.style[style] !== sibling.style[style]) {\n                    return false;\n                }\n            }\n            for (var _style in sibling.style) {\n                if (sibling.style.hasOwnProperty(_style) && this.style[_style] !== sibling.style[_style]) {\n                    return false;\n                }\n            }\n            this.value += sibling.value;\n            this.height = Math.max(this.height, sibling.height);\n            this.depth = Math.max(this.depth, sibling.depth);\n            this.italic = sibling.italic;\n            return true;\n        }\n\n        /**\n         * Creates a text node or span from a symbol node. Note that a span is only\n         * created if it is needed.\n         */\n\n    }, {\n        key: \"toNode\",\n        value: function toNode() {\n            var node = document.createTextNode(this.value);\n            var span = null;\n\n            if (this.italic > 0) {\n                span = document.createElement(\"span\");\n                span.style.marginRight = this.italic + \"em\";\n            }\n\n            if (this.classes.length > 0) {\n                span = span || document.createElement(\"span\");\n                span.className = createClass(this.classes);\n            }\n\n            for (var style in this.style) {\n                if (this.style.hasOwnProperty(style)) {\n                    span = span || document.createElement(\"span\");\n                    span.style[style] = this.style[style];\n                }\n            }\n\n            if (span) {\n                span.appendChild(node);\n                return span;\n            } else {\n                return node;\n            }\n        }\n\n        /**\n         * Creates markup for a symbol node.\n         */\n\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            // TODO(alpert): More duplication than I'd like from\n            // span.prototype.toMarkup and symbolNode.prototype.toNode...\n            var needsSpan = false;\n\n            var markup = \"<span\";\n\n            if (this.classes.length) {\n                needsSpan = true;\n                markup += \" class=\\\"\";\n                markup += _utils2.default.escape(createClass(this.classes));\n                markup += \"\\\"\";\n            }\n\n            var styles = \"\";\n\n            if (this.italic > 0) {\n                styles += \"margin-right:\" + this.italic + \"em;\";\n            }\n            for (var style in this.style) {\n                if (this.style.hasOwnProperty(style)) {\n                    styles += _utils2.default.hyphenate(style) + \":\" + this.style[style] + \";\";\n                }\n            }\n\n            if (styles) {\n                needsSpan = true;\n                markup += \" style=\\\"\" + _utils2.default.escape(styles) + \"\\\"\";\n            }\n\n            var escaped = _utils2.default.escape(this.value);\n            if (needsSpan) {\n                markup += \">\";\n                markup += escaped;\n                markup += \"</span>\";\n                return markup;\n            } else {\n                return escaped;\n            }\n        }\n    }]);\n    return symbolNode;\n}();\n\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\n\nvar svgNode = function () {\n    function svgNode(children, attributes) {\n        (0, _classCallCheck3.default)(this, svgNode);\n\n        this.children = children || [];\n        this.attributes = attributes || [];\n    }\n\n    (0, _createClass3.default)(svgNode, [{\n        key: \"toNode\",\n        value: function toNode() {\n            var svgNS = \"http://www.w3.org/2000/svg\";\n            var node = document.createElementNS(svgNS, \"svg\");\n\n            // Apply attributes\n            for (var i = 0; i < this.attributes.length; i++) {\n                var _attributes$i = (0, _slicedToArray3.default)(this.attributes[i], 2),\n                    name = _attributes$i[0],\n                    value = _attributes$i[1];\n\n                node.setAttribute(name, value);\n            }\n\n            for (var _i = 0; _i < this.children.length; _i++) {\n                node.appendChild(this.children[_i].toNode());\n            }\n            return node;\n        }\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            var markup = \"<svg\";\n\n            // Apply attributes\n            for (var i = 0; i < this.attributes.length; i++) {\n                var _attributes$i2 = (0, _slicedToArray3.default)(this.attributes[i], 2),\n                    name = _attributes$i2[0],\n                    value = _attributes$i2[1];\n\n                markup += \" \" + name + \"='\" + value + \"'\";\n            }\n\n            markup += \">\";\n\n            for (var _i2 = 0; _i2 < this.children.length; _i2++) {\n                markup += this.children[_i2].toMarkup();\n            }\n\n            markup += \"</svg>\";\n\n            return markup;\n        }\n    }]);\n    return svgNode;\n}();\n\nvar pathNode = function () {\n    function pathNode(pathName, alternate) {\n        (0, _classCallCheck3.default)(this, pathNode);\n\n        this.pathName = pathName;\n        this.alternate = alternate; // Used only for tall \\sqrt\n    }\n\n    (0, _createClass3.default)(pathNode, [{\n        key: \"toNode\",\n        value: function toNode() {\n            var svgNS = \"http://www.w3.org/2000/svg\";\n            var node = document.createElementNS(svgNS, \"path\");\n\n            if (this.pathName !== \"sqrtTall\") {\n                node.setAttribute(\"d\", _svgGeometry2.default.path[this.pathName]);\n            } else {\n                node.setAttribute(\"d\", this.alternate);\n            }\n\n            return node;\n        }\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            if (this.pathName !== \"sqrtTall\") {\n                return \"<path d='\" + _svgGeometry2.default.path[this.pathName] + \"'/>\";\n            } else {\n                return \"<path d='\" + this.alternate + \"'/>\";\n            }\n        }\n    }]);\n    return pathNode;\n}();\n\nvar lineNode = function () {\n    function lineNode(attributes) {\n        (0, _classCallCheck3.default)(this, lineNode);\n\n        this.attributes = attributes || [];\n    }\n\n    (0, _createClass3.default)(lineNode, [{\n        key: \"toNode\",\n        value: function toNode() {\n            var svgNS = \"http://www.w3.org/2000/svg\";\n            var node = document.createElementNS(svgNS, \"line\");\n\n            // Apply attributes\n            for (var i = 0; i < this.attributes.length; i++) {\n                var _attributes$i3 = (0, _slicedToArray3.default)(this.attributes[i], 2),\n                    name = _attributes$i3[0],\n                    value = _attributes$i3[1];\n\n                node.setAttribute(name, value);\n            }\n\n            return node;\n        }\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            var markup = \"<line\";\n\n            for (var i = 0; i < this.attributes.length; i++) {\n                var _attributes$i4 = (0, _slicedToArray3.default)(this.attributes[i], 2),\n                    name = _attributes$i4[0],\n                    value = _attributes$i4[1];\n\n                markup += \" \" + name + \"='\" + value + \"'\";\n            }\n\n            markup += \"/>\";\n\n            return markup;\n        }\n    }]);\n    return lineNode;\n}();\n\nexports.default = {\n    span: span,\n    documentFragment: documentFragment,\n    symbolNode: symbolNode,\n    svgNode: svgNode,\n    pathNode: pathNode,\n    lineNode: lineNode\n};\n\n},{\"./svgGeometry\":111,\"./unicodeRegexes\":113,\"./utils\":115,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9,\"babel-runtime/helpers/slicedToArray\":10}],99:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _defineEnvironment = require(\"./defineEnvironment\");\n\nrequire(\"./environments/array.js\");\n\nvar environments = {\n    has: function has(envName) {\n        return _defineEnvironment._environments.hasOwnProperty(envName);\n    },\n    get: function get(envName) {\n        return _defineEnvironment._environments[envName];\n    }\n};\nexports.default = environments;\n\n// All environment definitions should be imported below\n\n},{\"./defineEnvironment\":95,\"./environments/array.js\":100}],100:[function(require,module,exports){\n\"use strict\";\n\nvar _buildCommon = require(\"../buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _defineEnvironment = require(\"../defineEnvironment\");\n\nvar _defineEnvironment2 = _interopRequireDefault(_defineEnvironment);\n\nvar _mathMLTree = require(\"../mathMLTree\");\n\nvar _mathMLTree2 = _interopRequireDefault(_mathMLTree);\n\nvar _ParseError = require(\"../ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _ParseNode = require(\"../ParseNode\");\n\nvar _ParseNode2 = _interopRequireDefault(_ParseNode);\n\nvar _units = require(\"../units\");\n\nvar _utils = require(\"../utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _buildHTML = require(\"../buildHTML\");\n\nvar html = _interopRequireWildcard(_buildHTML);\n\nvar _buildMathML = require(\"../buildMathML\");\n\nvar mml = _interopRequireWildcard(_buildMathML);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\n// Data stored in the ParseNode associated with the environment.\nfunction parseArray(parser, result, style) {\n    var row = [];\n    var body = [row];\n    var rowGaps = [];\n    while (true) {\n        // eslint-disable-line no-constant-condition\n        var cell = parser.parseExpression(false, null);\n        cell = new _ParseNode2.default(\"ordgroup\", cell, parser.mode);\n        if (style) {\n            cell = new _ParseNode2.default(\"styling\", {\n                style: style,\n                value: [cell]\n            }, parser.mode);\n        }\n        row.push(cell);\n        var next = parser.nextToken.text;\n        if (next === \"&\") {\n            parser.consume();\n        } else if (next === \"\\\\end\") {\n            // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n            // the last line is empty.\n            var lastRow = body[body.length - 1][0].value;\n            if (body.length > 1 && lastRow.value.length === 1 && lastRow.value[0].value.length === 0) {\n                body.pop();\n            }\n            break;\n        } else if (next === \"\\\\\\\\\" || next === \"\\\\cr\") {\n            var cr = parser.parseFunction();\n            rowGaps.push(cr.value.size);\n            row = [];\n            body.push(row);\n        } else {\n            throw new _ParseError2.default(\"Expected & or \\\\\\\\ or \\\\end\", parser.nextToken);\n        }\n    }\n    result.body = body;\n    result.rowGaps = rowGaps;\n    return new _ParseNode2.default(result.type, result, parser.mode);\n}\n\n// Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\nfunction dCellStyle(envName) {\n    if (envName.substr(0, 1) === \"d\") {\n        return \"display\";\n    } else {\n        return \"text\";\n    }\n}\n\nvar htmlBuilder = function htmlBuilder(group, options) {\n    var r = void 0;\n    var c = void 0;\n    var nr = group.value.body.length;\n    var nc = 0;\n    var body = new Array(nr);\n\n    // Horizontal spacing\n    var pt = 1 / options.fontMetrics().ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\jot from ltmath.dtx\n    // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n    var jot = 3 * pt;\n    // Default \\arraystretch from lttab.dtx\n    // TODO(gagern): may get redefined once we have user-defined macros\n    var arraystretch = _utils2.default.deflt(group.value.arraystretch, 1);\n    var arrayskip = arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n    for (r = 0; r < group.value.body.length; ++r) {\n        var inrow = group.value.body[r];\n        var _height = arstrutHeight; // \\@array adds an \\@arstrut\n        var _depth = arstrutDepth; // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = html.buildGroup(inrow[c], options);\n            if (_depth < elt.depth) {\n                _depth = elt.depth;\n            }\n            if (_height < elt.height) {\n                _height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var gap = 0;\n        if (group.value.rowGaps[r]) {\n            gap = (0, _units.calculateSize)(group.value.rowGaps[r].value, options);\n            if (gap > 0) {\n                // \\@argarraycr\n                gap += arstrutDepth;\n                if (_depth < gap) {\n                    _depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n        // In AMS multiline environments such as aligned and gathered, rows\n        // correspond to lines that have additional \\jot added to the\n        // \\baselineskip via \\openup.\n        if (group.value.addJot) {\n            _depth += jot;\n        }\n\n        outrow.height = _height;\n        outrow.depth = _depth;\n        totalHeight += _height;\n        outrow.pos = totalHeight;\n        totalHeight += _depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n    }\n\n    var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n    var colDescriptions = group.value.cols || [];\n    var cols = [];\n    var colSep = void 0;\n    var colDescrNum = void 0;\n    for (c = 0, colDescrNum = 0;\n    // Continue while either there are more columns or more column\n    // descriptions, so trailing separators don't get lost.\n    c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = _buildCommon2.default.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var _separator = _buildCommon2.default.makeSpan([\"vertical-separator\"], []);\n                _separator.style.height = totalHeight + \"em\";\n                _separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n\n                cols.push(_separator);\n            } else {\n                throw new _ParseError2.default(\"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth = void 0;\n        if (c > 0 || group.value.hskipBeforeAndAfter) {\n            sepwidth = _utils2.default.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = _buildCommon2.default.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({ type: \"elem\", elem: elem, shift: shift });\n        }\n\n        col = _buildCommon2.default.makeVList(col, \"individualShift\", null, options);\n        col = _buildCommon2.default.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {\n            sepwidth = _utils2.default.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = _buildCommon2.default.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = _buildCommon2.default.makeSpan([\"mtable\"], cols);\n    return _buildCommon2.default.makeSpan([\"mord\"], [body], options);\n};\n\nvar mathmlBuilder = function mathmlBuilder(group, options) {\n    return new _mathMLTree2.default.MathNode(\"mtable\", group.value.body.map(function (row) {\n        return new _mathMLTree2.default.MathNode(\"mtr\", row.map(function (cell) {\n            return new _mathMLTree2.default.MathNode(\"mtd\", [mml.buildGroup(cell, options)]);\n        }));\n    }));\n};\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n(0, _defineEnvironment2.default)({\n    type: \"array\",\n    names: [\"array\", \"darray\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var colalign = args[0];\n        colalign = colalign.value.map ? colalign.value : [colalign];\n        var cols = colalign.map(function (node) {\n            var ca = node.value;\n            if (\"lcr\".indexOf(ca) !== -1) {\n                return {\n                    type: \"align\",\n                    align: ca\n                };\n            } else if (ca === \"|\") {\n                return {\n                    type: \"separator\",\n                    separator: \"|\"\n                };\n            }\n            throw new _ParseError2.default(\"Unknown column alignment: \" + node.value, node);\n        });\n        var res = {\n            type: \"array\",\n            cols: cols,\n            hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n        };\n        res = parseArray(context.parser, res, dCellStyle(context.envName));\n        return res;\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n});\n\n// The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n(0, _defineEnvironment2.default)({\n    type: \"array\",\n    names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var delimiters = {\n            \"matrix\": null,\n            \"pmatrix\": [\"(\", \")\"],\n            \"bmatrix\": [\"[\", \"]\"],\n            \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n            \"vmatrix\": [\"|\", \"|\"],\n            \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n        }[context.envName];\n        var res = {\n            type: \"array\",\n            hskipBeforeAndAfter: false // \\hskip -\\arraycolsep in amsmath\n        };\n        res = parseArray(context.parser, res, dCellStyle(context.envName));\n        if (delimiters) {\n            res = new _ParseNode2.default(\"leftright\", {\n                body: [res],\n                left: delimiters[0],\n                right: delimiters[1]\n            }, context.mode);\n        }\n        return res;\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n(0, _defineEnvironment2.default)({\n    type: \"array\",\n    names: [\"cases\", \"dcases\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var res = {\n            type: \"array\",\n            arraystretch: 1.2,\n            cols: [{\n                type: \"align\",\n                align: \"l\",\n                pregap: 0,\n                // TODO(kevinb) get the current style.\n                // For now we use the metrics for TEXT style which is what we were\n                // doing before.  Before attempting to get the current style we\n                // should look at TeX's behavior especially for \\over and matrices.\n                postgap: 1.0 /* 1em quad */\n            }, {\n                type: \"align\",\n                align: \"l\",\n                pregap: 0,\n                postgap: 0\n            }]\n        };\n        res = parseArray(context.parser, res, dCellStyle(context.envName));\n        res = new _ParseNode2.default(\"leftright\", {\n            body: [res],\n            left: \"\\\\{\",\n            right: \".\"\n        }, context.mode);\n        return res;\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n});\n\n// An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n(0, _defineEnvironment2.default)({\n    type: \"array\",\n    names: [\"aligned\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var res = {\n            type: \"array\",\n            cols: [],\n            addJot: true\n        };\n        res = parseArray(context.parser, res, \"display\");\n        // Count number of columns = maximum number of cells in each row.\n        // At the same time, prepend empty group {} at beginning of every second\n        // cell in each row (starting with second cell) so that operators become\n        // binary.  This behavior is implemented in amsmath's \\start@aligned.\n        var emptyGroup = new _ParseNode2.default(\"ordgroup\", [], context.mode);\n        var numCols = 0;\n        res.value.body.forEach(function (row) {\n            for (var i = 1; i < row.length; i += 2) {\n                // Modify ordgroup node within styling node\n                var ordgroup = row[i].value.value[0];\n                ordgroup.value.unshift(emptyGroup);\n            }\n            if (numCols < row.length) {\n                numCols = row.length;\n            }\n        });\n        for (var i = 0; i < numCols; ++i) {\n            var _align = \"r\";\n            var _pregap = 0;\n            if (i % 2 === 1) {\n                _align = \"l\";\n            } else if (i > 0) {\n                _pregap = 2; // one \\qquad between columns\n            }\n            res.value.cols[i] = {\n                type: \"align\",\n                align: _align,\n                pregap: _pregap,\n                postgap: 0\n            };\n        }\n        return res;\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n});\n\n// A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n(0, _defineEnvironment2.default)({\n    type: \"array\",\n    names: [\"gathered\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var res = {\n            type: \"array\",\n            cols: [{\n                type: \"align\",\n                align: \"c\"\n            }],\n            addJot: true\n        };\n        res = parseArray(context.parser, res, \"display\");\n        return res;\n    },\n    htmlBuilder: htmlBuilder,\n    mathmlBuilder: mathmlBuilder\n});\n\n},{\"../ParseError\":84,\"../ParseNode\":85,\"../buildCommon\":91,\"../buildHTML\":92,\"../buildMathML\":93,\"../defineEnvironment\":95,\"../mathMLTree\":108,\"../units\":114,\"../utils\":115}],101:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _unicodeRegexes = require(\"./unicodeRegexes\");\n\nvar _fontMetricsData = require(\"./fontMetricsData\");\n\nvar _fontMetricsData2 = _interopRequireDefault(_fontMetricsData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n    slant: [0.250, 0.250, 0.250], // sigma1\n    space: [0.000, 0.000, 0.000], // sigma2\n    stretch: [0.000, 0.000, 0.000], // sigma3\n    shrink: [0.000, 0.000, 0.000], // sigma4\n    xHeight: [0.431, 0.431, 0.431], // sigma5\n    quad: [1.000, 1.171, 1.472], // sigma6\n    extraSpace: [0.000, 0.000, 0.000], // sigma7\n    num1: [0.677, 0.732, 0.925], // sigma8\n    num2: [0.394, 0.384, 0.387], // sigma9\n    num3: [0.444, 0.471, 0.504], // sigma10\n    denom1: [0.686, 0.752, 1.025], // sigma11\n    denom2: [0.345, 0.344, 0.532], // sigma12\n    sup1: [0.413, 0.503, 0.504], // sigma13\n    sup2: [0.363, 0.431, 0.404], // sigma14\n    sup3: [0.289, 0.286, 0.294], // sigma15\n    sub1: [0.150, 0.143, 0.200], // sigma16\n    sub2: [0.247, 0.286, 0.400], // sigma17\n    supDrop: [0.386, 0.353, 0.494], // sigma18\n    subDrop: [0.050, 0.071, 0.100], // sigma19\n    delim1: [2.390, 1.700, 1.980], // sigma20\n    delim2: [1.010, 1.157, 1.420], // sigma21\n    axisHeight: [0.250, 0.250, 0.250], // sigma22\n\n    // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n    // they correspond to the font parameters of the extension fonts (family 3).\n    // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n    // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n    // values.\n    defaultRuleThickness: [0.04, 0.049, 0.049], // xi8; cmex7: 0.049\n    bigOpSpacing1: [0.111, 0.111, 0.111], // xi9\n    bigOpSpacing2: [0.166, 0.166, 0.166], // xi10\n    bigOpSpacing3: [0.2, 0.2, 0.2], // xi11\n    bigOpSpacing4: [0.6, 0.611, 0.611], // xi12; cmex7: 0.611\n    bigOpSpacing5: [0.1, 0.143, 0.143], // xi13; cmex7: 0.143\n\n    // The \\sqrt rule width is taken from the height of the surd character.\n    // Since we use the same font at all sizes, this thickness doesn't scale.\n    sqrtRuleThickness: [0.04, 0.04, 0.04],\n\n    // This value determines how large a pt is, for metrics which are defined\n    // in terms of pts.\n    // This value is also used in katex.less; if you change it make sure the\n    // values match.\n    ptPerEm: [10.0, 10.0, 10.0],\n\n    // The space between adjacent `|` columns in an array definition. From\n    // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n    doubleRuleSep: [0.2, 0.2, 0.2]\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n\n// These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\nvar extraCharacterMap = {\n    // Latin-1\n    'À': 'A',\n    'Á': 'A',\n    'Â': 'A',\n    'Ã': 'A',\n    'Ä': 'A',\n    'Å': 'A',\n    'Æ': 'A',\n    'Ç': 'C',\n    'È': 'E',\n    'É': 'E',\n    'Ê': 'E',\n    'Ë': 'E',\n    'Ì': 'I',\n    'Í': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ð': 'D',\n    'Ñ': 'N',\n    'Ò': 'O',\n    'Ó': 'O',\n    'Ô': 'O',\n    'Õ': 'O',\n    'Ö': 'O',\n    'Ø': 'O',\n    'Ù': 'U',\n    'Ú': 'U',\n    'Û': 'U',\n    'Ü': 'U',\n    'Ý': 'Y',\n    'Þ': 'o',\n    'ß': 'B',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'ã': 'a',\n    'ä': 'a',\n    'å': 'a',\n    'æ': 'a',\n    'ç': 'c',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ì': 'i',\n    'í': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ð': 'd',\n    'ñ': 'n',\n    'ò': 'o',\n    'ó': 'o',\n    'ô': 'o',\n    'õ': 'o',\n    'ö': 'o',\n    'ø': 'o',\n    'ù': 'u',\n    'ú': 'u',\n    'û': 'u',\n    'ü': 'u',\n    'ý': 'y',\n    'þ': 'o',\n    'ÿ': 'y',\n\n    // Cyrillic\n    'А': 'A',\n    'Б': 'B',\n    'В': 'B',\n    'Г': 'F',\n    'Д': 'A',\n    'Е': 'E',\n    'Ж': 'K',\n    'З': '3',\n    'И': 'N',\n    'Й': 'N',\n    'К': 'K',\n    'Л': 'N',\n    'М': 'M',\n    'Н': 'H',\n    'О': 'O',\n    'П': 'N',\n    'Р': 'P',\n    'С': 'C',\n    'Т': 'T',\n    'У': 'y',\n    'Ф': 'O',\n    'Х': 'X',\n    'Ц': 'U',\n    'Ч': 'h',\n    'Ш': 'W',\n    'Щ': 'W',\n    'Ъ': 'B',\n    'Ы': 'X',\n    'Ь': 'B',\n    'Э': '3',\n    'Ю': 'X',\n    'Я': 'R',\n    'а': 'a',\n    'б': 'b',\n    'в': 'a',\n    'г': 'r',\n    'д': 'y',\n    'е': 'e',\n    'ж': 'm',\n    'з': 'e',\n    'и': 'n',\n    'й': 'n',\n    'к': 'n',\n    'л': 'n',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'n',\n    'р': 'p',\n    'с': 'c',\n    'т': 'o',\n    'у': 'y',\n    'ф': 'b',\n    'х': 'x',\n    'ц': 'n',\n    'ч': 'n',\n    'ш': 'w',\n    'щ': 'w',\n    'ъ': 'a',\n    'ы': 'm',\n    'ь': 'a',\n    'э': 'e',\n    'ю': 'm',\n    'я': 'r'\n};\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function getCharacterMetrics(character, font) {\n    var ch = character.charCodeAt(0);\n    if (character[0] in extraCharacterMap) {\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\n    } else if (_unicodeRegexes.cjkRegex.test(character[0])) {\n        ch = 'M'.charCodeAt(0);\n    }\n    var metrics = _fontMetricsData2.default[font]['' + ch];\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4]\n        };\n    }\n};\n\nvar fontMetricsBySizeIndex = {};\n\n/**\n * Get the font metrics for a given size.\n */\nvar getFontMetrics = function getFontMetrics(size) {\n    var sizeIndex = void 0;\n    if (size >= 5) {\n        sizeIndex = 0;\n    } else if (size >= 3) {\n        sizeIndex = 1;\n    } else {\n        sizeIndex = 2;\n    }\n    if (!fontMetricsBySizeIndex[sizeIndex]) {\n        var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n            cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n        };\n        for (var key in sigmasAndXis) {\n            if (sigmasAndXis.hasOwnProperty(key)) {\n                metrics[key] = sigmasAndXis[key][sizeIndex];\n            }\n        }\n    }\n    return fontMetricsBySizeIndex[sizeIndex];\n};\n\nexports.default = {\n    getFontMetrics: getFontMetrics,\n    getCharacterMetrics: getCharacterMetrics\n};\n\n},{\"./fontMetricsData\":102,\"./unicodeRegexes\":113}],102:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar fontMetricsData = {\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0],\n        \"66\": [0, 0.68889, 0, 0],\n        \"67\": [0, 0.68889, 0, 0],\n        \"68\": [0, 0.68889, 0, 0],\n        \"69\": [0, 0.68889, 0, 0],\n        \"70\": [0, 0.68889, 0, 0],\n        \"71\": [0, 0.68889, 0, 0],\n        \"72\": [0, 0.68889, 0, 0],\n        \"73\": [0, 0.68889, 0, 0],\n        \"74\": [0.16667, 0.68889, 0, 0],\n        \"75\": [0, 0.68889, 0, 0],\n        \"76\": [0, 0.68889, 0, 0],\n        \"77\": [0, 0.68889, 0, 0],\n        \"78\": [0, 0.68889, 0, 0],\n        \"79\": [0.16667, 0.68889, 0, 0],\n        \"80\": [0, 0.68889, 0, 0],\n        \"81\": [0.16667, 0.68889, 0, 0],\n        \"82\": [0, 0.68889, 0, 0],\n        \"83\": [0, 0.68889, 0, 0],\n        \"84\": [0, 0.68889, 0, 0],\n        \"85\": [0, 0.68889, 0, 0],\n        \"86\": [0, 0.68889, 0, 0],\n        \"87\": [0, 0.68889, 0, 0],\n        \"88\": [0, 0.68889, 0, 0],\n        \"89\": [0, 0.68889, 0, 0],\n        \"90\": [0, 0.68889, 0, 0],\n        \"107\": [0, 0.68889, 0, 0],\n        \"165\": [0, 0.675, 0.025, 0],\n        \"174\": [0.15559, 0.69224, 0, 0],\n        \"240\": [0, 0.68889, 0, 0],\n        \"295\": [0, 0.68889, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.9, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.9, 0, 0],\n        \"989\": [0.08167, 0.58167, 0, 0],\n        \"1008\": [0, 0.43056, 0.04028, 0],\n        \"8245\": [0, 0.54986, 0, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8487\": [0, 0.68889, 0, 0],\n        \"8498\": [0, 0.68889, 0, 0],\n        \"8502\": [0, 0.68889, 0, 0],\n        \"8503\": [0, 0.68889, 0, 0],\n        \"8504\": [0, 0.68889, 0, 0],\n        \"8513\": [0, 0.68889, 0, 0],\n        \"8592\": [-0.03598, 0.46402, 0, 0],\n        \"8594\": [-0.03598, 0.46402, 0, 0],\n        \"8602\": [-0.13313, 0.36687, 0, 0],\n        \"8603\": [-0.13313, 0.36687, 0, 0],\n        \"8606\": [0.01354, 0.52239, 0, 0],\n        \"8608\": [0.01354, 0.52239, 0, 0],\n        \"8610\": [0.01354, 0.52239, 0, 0],\n        \"8611\": [0.01354, 0.52239, 0, 0],\n        \"8619\": [0, 0.54986, 0, 0],\n        \"8620\": [0, 0.54986, 0, 0],\n        \"8621\": [-0.13313, 0.37788, 0, 0],\n        \"8622\": [-0.13313, 0.36687, 0, 0],\n        \"8624\": [0, 0.69224, 0, 0],\n        \"8625\": [0, 0.69224, 0, 0],\n        \"8630\": [0, 0.43056, 0, 0],\n        \"8631\": [0, 0.43056, 0, 0],\n        \"8634\": [0.08198, 0.58198, 0, 0],\n        \"8635\": [0.08198, 0.58198, 0, 0],\n        \"8638\": [0.19444, 0.69224, 0, 0],\n        \"8639\": [0.19444, 0.69224, 0, 0],\n        \"8642\": [0.19444, 0.69224, 0, 0],\n        \"8643\": [0.19444, 0.69224, 0, 0],\n        \"8644\": [0.1808, 0.675, 0, 0],\n        \"8646\": [0.1808, 0.675, 0, 0],\n        \"8647\": [0.1808, 0.675, 0, 0],\n        \"8648\": [0.19444, 0.69224, 0, 0],\n        \"8649\": [0.1808, 0.675, 0, 0],\n        \"8650\": [0.19444, 0.69224, 0, 0],\n        \"8651\": [0.01354, 0.52239, 0, 0],\n        \"8652\": [0.01354, 0.52239, 0, 0],\n        \"8653\": [-0.13313, 0.36687, 0, 0],\n        \"8654\": [-0.13313, 0.36687, 0, 0],\n        \"8655\": [-0.13313, 0.36687, 0, 0],\n        \"8666\": [0.13667, 0.63667, 0, 0],\n        \"8667\": [0.13667, 0.63667, 0, 0],\n        \"8669\": [-0.13313, 0.37788, 0, 0],\n        \"8672\": [-0.064, 0.437, 0, 0],\n        \"8674\": [-0.064, 0.437, 0, 0],\n        \"8705\": [0, 0.825, 0, 0],\n        \"8708\": [0, 0.68889, 0, 0],\n        \"8709\": [0.08167, 0.58167, 0, 0],\n        \"8717\": [0, 0.43056, 0, 0],\n        \"8722\": [-0.03598, 0.46402, 0, 0],\n        \"8724\": [0.08198, 0.69224, 0, 0],\n        \"8726\": [0.08167, 0.58167, 0, 0],\n        \"8733\": [0, 0.69224, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8737\": [0, 0.69224, 0, 0],\n        \"8738\": [0.03517, 0.52239, 0, 0],\n        \"8739\": [0.08167, 0.58167, 0, 0],\n        \"8740\": [0.25142, 0.74111, 0, 0],\n        \"8741\": [0.08167, 0.58167, 0, 0],\n        \"8742\": [0.25142, 0.74111, 0, 0],\n        \"8756\": [0, 0.69224, 0, 0],\n        \"8757\": [0, 0.69224, 0, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8765\": [-0.13313, 0.37788, 0, 0],\n        \"8769\": [-0.13313, 0.36687, 0, 0],\n        \"8770\": [-0.03625, 0.46375, 0, 0],\n        \"8774\": [0.30274, 0.79383, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8778\": [0.08167, 0.58167, 0, 0],\n        \"8782\": [0.06062, 0.54986, 0, 0],\n        \"8783\": [0.06062, 0.54986, 0, 0],\n        \"8785\": [0.08198, 0.58198, 0, 0],\n        \"8786\": [0.08198, 0.58198, 0, 0],\n        \"8787\": [0.08198, 0.58198, 0, 0],\n        \"8790\": [0, 0.69224, 0, 0],\n        \"8791\": [0.22958, 0.72958, 0, 0],\n        \"8796\": [0.08198, 0.91667, 0, 0],\n        \"8806\": [0.25583, 0.75583, 0, 0],\n        \"8807\": [0.25583, 0.75583, 0, 0],\n        \"8808\": [0.25142, 0.75726, 0, 0],\n        \"8809\": [0.25142, 0.75726, 0, 0],\n        \"8812\": [0.25583, 0.75583, 0, 0],\n        \"8814\": [0.20576, 0.70576, 0, 0],\n        \"8815\": [0.20576, 0.70576, 0, 0],\n        \"8816\": [0.30274, 0.79383, 0, 0],\n        \"8817\": [0.30274, 0.79383, 0, 0],\n        \"8818\": [0.22958, 0.72958, 0, 0],\n        \"8819\": [0.22958, 0.72958, 0, 0],\n        \"8822\": [0.1808, 0.675, 0, 0],\n        \"8823\": [0.1808, 0.675, 0, 0],\n        \"8828\": [0.13667, 0.63667, 0, 0],\n        \"8829\": [0.13667, 0.63667, 0, 0],\n        \"8830\": [0.22958, 0.72958, 0, 0],\n        \"8831\": [0.22958, 0.72958, 0, 0],\n        \"8832\": [0.20576, 0.70576, 0, 0],\n        \"8833\": [0.20576, 0.70576, 0, 0],\n        \"8840\": [0.30274, 0.79383, 0, 0],\n        \"8841\": [0.30274, 0.79383, 0, 0],\n        \"8842\": [0.13597, 0.63597, 0, 0],\n        \"8843\": [0.13597, 0.63597, 0, 0],\n        \"8847\": [0.03517, 0.54986, 0, 0],\n        \"8848\": [0.03517, 0.54986, 0, 0],\n        \"8858\": [0.08198, 0.58198, 0, 0],\n        \"8859\": [0.08198, 0.58198, 0, 0],\n        \"8861\": [0.08198, 0.58198, 0, 0],\n        \"8862\": [0, 0.675, 0, 0],\n        \"8863\": [0, 0.675, 0, 0],\n        \"8864\": [0, 0.675, 0, 0],\n        \"8865\": [0, 0.675, 0, 0],\n        \"8872\": [0, 0.69224, 0, 0],\n        \"8873\": [0, 0.69224, 0, 0],\n        \"8874\": [0, 0.69224, 0, 0],\n        \"8876\": [0, 0.68889, 0, 0],\n        \"8877\": [0, 0.68889, 0, 0],\n        \"8878\": [0, 0.68889, 0, 0],\n        \"8879\": [0, 0.68889, 0, 0],\n        \"8882\": [0.03517, 0.54986, 0, 0],\n        \"8883\": [0.03517, 0.54986, 0, 0],\n        \"8884\": [0.13667, 0.63667, 0, 0],\n        \"8885\": [0.13667, 0.63667, 0, 0],\n        \"8888\": [0, 0.54986, 0, 0],\n        \"8890\": [0.19444, 0.43056, 0, 0],\n        \"8891\": [0.19444, 0.69224, 0, 0],\n        \"8892\": [0.19444, 0.69224, 0, 0],\n        \"8901\": [0, 0.54986, 0, 0],\n        \"8903\": [0.08167, 0.58167, 0, 0],\n        \"8905\": [0.08167, 0.58167, 0, 0],\n        \"8906\": [0.08167, 0.58167, 0, 0],\n        \"8907\": [0, 0.69224, 0, 0],\n        \"8908\": [0, 0.69224, 0, 0],\n        \"8909\": [-0.03598, 0.46402, 0, 0],\n        \"8910\": [0, 0.54986, 0, 0],\n        \"8911\": [0, 0.54986, 0, 0],\n        \"8912\": [0.03517, 0.54986, 0, 0],\n        \"8913\": [0.03517, 0.54986, 0, 0],\n        \"8914\": [0, 0.54986, 0, 0],\n        \"8915\": [0, 0.54986, 0, 0],\n        \"8916\": [0, 0.69224, 0, 0],\n        \"8918\": [0.0391, 0.5391, 0, 0],\n        \"8919\": [0.0391, 0.5391, 0, 0],\n        \"8920\": [0.03517, 0.54986, 0, 0],\n        \"8921\": [0.03517, 0.54986, 0, 0],\n        \"8922\": [0.38569, 0.88569, 0, 0],\n        \"8923\": [0.38569, 0.88569, 0, 0],\n        \"8926\": [0.13667, 0.63667, 0, 0],\n        \"8927\": [0.13667, 0.63667, 0, 0],\n        \"8928\": [0.30274, 0.79383, 0, 0],\n        \"8929\": [0.30274, 0.79383, 0, 0],\n        \"8934\": [0.23222, 0.74111, 0, 0],\n        \"8935\": [0.23222, 0.74111, 0, 0],\n        \"8936\": [0.23222, 0.74111, 0, 0],\n        \"8937\": [0.23222, 0.74111, 0, 0],\n        \"8938\": [0.20576, 0.70576, 0, 0],\n        \"8939\": [0.20576, 0.70576, 0, 0],\n        \"8940\": [0.30274, 0.79383, 0, 0],\n        \"8941\": [0.30274, 0.79383, 0, 0],\n        \"8994\": [0.19444, 0.69224, 0, 0],\n        \"8995\": [0.19444, 0.69224, 0, 0],\n        \"9416\": [0.15559, 0.69224, 0, 0],\n        \"9484\": [0, 0.69224, 0, 0],\n        \"9488\": [0, 0.69224, 0, 0],\n        \"9492\": [0, 0.37788, 0, 0],\n        \"9496\": [0, 0.37788, 0, 0],\n        \"9585\": [0.19444, 0.68889, 0, 0],\n        \"9586\": [0.19444, 0.74111, 0, 0],\n        \"9632\": [0, 0.675, 0, 0],\n        \"9633\": [0, 0.675, 0, 0],\n        \"9650\": [0, 0.54986, 0, 0],\n        \"9651\": [0, 0.54986, 0, 0],\n        \"9654\": [0.03517, 0.54986, 0, 0],\n        \"9660\": [0, 0.54986, 0, 0],\n        \"9661\": [0, 0.54986, 0, 0],\n        \"9664\": [0.03517, 0.54986, 0, 0],\n        \"9674\": [0.11111, 0.69224, 0, 0],\n        \"9733\": [0.19444, 0.69224, 0, 0],\n        \"10003\": [0, 0.69224, 0, 0],\n        \"10016\": [0, 0.69224, 0, 0],\n        \"10731\": [0.11111, 0.69224, 0, 0],\n        \"10846\": [0.19444, 0.75583, 0, 0],\n        \"10877\": [0.13667, 0.63667, 0, 0],\n        \"10878\": [0.13667, 0.63667, 0, 0],\n        \"10885\": [0.25583, 0.75583, 0, 0],\n        \"10886\": [0.25583, 0.75583, 0, 0],\n        \"10887\": [0.13597, 0.63597, 0, 0],\n        \"10888\": [0.13597, 0.63597, 0, 0],\n        \"10889\": [0.26167, 0.75726, 0, 0],\n        \"10890\": [0.26167, 0.75726, 0, 0],\n        \"10891\": [0.48256, 0.98256, 0, 0],\n        \"10892\": [0.48256, 0.98256, 0, 0],\n        \"10901\": [0.13667, 0.63667, 0, 0],\n        \"10902\": [0.13667, 0.63667, 0, 0],\n        \"10933\": [0.25142, 0.75726, 0, 0],\n        \"10934\": [0.25142, 0.75726, 0, 0],\n        \"10935\": [0.26167, 0.75726, 0, 0],\n        \"10936\": [0.26167, 0.75726, 0, 0],\n        \"10937\": [0.26167, 0.75726, 0, 0],\n        \"10938\": [0.26167, 0.75726, 0, 0],\n        \"10949\": [0.25583, 0.75583, 0, 0],\n        \"10950\": [0.25583, 0.75583, 0, 0],\n        \"10955\": [0.28481, 0.79383, 0, 0],\n        \"10956\": [0.28481, 0.79383, 0, 0],\n        \"57350\": [0.08167, 0.58167, 0, 0],\n        \"57351\": [0.08167, 0.58167, 0, 0],\n        \"57352\": [0.08167, 0.58167, 0, 0],\n        \"57353\": [0, 0.43056, 0.04028, 0],\n        \"57356\": [0.25142, 0.75726, 0, 0],\n        \"57357\": [0.25142, 0.75726, 0, 0],\n        \"57358\": [0.41951, 0.91951, 0, 0],\n        \"57359\": [0.30274, 0.79383, 0, 0],\n        \"57360\": [0.30274, 0.79383, 0, 0],\n        \"57361\": [0.41951, 0.91951, 0, 0],\n        \"57366\": [0.25142, 0.75726, 0, 0],\n        \"57367\": [0.25142, 0.75726, 0, 0],\n        \"57368\": [0.25142, 0.75726, 0, 0],\n        \"57369\": [0.25142, 0.75726, 0, 0],\n        \"57370\": [0.13597, 0.63597, 0, 0],\n        \"57371\": [0.13597, 0.63597, 0, 0]\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0],\n        \"49\": [0, 0.43056, 0, 0],\n        \"50\": [0, 0.43056, 0, 0],\n        \"51\": [0.19444, 0.43056, 0, 0],\n        \"52\": [0.19444, 0.43056, 0, 0],\n        \"53\": [0.19444, 0.43056, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0.19444, 0.43056, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0.19444, 0.43056, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.19445],\n        \"66\": [0, 0.68333, 0.03041, 0.13889],\n        \"67\": [0, 0.68333, 0.05834, 0.13889],\n        \"68\": [0, 0.68333, 0.02778, 0.08334],\n        \"69\": [0, 0.68333, 0.08944, 0.11111],\n        \"70\": [0, 0.68333, 0.09931, 0.11111],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111],\n        \"72\": [0, 0.68333, 0.00965, 0.11111],\n        \"73\": [0, 0.68333, 0.07382, 0],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667],\n        \"75\": [0, 0.68333, 0.01445, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.13889],\n        \"77\": [0, 0.68333, 0, 0.13889],\n        \"78\": [0, 0.68333, 0.14736, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.11111],\n        \"80\": [0, 0.68333, 0.08222, 0.08334],\n        \"81\": [0.09722, 0.68333, 0, 0.11111],\n        \"82\": [0, 0.68333, 0, 0.08334],\n        \"83\": [0, 0.68333, 0.075, 0.13889],\n        \"84\": [0, 0.68333, 0.25417, 0],\n        \"85\": [0, 0.68333, 0.09931, 0.08334],\n        \"86\": [0, 0.68333, 0.08222, 0],\n        \"87\": [0, 0.68333, 0.08222, 0.08334],\n        \"88\": [0, 0.68333, 0.14643, 0.13889],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334],\n        \"90\": [0, 0.68333, 0.07944, 0.13889]\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0],\n        \"34\": [0, 0.69141, 0, 0],\n        \"38\": [0, 0.69141, 0, 0],\n        \"39\": [0, 0.69141, 0, 0],\n        \"40\": [0.24982, 0.74947, 0, 0],\n        \"41\": [0.24982, 0.74947, 0, 0],\n        \"42\": [0, 0.62119, 0, 0],\n        \"43\": [0.08319, 0.58283, 0, 0],\n        \"44\": [0, 0.10803, 0, 0],\n        \"45\": [0.08319, 0.58283, 0, 0],\n        \"46\": [0, 0.10803, 0, 0],\n        \"47\": [0.24982, 0.74947, 0, 0],\n        \"48\": [0, 0.47534, 0, 0],\n        \"49\": [0, 0.47534, 0, 0],\n        \"50\": [0, 0.47534, 0, 0],\n        \"51\": [0.18906, 0.47534, 0, 0],\n        \"52\": [0.18906, 0.47534, 0, 0],\n        \"53\": [0.18906, 0.47534, 0, 0],\n        \"54\": [0, 0.69141, 0, 0],\n        \"55\": [0.18906, 0.47534, 0, 0],\n        \"56\": [0, 0.69141, 0, 0],\n        \"57\": [0.18906, 0.47534, 0, 0],\n        \"58\": [0, 0.47534, 0, 0],\n        \"59\": [0.12604, 0.47534, 0, 0],\n        \"61\": [-0.13099, 0.36866, 0, 0],\n        \"63\": [0, 0.69141, 0, 0],\n        \"65\": [0, 0.69141, 0, 0],\n        \"66\": [0, 0.69141, 0, 0],\n        \"67\": [0, 0.69141, 0, 0],\n        \"68\": [0, 0.69141, 0, 0],\n        \"69\": [0, 0.69141, 0, 0],\n        \"70\": [0.12604, 0.69141, 0, 0],\n        \"71\": [0, 0.69141, 0, 0],\n        \"72\": [0.06302, 0.69141, 0, 0],\n        \"73\": [0, 0.69141, 0, 0],\n        \"74\": [0.12604, 0.69141, 0, 0],\n        \"75\": [0, 0.69141, 0, 0],\n        \"76\": [0, 0.69141, 0, 0],\n        \"77\": [0, 0.69141, 0, 0],\n        \"78\": [0, 0.69141, 0, 0],\n        \"79\": [0, 0.69141, 0, 0],\n        \"80\": [0.18906, 0.69141, 0, 0],\n        \"81\": [0.03781, 0.69141, 0, 0],\n        \"82\": [0, 0.69141, 0, 0],\n        \"83\": [0, 0.69141, 0, 0],\n        \"84\": [0, 0.69141, 0, 0],\n        \"85\": [0, 0.69141, 0, 0],\n        \"86\": [0, 0.69141, 0, 0],\n        \"87\": [0, 0.69141, 0, 0],\n        \"88\": [0, 0.69141, 0, 0],\n        \"89\": [0.18906, 0.69141, 0, 0],\n        \"90\": [0.12604, 0.69141, 0, 0],\n        \"91\": [0.24982, 0.74947, 0, 0],\n        \"93\": [0.24982, 0.74947, 0, 0],\n        \"94\": [0, 0.69141, 0, 0],\n        \"97\": [0, 0.47534, 0, 0],\n        \"98\": [0, 0.69141, 0, 0],\n        \"99\": [0, 0.47534, 0, 0],\n        \"100\": [0, 0.62119, 0, 0],\n        \"101\": [0, 0.47534, 0, 0],\n        \"102\": [0.18906, 0.69141, 0, 0],\n        \"103\": [0.18906, 0.47534, 0, 0],\n        \"104\": [0.18906, 0.69141, 0, 0],\n        \"105\": [0, 0.69141, 0, 0],\n        \"106\": [0, 0.69141, 0, 0],\n        \"107\": [0, 0.69141, 0, 0],\n        \"108\": [0, 0.69141, 0, 0],\n        \"109\": [0, 0.47534, 0, 0],\n        \"110\": [0, 0.47534, 0, 0],\n        \"111\": [0, 0.47534, 0, 0],\n        \"112\": [0.18906, 0.52396, 0, 0],\n        \"113\": [0.18906, 0.47534, 0, 0],\n        \"114\": [0, 0.47534, 0, 0],\n        \"115\": [0, 0.47534, 0, 0],\n        \"116\": [0, 0.62119, 0, 0],\n        \"117\": [0, 0.47534, 0, 0],\n        \"118\": [0, 0.52396, 0, 0],\n        \"119\": [0, 0.52396, 0, 0],\n        \"120\": [0.18906, 0.47534, 0, 0],\n        \"121\": [0.18906, 0.47534, 0, 0],\n        \"122\": [0.18906, 0.47534, 0, 0],\n        \"8216\": [0, 0.69141, 0, 0],\n        \"8217\": [0, 0.69141, 0, 0],\n        \"58112\": [0, 0.62119, 0, 0],\n        \"58113\": [0, 0.62119, 0, 0],\n        \"58114\": [0.18906, 0.69141, 0, 0],\n        \"58115\": [0.18906, 0.69141, 0, 0],\n        \"58116\": [0.18906, 0.47534, 0, 0],\n        \"58117\": [0, 0.69141, 0, 0],\n        \"58118\": [0, 0.62119, 0, 0],\n        \"58119\": [0, 0.47534, 0, 0]\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.13333, 0.63333, 0, 0],\n        \"44\": [0.19444, 0.15556, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.15556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.19444, 0.44444, 0, 0],\n        \"60\": [0.08556, 0.58556, 0, 0],\n        \"61\": [-0.10889, 0.39111, 0, 0],\n        \"62\": [0.08556, 0.58556, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0, 0],\n        \"67\": [0, 0.68611, 0, 0],\n        \"68\": [0, 0.68611, 0, 0],\n        \"69\": [0, 0.68611, 0, 0],\n        \"70\": [0, 0.68611, 0, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0, 0],\n        \"73\": [0, 0.68611, 0, 0],\n        \"74\": [0, 0.68611, 0, 0],\n        \"75\": [0, 0.68611, 0, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0, 0],\n        \"78\": [0, 0.68611, 0, 0],\n        \"79\": [0, 0.68611, 0, 0],\n        \"80\": [0, 0.68611, 0, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0, 0],\n        \"83\": [0, 0.68611, 0, 0],\n        \"84\": [0, 0.68611, 0, 0],\n        \"85\": [0, 0.68611, 0, 0],\n        \"86\": [0, 0.68611, 0.01597, 0],\n        \"87\": [0, 0.68611, 0.01597, 0],\n        \"88\": [0, 0.68611, 0, 0],\n        \"89\": [0, 0.68611, 0.02875, 0],\n        \"90\": [0, 0.68611, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.13444, 0.03194, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.10903, 0],\n        \"103\": [0.19444, 0.44444, 0.01597, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69444, 0, 0],\n        \"106\": [0.19444, 0.69444, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01597, 0],\n        \"119\": [0, 0.44444, 0.01597, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01597, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.34444, 0, 0],\n        \"168\": [0, 0.69444, 0, 0],\n        \"172\": [0, 0.44444, 0, 0],\n        \"175\": [0, 0.59611, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.13333, 0.63333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.13333, 0.63333, 0, 0],\n        \"247\": [0.13333, 0.63333, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.63194, 0, 0],\n        \"713\": [0, 0.59611, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.69444, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.69444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.69444, 0, 0],\n        \"772\": [0, 0.59611, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.69444, 0, 0],\n        \"776\": [0, 0.69444, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68611, 0, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0, 0],\n        \"928\": [0, 0.68611, 0, 0],\n        \"931\": [0, 0.68611, 0, 0],\n        \"933\": [0, 0.68611, 0, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0, 0],\n        \"937\": [0, 0.68611, 0, 0],\n        \"8211\": [0, 0.44444, 0.03194, 0],\n        \"8212\": [0, 0.44444, 0.03194, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.72444, 0.15486, 0],\n        \"8463\": [0, 0.69444, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0],\n        \"8472\": [0.19444, 0.44444, 0, 0],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.10889, 0.39111, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.10889, 0.39111, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.10889, 0.39111, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8636\": [-0.10889, 0.39111, 0, 0],\n        \"8637\": [-0.10889, 0.39111, 0, 0],\n        \"8640\": [-0.10889, 0.39111, 0, 0],\n        \"8641\": [-0.10889, 0.39111, 0, 0],\n        \"8656\": [-0.10889, 0.39111, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.10889, 0.39111, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.10889, 0.39111, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.06389, 0],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68611, 0, 0],\n        \"8712\": [0.08556, 0.58556, 0, 0],\n        \"8715\": [0.08556, 0.58556, 0, 0],\n        \"8722\": [0.13333, 0.63333, 0, 0],\n        \"8723\": [0.13333, 0.63333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.02778, 0.47222, 0, 0],\n        \"8728\": [-0.02639, 0.47361, 0, 0],\n        \"8729\": [-0.02639, 0.47361, 0, 0],\n        \"8730\": [0.18, 0.82, 0, 0],\n        \"8733\": [0, 0.44444, 0, 0],\n        \"8734\": [0, 0.44444, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0],\n        \"8764\": [-0.10889, 0.39111, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [0.00222, 0.50222, 0, 0],\n        \"8776\": [0.02444, 0.52444, 0, 0],\n        \"8781\": [0.00222, 0.50222, 0, 0],\n        \"8801\": [0.00222, 0.50222, 0, 0],\n        \"8804\": [0.19667, 0.69667, 0, 0],\n        \"8805\": [0.19667, 0.69667, 0, 0],\n        \"8810\": [0.08556, 0.58556, 0, 0],\n        \"8811\": [0.08556, 0.58556, 0, 0],\n        \"8826\": [0.08556, 0.58556, 0, 0],\n        \"8827\": [0.08556, 0.58556, 0, 0],\n        \"8834\": [0.08556, 0.58556, 0, 0],\n        \"8835\": [0.08556, 0.58556, 0, 0],\n        \"8838\": [0.19667, 0.69667, 0, 0],\n        \"8839\": [0.19667, 0.69667, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.19667, 0.69667, 0, 0],\n        \"8850\": [0.19667, 0.69667, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.13333, 0.63333, 0, 0],\n        \"8854\": [0.13333, 0.63333, 0, 0],\n        \"8855\": [0.13333, 0.63333, 0, 0],\n        \"8856\": [0.13333, 0.63333, 0, 0],\n        \"8857\": [0.13333, 0.63333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8900\": [-0.02639, 0.47361, 0, 0],\n        \"8901\": [-0.02639, 0.47361, 0, 0],\n        \"8902\": [-0.02778, 0.47222, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.13889, 0.36111, 0, 0],\n        \"8995\": [-0.13889, 0.36111, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.02778, 0.47222, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.02778, 0.47222, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10815\": [0, 0.68611, 0, 0],\n        \"10927\": [0.19667, 0.69667, 0, 0],\n        \"10928\": [0.19667, 0.69667, 0, 0]\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0],\n        \"34\": [0, 0.69444, 0.06961, 0],\n        \"35\": [0.19444, 0.69444, 0.06616, 0],\n        \"37\": [0.05556, 0.75, 0.13639, 0],\n        \"38\": [0, 0.69444, 0.09694, 0],\n        \"39\": [0, 0.69444, 0.12417, 0],\n        \"40\": [0.25, 0.75, 0.16194, 0],\n        \"41\": [0.25, 0.75, 0.03694, 0],\n        \"42\": [0, 0.75, 0.14917, 0],\n        \"43\": [0.05667, 0.56167, 0.03694, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0.02826, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0.16194, 0],\n        \"48\": [0, 0.64444, 0.13556, 0],\n        \"49\": [0, 0.64444, 0.13556, 0],\n        \"50\": [0, 0.64444, 0.13556, 0],\n        \"51\": [0, 0.64444, 0.13556, 0],\n        \"52\": [0.19444, 0.64444, 0.13556, 0],\n        \"53\": [0, 0.64444, 0.13556, 0],\n        \"54\": [0, 0.64444, 0.13556, 0],\n        \"55\": [0.19444, 0.64444, 0.13556, 0],\n        \"56\": [0, 0.64444, 0.13556, 0],\n        \"57\": [0, 0.64444, 0.13556, 0],\n        \"58\": [0, 0.43056, 0.0582, 0],\n        \"59\": [0.19444, 0.43056, 0.0582, 0],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0],\n        \"63\": [0, 0.69444, 0.1225, 0],\n        \"64\": [0, 0.69444, 0.09597, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0.10257, 0],\n        \"67\": [0, 0.68333, 0.14528, 0],\n        \"68\": [0, 0.68333, 0.09403, 0],\n        \"69\": [0, 0.68333, 0.12028, 0],\n        \"70\": [0, 0.68333, 0.13305, 0],\n        \"71\": [0, 0.68333, 0.08722, 0],\n        \"72\": [0, 0.68333, 0.16389, 0],\n        \"73\": [0, 0.68333, 0.15806, 0],\n        \"74\": [0, 0.68333, 0.14028, 0],\n        \"75\": [0, 0.68333, 0.14528, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0.16389, 0],\n        \"78\": [0, 0.68333, 0.16389, 0],\n        \"79\": [0, 0.68333, 0.09403, 0],\n        \"80\": [0, 0.68333, 0.10257, 0],\n        \"81\": [0.19444, 0.68333, 0.09403, 0],\n        \"82\": [0, 0.68333, 0.03868, 0],\n        \"83\": [0, 0.68333, 0.11972, 0],\n        \"84\": [0, 0.68333, 0.13305, 0],\n        \"85\": [0, 0.68333, 0.16389, 0],\n        \"86\": [0, 0.68333, 0.18361, 0],\n        \"87\": [0, 0.68333, 0.18361, 0],\n        \"88\": [0, 0.68333, 0.15806, 0],\n        \"89\": [0, 0.68333, 0.19383, 0],\n        \"90\": [0, 0.68333, 0.14528, 0],\n        \"91\": [0.25, 0.75, 0.1875, 0],\n        \"93\": [0.25, 0.75, 0.10528, 0],\n        \"94\": [0, 0.69444, 0.06646, 0],\n        \"95\": [0.31, 0.12056, 0.09208, 0],\n        \"97\": [0, 0.43056, 0.07671, 0],\n        \"98\": [0, 0.69444, 0.06312, 0],\n        \"99\": [0, 0.43056, 0.05653, 0],\n        \"100\": [0, 0.69444, 0.10333, 0],\n        \"101\": [0, 0.43056, 0.07514, 0],\n        \"102\": [0.19444, 0.69444, 0.21194, 0],\n        \"103\": [0.19444, 0.43056, 0.08847, 0],\n        \"104\": [0, 0.69444, 0.07671, 0],\n        \"105\": [0, 0.65536, 0.1019, 0],\n        \"106\": [0.19444, 0.65536, 0.14467, 0],\n        \"107\": [0, 0.69444, 0.10764, 0],\n        \"108\": [0, 0.69444, 0.10333, 0],\n        \"109\": [0, 0.43056, 0.07671, 0],\n        \"110\": [0, 0.43056, 0.07671, 0],\n        \"111\": [0, 0.43056, 0.06312, 0],\n        \"112\": [0.19444, 0.43056, 0.06312, 0],\n        \"113\": [0.19444, 0.43056, 0.08847, 0],\n        \"114\": [0, 0.43056, 0.10764, 0],\n        \"115\": [0, 0.43056, 0.08208, 0],\n        \"116\": [0, 0.61508, 0.09486, 0],\n        \"117\": [0, 0.43056, 0.07671, 0],\n        \"118\": [0, 0.43056, 0.10764, 0],\n        \"119\": [0, 0.43056, 0.10764, 0],\n        \"120\": [0, 0.43056, 0.12042, 0],\n        \"121\": [0.19444, 0.43056, 0.08847, 0],\n        \"122\": [0, 0.43056, 0.12292, 0],\n        \"126\": [0.35, 0.31786, 0.11585, 0],\n        \"163\": [0, 0.69444, 0, 0],\n        \"305\": [0, 0.43056, 0, 0.02778],\n        \"567\": [0.19444, 0.43056, 0, 0.08334],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0.09694, 0],\n        \"770\": [0, 0.69444, 0.06646, 0],\n        \"771\": [0, 0.66786, 0.11585, 0],\n        \"772\": [0, 0.56167, 0.10333, 0],\n        \"774\": [0, 0.69444, 0.10806, 0],\n        \"775\": [0, 0.66786, 0.11752, 0],\n        \"776\": [0, 0.66786, 0.10474, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0.1225, 0],\n        \"780\": [0, 0.62847, 0.08295, 0],\n        \"915\": [0, 0.68333, 0.13305, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0.09403, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0.15294, 0],\n        \"928\": [0, 0.68333, 0.16389, 0],\n        \"931\": [0, 0.68333, 0.12028, 0],\n        \"933\": [0, 0.68333, 0.11111, 0],\n        \"934\": [0, 0.68333, 0.05986, 0],\n        \"936\": [0, 0.68333, 0.11111, 0],\n        \"937\": [0, 0.68333, 0.10257, 0],\n        \"8211\": [0, 0.43056, 0.09208, 0],\n        \"8212\": [0, 0.43056, 0.09208, 0],\n        \"8216\": [0, 0.69444, 0.12417, 0],\n        \"8217\": [0, 0.69444, 0.12417, 0],\n        \"8220\": [0, 0.69444, 0.1685, 0],\n        \"8221\": [0, 0.69444, 0.06961, 0],\n        \"8463\": [0, 0.68889, 0, 0]\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0],\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.19444, 0.10556, 0, 0],\n        \"45\": [0, 0.43056, 0, 0],\n        \"46\": [0, 0.10556, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.64444, 0, 0],\n        \"49\": [0, 0.64444, 0, 0],\n        \"50\": [0, 0.64444, 0, 0],\n        \"51\": [0, 0.64444, 0, 0],\n        \"52\": [0, 0.64444, 0, 0],\n        \"53\": [0, 0.64444, 0, 0],\n        \"54\": [0, 0.64444, 0, 0],\n        \"55\": [0, 0.64444, 0, 0],\n        \"56\": [0, 0.64444, 0, 0],\n        \"57\": [0, 0.64444, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.19444, 0.43056, 0, 0],\n        \"60\": [0.0391, 0.5391, 0, 0],\n        \"61\": [-0.13313, 0.36687, 0, 0],\n        \"62\": [0.0391, 0.5391, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0],\n        \"66\": [0, 0.68333, 0, 0],\n        \"67\": [0, 0.68333, 0, 0],\n        \"68\": [0, 0.68333, 0, 0],\n        \"69\": [0, 0.68333, 0, 0],\n        \"70\": [0, 0.68333, 0, 0],\n        \"71\": [0, 0.68333, 0, 0],\n        \"72\": [0, 0.68333, 0, 0],\n        \"73\": [0, 0.68333, 0, 0],\n        \"74\": [0, 0.68333, 0, 0],\n        \"75\": [0, 0.68333, 0, 0],\n        \"76\": [0, 0.68333, 0, 0],\n        \"77\": [0, 0.68333, 0, 0],\n        \"78\": [0, 0.68333, 0, 0],\n        \"79\": [0, 0.68333, 0, 0],\n        \"80\": [0, 0.68333, 0, 0],\n        \"81\": [0.19444, 0.68333, 0, 0],\n        \"82\": [0, 0.68333, 0, 0],\n        \"83\": [0, 0.68333, 0, 0],\n        \"84\": [0, 0.68333, 0, 0],\n        \"85\": [0, 0.68333, 0, 0],\n        \"86\": [0, 0.68333, 0.01389, 0],\n        \"87\": [0, 0.68333, 0.01389, 0],\n        \"88\": [0, 0.68333, 0, 0],\n        \"89\": [0, 0.68333, 0.025, 0],\n        \"90\": [0, 0.68333, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"92\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.31, 0.12056, 0.02778, 0],\n        \"96\": [0, 0.69444, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.69444, 0.07778, 0],\n        \"103\": [0.19444, 0.43056, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.66786, 0, 0],\n        \"106\": [0.19444, 0.66786, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.19444, 0.43056, 0, 0],\n        \"113\": [0.19444, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.61508, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0.01389, 0],\n        \"119\": [0, 0.43056, 0.01389, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.19444, 0.43056, 0.01389, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.25, 0.75, 0, 0],\n        \"124\": [0.25, 0.75, 0, 0],\n        \"125\": [0.25, 0.75, 0, 0],\n        \"126\": [0.35, 0.31786, 0, 0],\n        \"160\": [0, 0, 0, 0],\n        \"168\": [0, 0.66786, 0, 0],\n        \"172\": [0, 0.43056, 0, 0],\n        \"175\": [0, 0.56778, 0, 0],\n        \"176\": [0, 0.69444, 0, 0],\n        \"177\": [0.08333, 0.58333, 0, 0],\n        \"180\": [0, 0.69444, 0, 0],\n        \"215\": [0.08333, 0.58333, 0, 0],\n        \"247\": [0.08333, 0.58333, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.19444, 0.43056, 0, 0],\n        \"710\": [0, 0.69444, 0, 0],\n        \"711\": [0, 0.62847, 0, 0],\n        \"713\": [0, 0.56778, 0, 0],\n        \"714\": [0, 0.69444, 0, 0],\n        \"715\": [0, 0.69444, 0, 0],\n        \"728\": [0, 0.69444, 0, 0],\n        \"729\": [0, 0.66786, 0, 0],\n        \"730\": [0, 0.69444, 0, 0],\n        \"732\": [0, 0.66786, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.66786, 0, 0],\n        \"772\": [0, 0.56778, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.66786, 0, 0],\n        \"776\": [0, 0.66786, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.62847, 0, 0],\n        \"824\": [0.19444, 0.69444, 0, 0],\n        \"915\": [0, 0.68333, 0, 0],\n        \"916\": [0, 0.68333, 0, 0],\n        \"920\": [0, 0.68333, 0, 0],\n        \"923\": [0, 0.68333, 0, 0],\n        \"926\": [0, 0.68333, 0, 0],\n        \"928\": [0, 0.68333, 0, 0],\n        \"931\": [0, 0.68333, 0, 0],\n        \"933\": [0, 0.68333, 0, 0],\n        \"934\": [0, 0.68333, 0, 0],\n        \"936\": [0, 0.68333, 0, 0],\n        \"937\": [0, 0.68333, 0, 0],\n        \"8211\": [0, 0.43056, 0.02778, 0],\n        \"8212\": [0, 0.43056, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0],\n        \"8224\": [0.19444, 0.69444, 0, 0],\n        \"8225\": [0.19444, 0.69444, 0, 0],\n        \"8230\": [0, 0.12, 0, 0],\n        \"8242\": [0, 0.55556, 0, 0],\n        \"8407\": [0, 0.71444, 0.15382, 0],\n        \"8463\": [0, 0.68889, 0, 0],\n        \"8465\": [0, 0.69444, 0, 0],\n        \"8467\": [0, 0.69444, 0, 0.11111],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111],\n        \"8476\": [0, 0.69444, 0, 0],\n        \"8501\": [0, 0.69444, 0, 0],\n        \"8592\": [-0.13313, 0.36687, 0, 0],\n        \"8593\": [0.19444, 0.69444, 0, 0],\n        \"8594\": [-0.13313, 0.36687, 0, 0],\n        \"8595\": [0.19444, 0.69444, 0, 0],\n        \"8596\": [-0.13313, 0.36687, 0, 0],\n        \"8597\": [0.25, 0.75, 0, 0],\n        \"8598\": [0.19444, 0.69444, 0, 0],\n        \"8599\": [0.19444, 0.69444, 0, 0],\n        \"8600\": [0.19444, 0.69444, 0, 0],\n        \"8601\": [0.19444, 0.69444, 0, 0],\n        \"8614\": [0.011, 0.511, 0, 0],\n        \"8617\": [0.011, 0.511, 0, 0],\n        \"8618\": [0.011, 0.511, 0, 0],\n        \"8636\": [-0.13313, 0.36687, 0, 0],\n        \"8637\": [-0.13313, 0.36687, 0, 0],\n        \"8640\": [-0.13313, 0.36687, 0, 0],\n        \"8641\": [-0.13313, 0.36687, 0, 0],\n        \"8652\": [0.011, 0.671, 0, 0],\n        \"8656\": [-0.13313, 0.36687, 0, 0],\n        \"8657\": [0.19444, 0.69444, 0, 0],\n        \"8658\": [-0.13313, 0.36687, 0, 0],\n        \"8659\": [0.19444, 0.69444, 0, 0],\n        \"8660\": [-0.13313, 0.36687, 0, 0],\n        \"8661\": [0.25, 0.75, 0, 0],\n        \"8704\": [0, 0.69444, 0, 0],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334],\n        \"8707\": [0, 0.69444, 0, 0],\n        \"8709\": [0.05556, 0.75, 0, 0],\n        \"8711\": [0, 0.68333, 0, 0],\n        \"8712\": [0.0391, 0.5391, 0, 0],\n        \"8715\": [0.0391, 0.5391, 0, 0],\n        \"8722\": [0.08333, 0.58333, 0, 0],\n        \"8723\": [0.08333, 0.58333, 0, 0],\n        \"8725\": [0.25, 0.75, 0, 0],\n        \"8726\": [0.25, 0.75, 0, 0],\n        \"8727\": [-0.03472, 0.46528, 0, 0],\n        \"8728\": [-0.05555, 0.44445, 0, 0],\n        \"8729\": [-0.05555, 0.44445, 0, 0],\n        \"8730\": [0.2, 0.8, 0, 0],\n        \"8733\": [0, 0.43056, 0, 0],\n        \"8734\": [0, 0.43056, 0, 0],\n        \"8736\": [0, 0.69224, 0, 0],\n        \"8739\": [0.25, 0.75, 0, 0],\n        \"8741\": [0.25, 0.75, 0, 0],\n        \"8743\": [0, 0.55556, 0, 0],\n        \"8744\": [0, 0.55556, 0, 0],\n        \"8745\": [0, 0.55556, 0, 0],\n        \"8746\": [0, 0.55556, 0, 0],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0],\n        \"8764\": [-0.13313, 0.36687, 0, 0],\n        \"8768\": [0.19444, 0.69444, 0, 0],\n        \"8771\": [-0.03625, 0.46375, 0, 0],\n        \"8773\": [-0.022, 0.589, 0, 0],\n        \"8776\": [-0.01688, 0.48312, 0, 0],\n        \"8781\": [-0.03625, 0.46375, 0, 0],\n        \"8784\": [-0.133, 0.67, 0, 0],\n        \"8800\": [0.215, 0.716, 0, 0],\n        \"8801\": [-0.03625, 0.46375, 0, 0],\n        \"8804\": [0.13597, 0.63597, 0, 0],\n        \"8805\": [0.13597, 0.63597, 0, 0],\n        \"8810\": [0.0391, 0.5391, 0, 0],\n        \"8811\": [0.0391, 0.5391, 0, 0],\n        \"8826\": [0.0391, 0.5391, 0, 0],\n        \"8827\": [0.0391, 0.5391, 0, 0],\n        \"8834\": [0.0391, 0.5391, 0, 0],\n        \"8835\": [0.0391, 0.5391, 0, 0],\n        \"8838\": [0.13597, 0.63597, 0, 0],\n        \"8839\": [0.13597, 0.63597, 0, 0],\n        \"8846\": [0, 0.55556, 0, 0],\n        \"8849\": [0.13597, 0.63597, 0, 0],\n        \"8850\": [0.13597, 0.63597, 0, 0],\n        \"8851\": [0, 0.55556, 0, 0],\n        \"8852\": [0, 0.55556, 0, 0],\n        \"8853\": [0.08333, 0.58333, 0, 0],\n        \"8854\": [0.08333, 0.58333, 0, 0],\n        \"8855\": [0.08333, 0.58333, 0, 0],\n        \"8856\": [0.08333, 0.58333, 0, 0],\n        \"8857\": [0.08333, 0.58333, 0, 0],\n        \"8866\": [0, 0.69444, 0, 0],\n        \"8867\": [0, 0.69444, 0, 0],\n        \"8868\": [0, 0.69444, 0, 0],\n        \"8869\": [0, 0.69444, 0, 0],\n        \"8872\": [0.249, 0.75, 0, 0],\n        \"8900\": [-0.05555, 0.44445, 0, 0],\n        \"8901\": [-0.05555, 0.44445, 0, 0],\n        \"8902\": [-0.03472, 0.46528, 0, 0],\n        \"8904\": [0.005, 0.505, 0, 0],\n        \"8942\": [0.03, 0.9, 0, 0],\n        \"8943\": [-0.19, 0.31, 0, 0],\n        \"8945\": [-0.1, 0.82, 0, 0],\n        \"8968\": [0.25, 0.75, 0, 0],\n        \"8969\": [0.25, 0.75, 0, 0],\n        \"8970\": [0.25, 0.75, 0, 0],\n        \"8971\": [0.25, 0.75, 0, 0],\n        \"8994\": [-0.14236, 0.35764, 0, 0],\n        \"8995\": [-0.14236, 0.35764, 0, 0],\n        \"9136\": [0.244, 0.744, 0, 0],\n        \"9137\": [0.244, 0.744, 0, 0],\n        \"9651\": [0.19444, 0.69444, 0, 0],\n        \"9657\": [-0.03472, 0.46528, 0, 0],\n        \"9661\": [0.19444, 0.69444, 0, 0],\n        \"9667\": [-0.03472, 0.46528, 0, 0],\n        \"9711\": [0.19444, 0.69444, 0, 0],\n        \"9824\": [0.12963, 0.69444, 0, 0],\n        \"9825\": [0.12963, 0.69444, 0, 0],\n        \"9826\": [0.12963, 0.69444, 0, 0],\n        \"9827\": [0.12963, 0.69444, 0, 0],\n        \"9837\": [0, 0.75, 0, 0],\n        \"9838\": [0.19444, 0.69444, 0, 0],\n        \"9839\": [0.19444, 0.69444, 0, 0],\n        \"10216\": [0.25, 0.75, 0, 0],\n        \"10217\": [0.25, 0.75, 0, 0],\n        \"10222\": [0.244, 0.744, 0, 0],\n        \"10223\": [0.244, 0.744, 0, 0],\n        \"10229\": [0.011, 0.511, 0, 0],\n        \"10230\": [0.011, 0.511, 0, 0],\n        \"10231\": [0.011, 0.511, 0, 0],\n        \"10232\": [0.024, 0.525, 0, 0],\n        \"10233\": [0.024, 0.525, 0, 0],\n        \"10234\": [0.024, 0.525, 0, 0],\n        \"10236\": [0.011, 0.511, 0, 0],\n        \"10815\": [0, 0.68333, 0, 0],\n        \"10927\": [0.13597, 0.63597, 0, 0],\n        \"10928\": [0.13597, 0.63597, 0, 0]\n    },\n    \"Math-BoldItalic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68611, 0, 0],\n        \"66\": [0, 0.68611, 0.04835, 0],\n        \"67\": [0, 0.68611, 0.06979, 0],\n        \"68\": [0, 0.68611, 0.03194, 0],\n        \"69\": [0, 0.68611, 0.05451, 0],\n        \"70\": [0, 0.68611, 0.15972, 0],\n        \"71\": [0, 0.68611, 0, 0],\n        \"72\": [0, 0.68611, 0.08229, 0],\n        \"73\": [0, 0.68611, 0.07778, 0],\n        \"74\": [0, 0.68611, 0.10069, 0],\n        \"75\": [0, 0.68611, 0.06979, 0],\n        \"76\": [0, 0.68611, 0, 0],\n        \"77\": [0, 0.68611, 0.11424, 0],\n        \"78\": [0, 0.68611, 0.11424, 0],\n        \"79\": [0, 0.68611, 0.03194, 0],\n        \"80\": [0, 0.68611, 0.15972, 0],\n        \"81\": [0.19444, 0.68611, 0, 0],\n        \"82\": [0, 0.68611, 0.00421, 0],\n        \"83\": [0, 0.68611, 0.05382, 0],\n        \"84\": [0, 0.68611, 0.15972, 0],\n        \"85\": [0, 0.68611, 0.11424, 0],\n        \"86\": [0, 0.68611, 0.25555, 0],\n        \"87\": [0, 0.68611, 0.15972, 0],\n        \"88\": [0, 0.68611, 0.07778, 0],\n        \"89\": [0, 0.68611, 0.25555, 0],\n        \"90\": [0, 0.68611, 0.06979, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0.19444, 0.69444, 0.11042, 0],\n        \"103\": [0.19444, 0.44444, 0.03704, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.69326, 0, 0],\n        \"106\": [0.19444, 0.69326, 0.0622, 0],\n        \"107\": [0, 0.69444, 0.01852, 0],\n        \"108\": [0, 0.69444, 0.0088, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0.03704, 0],\n        \"114\": [0, 0.44444, 0.03194, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.63492, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.03704, 0],\n        \"119\": [0, 0.44444, 0.02778, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.03704, 0],\n        \"122\": [0, 0.44444, 0.04213, 0],\n        \"915\": [0, 0.68611, 0.15972, 0],\n        \"916\": [0, 0.68611, 0, 0],\n        \"920\": [0, 0.68611, 0.03194, 0],\n        \"923\": [0, 0.68611, 0, 0],\n        \"926\": [0, 0.68611, 0.07458, 0],\n        \"928\": [0, 0.68611, 0.08229, 0],\n        \"931\": [0, 0.68611, 0.05451, 0],\n        \"933\": [0, 0.68611, 0.15972, 0],\n        \"934\": [0, 0.68611, 0, 0],\n        \"936\": [0, 0.68611, 0.11653, 0],\n        \"937\": [0, 0.68611, 0.04835, 0],\n        \"945\": [0, 0.44444, 0, 0],\n        \"946\": [0.19444, 0.69444, 0.03403, 0],\n        \"947\": [0.19444, 0.44444, 0.06389, 0],\n        \"948\": [0, 0.69444, 0.03819, 0],\n        \"949\": [0, 0.44444, 0, 0],\n        \"950\": [0.19444, 0.69444, 0.06215, 0],\n        \"951\": [0.19444, 0.44444, 0.03704, 0],\n        \"952\": [0, 0.69444, 0.03194, 0],\n        \"953\": [0, 0.44444, 0, 0],\n        \"954\": [0, 0.44444, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.44444, 0, 0],\n        \"957\": [0, 0.44444, 0.06898, 0],\n        \"958\": [0.19444, 0.69444, 0.03021, 0],\n        \"959\": [0, 0.44444, 0, 0],\n        \"960\": [0, 0.44444, 0.03704, 0],\n        \"961\": [0.19444, 0.44444, 0, 0],\n        \"962\": [0.09722, 0.44444, 0.07917, 0],\n        \"963\": [0, 0.44444, 0.03704, 0],\n        \"964\": [0, 0.44444, 0.13472, 0],\n        \"965\": [0, 0.44444, 0.03704, 0],\n        \"966\": [0.19444, 0.44444, 0, 0],\n        \"967\": [0.19444, 0.44444, 0, 0],\n        \"968\": [0.19444, 0.69444, 0.03704, 0],\n        \"969\": [0, 0.44444, 0.03704, 0],\n        \"977\": [0, 0.69444, 0, 0],\n        \"981\": [0.19444, 0.69444, 0, 0],\n        \"982\": [0, 0.44444, 0.03194, 0],\n        \"1009\": [0.19444, 0.44444, 0, 0],\n        \"1013\": [0, 0.44444, 0, 0]\n    },\n    \"Math-Italic\": {\n        \"47\": [0.19444, 0.69444, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556]\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889],\n        \"66\": [0, 0.68333, 0.05017, 0.08334],\n        \"67\": [0, 0.68333, 0.07153, 0.08334],\n        \"68\": [0, 0.68333, 0.02778, 0.05556],\n        \"69\": [0, 0.68333, 0.05764, 0.08334],\n        \"70\": [0, 0.68333, 0.13889, 0.08334],\n        \"71\": [0, 0.68333, 0, 0.08334],\n        \"72\": [0, 0.68333, 0.08125, 0.05556],\n        \"73\": [0, 0.68333, 0.07847, 0.11111],\n        \"74\": [0, 0.68333, 0.09618, 0.16667],\n        \"75\": [0, 0.68333, 0.07153, 0.05556],\n        \"76\": [0, 0.68333, 0, 0.02778],\n        \"77\": [0, 0.68333, 0.10903, 0.08334],\n        \"78\": [0, 0.68333, 0.10903, 0.08334],\n        \"79\": [0, 0.68333, 0.02778, 0.08334],\n        \"80\": [0, 0.68333, 0.13889, 0.08334],\n        \"81\": [0.19444, 0.68333, 0, 0.08334],\n        \"82\": [0, 0.68333, 0.00773, 0.08334],\n        \"83\": [0, 0.68333, 0.05764, 0.08334],\n        \"84\": [0, 0.68333, 0.13889, 0.08334],\n        \"85\": [0, 0.68333, 0.10903, 0.02778],\n        \"86\": [0, 0.68333, 0.22222, 0],\n        \"87\": [0, 0.68333, 0.13889, 0],\n        \"88\": [0, 0.68333, 0.07847, 0.08334],\n        \"89\": [0, 0.68333, 0.22222, 0],\n        \"90\": [0, 0.68333, 0.07153, 0.08334],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.43056, 0, 0.05556],\n        \"100\": [0, 0.69444, 0, 0.16667],\n        \"101\": [0, 0.43056, 0, 0.05556],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.65952, 0, 0],\n        \"106\": [0.19444, 0.65952, 0.05724, 0],\n        \"107\": [0, 0.69444, 0.03148, 0],\n        \"108\": [0, 0.69444, 0.01968, 0.08334],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0.05556],\n        \"112\": [0.19444, 0.43056, 0, 0.08334],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],\n        \"114\": [0, 0.43056, 0.02778, 0.05556],\n        \"115\": [0, 0.43056, 0, 0.05556],\n        \"116\": [0, 0.61508, 0, 0.08334],\n        \"117\": [0, 0.43056, 0, 0.02778],\n        \"118\": [0, 0.43056, 0.03588, 0.02778],\n        \"119\": [0, 0.43056, 0.02691, 0.08334],\n        \"120\": [0, 0.43056, 0, 0.02778],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"122\": [0, 0.43056, 0.04398, 0.05556],\n        \"915\": [0, 0.68333, 0.13889, 0.08334],\n        \"916\": [0, 0.68333, 0, 0.16667],\n        \"920\": [0, 0.68333, 0.02778, 0.08334],\n        \"923\": [0, 0.68333, 0, 0.16667],\n        \"926\": [0, 0.68333, 0.07569, 0.08334],\n        \"928\": [0, 0.68333, 0.08125, 0.05556],\n        \"931\": [0, 0.68333, 0.05764, 0.08334],\n        \"933\": [0, 0.68333, 0.13889, 0.05556],\n        \"934\": [0, 0.68333, 0, 0.08334],\n        \"936\": [0, 0.68333, 0.11, 0.05556],\n        \"937\": [0, 0.68333, 0.05017, 0.08334],\n        \"945\": [0, 0.43056, 0.0037, 0.02778],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],\n        \"947\": [0.19444, 0.43056, 0.05556, 0],\n        \"948\": [0, 0.69444, 0.03785, 0.05556],\n        \"949\": [0, 0.43056, 0, 0.08334],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],\n        \"952\": [0, 0.69444, 0.02778, 0.08334],\n        \"953\": [0, 0.43056, 0, 0.05556],\n        \"954\": [0, 0.43056, 0, 0],\n        \"955\": [0, 0.69444, 0, 0],\n        \"956\": [0.19444, 0.43056, 0, 0.02778],\n        \"957\": [0, 0.43056, 0.06366, 0.02778],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],\n        \"959\": [0, 0.43056, 0, 0.05556],\n        \"960\": [0, 0.43056, 0.03588, 0],\n        \"961\": [0.19444, 0.43056, 0, 0.08334],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],\n        \"963\": [0, 0.43056, 0.03588, 0],\n        \"964\": [0, 0.43056, 0.1132, 0.02778],\n        \"965\": [0, 0.43056, 0.03588, 0.02778],\n        \"966\": [0.19444, 0.43056, 0, 0.08334],\n        \"967\": [0.19444, 0.43056, 0, 0.05556],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],\n        \"969\": [0, 0.43056, 0.03588, 0],\n        \"977\": [0, 0.69444, 0, 0.08334],\n        \"981\": [0.19444, 0.69444, 0, 0.08334],\n        \"982\": [0, 0.43056, 0.02778, 0],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334],\n        \"1013\": [0, 0.43056, 0, 0.05556]\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0],\n        \"34\": [0, 0.69444, 0, 0],\n        \"35\": [0.19444, 0.69444, 0, 0],\n        \"36\": [0.05556, 0.75, 0, 0],\n        \"37\": [0.05556, 0.75, 0, 0],\n        \"38\": [0, 0.69444, 0, 0],\n        \"39\": [0, 0.69444, 0, 0],\n        \"40\": [0.25, 0.75, 0, 0],\n        \"41\": [0.25, 0.75, 0, 0],\n        \"42\": [0, 0.75, 0, 0],\n        \"43\": [0.08333, 0.58333, 0, 0],\n        \"44\": [0.125, 0.08333, 0, 0],\n        \"45\": [0, 0.44444, 0, 0],\n        \"46\": [0, 0.08333, 0, 0],\n        \"47\": [0.25, 0.75, 0, 0],\n        \"48\": [0, 0.65556, 0, 0],\n        \"49\": [0, 0.65556, 0, 0],\n        \"50\": [0, 0.65556, 0, 0],\n        \"51\": [0, 0.65556, 0, 0],\n        \"52\": [0, 0.65556, 0, 0],\n        \"53\": [0, 0.65556, 0, 0],\n        \"54\": [0, 0.65556, 0, 0],\n        \"55\": [0, 0.65556, 0, 0],\n        \"56\": [0, 0.65556, 0, 0],\n        \"57\": [0, 0.65556, 0, 0],\n        \"58\": [0, 0.44444, 0, 0],\n        \"59\": [0.125, 0.44444, 0, 0],\n        \"61\": [-0.13, 0.37, 0, 0],\n        \"63\": [0, 0.69444, 0, 0],\n        \"64\": [0, 0.69444, 0, 0],\n        \"65\": [0, 0.69444, 0, 0],\n        \"66\": [0, 0.69444, 0, 0],\n        \"67\": [0, 0.69444, 0, 0],\n        \"68\": [0, 0.69444, 0, 0],\n        \"69\": [0, 0.69444, 0, 0],\n        \"70\": [0, 0.69444, 0, 0],\n        \"71\": [0, 0.69444, 0, 0],\n        \"72\": [0, 0.69444, 0, 0],\n        \"73\": [0, 0.69444, 0, 0],\n        \"74\": [0, 0.69444, 0, 0],\n        \"75\": [0, 0.69444, 0, 0],\n        \"76\": [0, 0.69444, 0, 0],\n        \"77\": [0, 0.69444, 0, 0],\n        \"78\": [0, 0.69444, 0, 0],\n        \"79\": [0, 0.69444, 0, 0],\n        \"80\": [0, 0.69444, 0, 0],\n        \"81\": [0.125, 0.69444, 0, 0],\n        \"82\": [0, 0.69444, 0, 0],\n        \"83\": [0, 0.69444, 0, 0],\n        \"84\": [0, 0.69444, 0, 0],\n        \"85\": [0, 0.69444, 0, 0],\n        \"86\": [0, 0.69444, 0.01389, 0],\n        \"87\": [0, 0.69444, 0.01389, 0],\n        \"88\": [0, 0.69444, 0, 0],\n        \"89\": [0, 0.69444, 0.025, 0],\n        \"90\": [0, 0.69444, 0, 0],\n        \"91\": [0.25, 0.75, 0, 0],\n        \"93\": [0.25, 0.75, 0, 0],\n        \"94\": [0, 0.69444, 0, 0],\n        \"95\": [0.35, 0.09444, 0.02778, 0],\n        \"97\": [0, 0.44444, 0, 0],\n        \"98\": [0, 0.69444, 0, 0],\n        \"99\": [0, 0.44444, 0, 0],\n        \"100\": [0, 0.69444, 0, 0],\n        \"101\": [0, 0.44444, 0, 0],\n        \"102\": [0, 0.69444, 0.06944, 0],\n        \"103\": [0.19444, 0.44444, 0.01389, 0],\n        \"104\": [0, 0.69444, 0, 0],\n        \"105\": [0, 0.67937, 0, 0],\n        \"106\": [0.19444, 0.67937, 0, 0],\n        \"107\": [0, 0.69444, 0, 0],\n        \"108\": [0, 0.69444, 0, 0],\n        \"109\": [0, 0.44444, 0, 0],\n        \"110\": [0, 0.44444, 0, 0],\n        \"111\": [0, 0.44444, 0, 0],\n        \"112\": [0.19444, 0.44444, 0, 0],\n        \"113\": [0.19444, 0.44444, 0, 0],\n        \"114\": [0, 0.44444, 0.01389, 0],\n        \"115\": [0, 0.44444, 0, 0],\n        \"116\": [0, 0.57143, 0, 0],\n        \"117\": [0, 0.44444, 0, 0],\n        \"118\": [0, 0.44444, 0.01389, 0],\n        \"119\": [0, 0.44444, 0.01389, 0],\n        \"120\": [0, 0.44444, 0, 0],\n        \"121\": [0.19444, 0.44444, 0.01389, 0],\n        \"122\": [0, 0.44444, 0, 0],\n        \"126\": [0.35, 0.32659, 0, 0],\n        \"305\": [0, 0.44444, 0, 0],\n        \"567\": [0.19444, 0.44444, 0, 0],\n        \"768\": [0, 0.69444, 0, 0],\n        \"769\": [0, 0.69444, 0, 0],\n        \"770\": [0, 0.69444, 0, 0],\n        \"771\": [0, 0.67659, 0, 0],\n        \"772\": [0, 0.60889, 0, 0],\n        \"774\": [0, 0.69444, 0, 0],\n        \"775\": [0, 0.67937, 0, 0],\n        \"776\": [0, 0.67937, 0, 0],\n        \"778\": [0, 0.69444, 0, 0],\n        \"779\": [0, 0.69444, 0, 0],\n        \"780\": [0, 0.63194, 0, 0],\n        \"915\": [0, 0.69444, 0, 0],\n        \"916\": [0, 0.69444, 0, 0],\n        \"920\": [0, 0.69444, 0, 0],\n        \"923\": [0, 0.69444, 0, 0],\n        \"926\": [0, 0.69444, 0, 0],\n        \"928\": [0, 0.69444, 0, 0],\n        \"931\": [0, 0.69444, 0, 0],\n        \"933\": [0, 0.69444, 0, 0],\n        \"934\": [0, 0.69444, 0, 0],\n        \"936\": [0, 0.69444, 0, 0],\n        \"937\": [0, 0.69444, 0, 0],\n        \"8211\": [0, 0.44444, 0.02778, 0],\n        \"8212\": [0, 0.44444, 0.02778, 0],\n        \"8216\": [0, 0.69444, 0, 0],\n        \"8217\": [0, 0.69444, 0, 0],\n        \"8220\": [0, 0.69444, 0, 0],\n        \"8221\": [0, 0.69444, 0, 0]\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0],\n        \"66\": [0, 0.7, 0.04087, 0],\n        \"67\": [0, 0.7, 0.1689, 0],\n        \"68\": [0, 0.7, 0.09371, 0],\n        \"69\": [0, 0.7, 0.18583, 0],\n        \"70\": [0, 0.7, 0.13634, 0],\n        \"71\": [0, 0.7, 0.17322, 0],\n        \"72\": [0, 0.7, 0.29694, 0],\n        \"73\": [0, 0.7, 0.19189, 0],\n        \"74\": [0.27778, 0.7, 0.19189, 0],\n        \"75\": [0, 0.7, 0.31259, 0],\n        \"76\": [0, 0.7, 0.19189, 0],\n        \"77\": [0, 0.7, 0.15981, 0],\n        \"78\": [0, 0.7, 0.3525, 0],\n        \"79\": [0, 0.7, 0.08078, 0],\n        \"80\": [0, 0.7, 0.08078, 0],\n        \"81\": [0, 0.7, 0.03305, 0],\n        \"82\": [0, 0.7, 0.06259, 0],\n        \"83\": [0, 0.7, 0.19189, 0],\n        \"84\": [0, 0.7, 0.29087, 0],\n        \"85\": [0, 0.7, 0.25815, 0],\n        \"86\": [0, 0.7, 0.27523, 0],\n        \"87\": [0, 0.7, 0.27523, 0],\n        \"88\": [0, 0.7, 0.26006, 0],\n        \"89\": [0, 0.7, 0.2939, 0],\n        \"90\": [0, 0.7, 0.24037, 0]\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0],\n        \"41\": [0.35001, 0.85, 0, 0],\n        \"47\": [0.35001, 0.85, 0, 0],\n        \"91\": [0.35001, 0.85, 0, 0],\n        \"92\": [0.35001, 0.85, 0, 0],\n        \"93\": [0.35001, 0.85, 0, 0],\n        \"123\": [0.35001, 0.85, 0, 0],\n        \"125\": [0.35001, 0.85, 0, 0],\n        \"710\": [0, 0.72222, 0, 0],\n        \"732\": [0, 0.72222, 0, 0],\n        \"770\": [0, 0.72222, 0, 0],\n        \"771\": [0, 0.72222, 0, 0],\n        \"8214\": [-0.00099, 0.601, 0, 0],\n        \"8593\": [1e-05, 0.6, 0, 0],\n        \"8595\": [1e-05, 0.6, 0, 0],\n        \"8657\": [1e-05, 0.6, 0, 0],\n        \"8659\": [1e-05, 0.6, 0, 0],\n        \"8719\": [0.25001, 0.75, 0, 0],\n        \"8720\": [0.25001, 0.75, 0, 0],\n        \"8721\": [0.25001, 0.75, 0, 0],\n        \"8730\": [0.35001, 0.85, 0, 0],\n        \"8739\": [-0.00599, 0.606, 0, 0],\n        \"8741\": [-0.00599, 0.606, 0, 0],\n        \"8747\": [0.30612, 0.805, 0.19445, 0],\n        \"8748\": [0.306, 0.805, 0.19445, 0],\n        \"8749\": [0.306, 0.805, 0.19445, 0],\n        \"8750\": [0.30612, 0.805, 0.19445, 0],\n        \"8896\": [0.25001, 0.75, 0, 0],\n        \"8897\": [0.25001, 0.75, 0, 0],\n        \"8898\": [0.25001, 0.75, 0, 0],\n        \"8899\": [0.25001, 0.75, 0, 0],\n        \"8968\": [0.35001, 0.85, 0, 0],\n        \"8969\": [0.35001, 0.85, 0, 0],\n        \"8970\": [0.35001, 0.85, 0, 0],\n        \"8971\": [0.35001, 0.85, 0, 0],\n        \"9168\": [-0.00099, 0.601, 0, 0],\n        \"10216\": [0.35001, 0.85, 0, 0],\n        \"10217\": [0.35001, 0.85, 0, 0],\n        \"10752\": [0.25001, 0.75, 0, 0],\n        \"10753\": [0.25001, 0.75, 0, 0],\n        \"10754\": [0.25001, 0.75, 0, 0],\n        \"10756\": [0.25001, 0.75, 0, 0],\n        \"10758\": [0.25001, 0.75, 0, 0]\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0],\n        \"41\": [0.65002, 1.15, 0, 0],\n        \"47\": [0.65002, 1.15, 0, 0],\n        \"91\": [0.65002, 1.15, 0, 0],\n        \"92\": [0.65002, 1.15, 0, 0],\n        \"93\": [0.65002, 1.15, 0, 0],\n        \"123\": [0.65002, 1.15, 0, 0],\n        \"125\": [0.65002, 1.15, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8719\": [0.55001, 1.05, 0, 0],\n        \"8720\": [0.55001, 1.05, 0, 0],\n        \"8721\": [0.55001, 1.05, 0, 0],\n        \"8730\": [0.65002, 1.15, 0, 0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0],\n        \"8748\": [0.862, 1.36, 0.44445, 0],\n        \"8749\": [0.862, 1.36, 0.44445, 0],\n        \"8750\": [0.86225, 1.36, 0.44445, 0],\n        \"8896\": [0.55001, 1.05, 0, 0],\n        \"8897\": [0.55001, 1.05, 0, 0],\n        \"8898\": [0.55001, 1.05, 0, 0],\n        \"8899\": [0.55001, 1.05, 0, 0],\n        \"8968\": [0.65002, 1.15, 0, 0],\n        \"8969\": [0.65002, 1.15, 0, 0],\n        \"8970\": [0.65002, 1.15, 0, 0],\n        \"8971\": [0.65002, 1.15, 0, 0],\n        \"10216\": [0.65002, 1.15, 0, 0],\n        \"10217\": [0.65002, 1.15, 0, 0],\n        \"10752\": [0.55001, 1.05, 0, 0],\n        \"10753\": [0.55001, 1.05, 0, 0],\n        \"10754\": [0.55001, 1.05, 0, 0],\n        \"10756\": [0.55001, 1.05, 0, 0],\n        \"10758\": [0.55001, 1.05, 0, 0]\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0],\n        \"41\": [0.95003, 1.45, 0, 0],\n        \"47\": [0.95003, 1.45, 0, 0],\n        \"91\": [0.95003, 1.45, 0, 0],\n        \"92\": [0.95003, 1.45, 0, 0],\n        \"93\": [0.95003, 1.45, 0, 0],\n        \"123\": [0.95003, 1.45, 0, 0],\n        \"125\": [0.95003, 1.45, 0, 0],\n        \"710\": [0, 0.75, 0, 0],\n        \"732\": [0, 0.75, 0, 0],\n        \"770\": [0, 0.75, 0, 0],\n        \"771\": [0, 0.75, 0, 0],\n        \"8730\": [0.95003, 1.45, 0, 0],\n        \"8968\": [0.95003, 1.45, 0, 0],\n        \"8969\": [0.95003, 1.45, 0, 0],\n        \"8970\": [0.95003, 1.45, 0, 0],\n        \"8971\": [0.95003, 1.45, 0, 0],\n        \"10216\": [0.95003, 1.45, 0, 0],\n        \"10217\": [0.95003, 1.45, 0, 0]\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0],\n        \"41\": [1.25003, 1.75, 0, 0],\n        \"47\": [1.25003, 1.75, 0, 0],\n        \"91\": [1.25003, 1.75, 0, 0],\n        \"92\": [1.25003, 1.75, 0, 0],\n        \"93\": [1.25003, 1.75, 0, 0],\n        \"123\": [1.25003, 1.75, 0, 0],\n        \"125\": [1.25003, 1.75, 0, 0],\n        \"710\": [0, 0.825, 0, 0],\n        \"732\": [0, 0.825, 0, 0],\n        \"770\": [0, 0.825, 0, 0],\n        \"771\": [0, 0.825, 0, 0],\n        \"8730\": [1.25003, 1.75, 0, 0],\n        \"8968\": [1.25003, 1.75, 0, 0],\n        \"8969\": [1.25003, 1.75, 0, 0],\n        \"8970\": [1.25003, 1.75, 0, 0],\n        \"8971\": [1.25003, 1.75, 0, 0],\n        \"9115\": [0.64502, 1.155, 0, 0],\n        \"9116\": [1e-05, 0.6, 0, 0],\n        \"9117\": [0.64502, 1.155, 0, 0],\n        \"9118\": [0.64502, 1.155, 0, 0],\n        \"9119\": [1e-05, 0.6, 0, 0],\n        \"9120\": [0.64502, 1.155, 0, 0],\n        \"9121\": [0.64502, 1.155, 0, 0],\n        \"9122\": [-0.00099, 0.601, 0, 0],\n        \"9123\": [0.64502, 1.155, 0, 0],\n        \"9124\": [0.64502, 1.155, 0, 0],\n        \"9125\": [-0.00099, 0.601, 0, 0],\n        \"9126\": [0.64502, 1.155, 0, 0],\n        \"9127\": [1e-05, 0.9, 0, 0],\n        \"9128\": [0.65002, 1.15, 0, 0],\n        \"9129\": [0.90001, 0, 0, 0],\n        \"9130\": [0, 0.3, 0, 0],\n        \"9131\": [1e-05, 0.9, 0, 0],\n        \"9132\": [0.65002, 1.15, 0, 0],\n        \"9133\": [0.90001, 0, 0, 0],\n        \"9143\": [0.88502, 0.915, 0, 0],\n        \"10216\": [1.25003, 1.75, 0, 0],\n        \"10217\": [1.25003, 1.75, 0, 0],\n        \"57344\": [-0.00499, 0.605, 0, 0],\n        \"57345\": [-0.00499, 0.605, 0, 0],\n        \"57680\": [0, 0.12, 0, 0],\n        \"57681\": [0, 0.12, 0, 0],\n        \"57682\": [0, 0.12, 0, 0],\n        \"57683\": [0, 0.12, 0, 0]\n    },\n    \"Typewriter-Regular\": {\n        \"33\": [0, 0.61111, 0, 0],\n        \"34\": [0, 0.61111, 0, 0],\n        \"35\": [0, 0.61111, 0, 0],\n        \"36\": [0.08333, 0.69444, 0, 0],\n        \"37\": [0.08333, 0.69444, 0, 0],\n        \"38\": [0, 0.61111, 0, 0],\n        \"39\": [0, 0.61111, 0, 0],\n        \"40\": [0.08333, 0.69444, 0, 0],\n        \"41\": [0.08333, 0.69444, 0, 0],\n        \"42\": [0, 0.52083, 0, 0],\n        \"43\": [-0.08056, 0.53055, 0, 0],\n        \"44\": [0.13889, 0.125, 0, 0],\n        \"45\": [-0.08056, 0.53055, 0, 0],\n        \"46\": [0, 0.125, 0, 0],\n        \"47\": [0.08333, 0.69444, 0, 0],\n        \"48\": [0, 0.61111, 0, 0],\n        \"49\": [0, 0.61111, 0, 0],\n        \"50\": [0, 0.61111, 0, 0],\n        \"51\": [0, 0.61111, 0, 0],\n        \"52\": [0, 0.61111, 0, 0],\n        \"53\": [0, 0.61111, 0, 0],\n        \"54\": [0, 0.61111, 0, 0],\n        \"55\": [0, 0.61111, 0, 0],\n        \"56\": [0, 0.61111, 0, 0],\n        \"57\": [0, 0.61111, 0, 0],\n        \"58\": [0, 0.43056, 0, 0],\n        \"59\": [0.13889, 0.43056, 0, 0],\n        \"60\": [-0.05556, 0.55556, 0, 0],\n        \"61\": [-0.19549, 0.41562, 0, 0],\n        \"62\": [-0.05556, 0.55556, 0, 0],\n        \"63\": [0, 0.61111, 0, 0],\n        \"64\": [0, 0.61111, 0, 0],\n        \"65\": [0, 0.61111, 0, 0],\n        \"66\": [0, 0.61111, 0, 0],\n        \"67\": [0, 0.61111, 0, 0],\n        \"68\": [0, 0.61111, 0, 0],\n        \"69\": [0, 0.61111, 0, 0],\n        \"70\": [0, 0.61111, 0, 0],\n        \"71\": [0, 0.61111, 0, 0],\n        \"72\": [0, 0.61111, 0, 0],\n        \"73\": [0, 0.61111, 0, 0],\n        \"74\": [0, 0.61111, 0, 0],\n        \"75\": [0, 0.61111, 0, 0],\n        \"76\": [0, 0.61111, 0, 0],\n        \"77\": [0, 0.61111, 0, 0],\n        \"78\": [0, 0.61111, 0, 0],\n        \"79\": [0, 0.61111, 0, 0],\n        \"80\": [0, 0.61111, 0, 0],\n        \"81\": [0.13889, 0.61111, 0, 0],\n        \"82\": [0, 0.61111, 0, 0],\n        \"83\": [0, 0.61111, 0, 0],\n        \"84\": [0, 0.61111, 0, 0],\n        \"85\": [0, 0.61111, 0, 0],\n        \"86\": [0, 0.61111, 0, 0],\n        \"87\": [0, 0.61111, 0, 0],\n        \"88\": [0, 0.61111, 0, 0],\n        \"89\": [0, 0.61111, 0, 0],\n        \"90\": [0, 0.61111, 0, 0],\n        \"91\": [0.08333, 0.69444, 0, 0],\n        \"92\": [0.08333, 0.69444, 0, 0],\n        \"93\": [0.08333, 0.69444, 0, 0],\n        \"94\": [0, 0.61111, 0, 0],\n        \"95\": [0.09514, 0, 0, 0],\n        \"96\": [0, 0.61111, 0, 0],\n        \"97\": [0, 0.43056, 0, 0],\n        \"98\": [0, 0.61111, 0, 0],\n        \"99\": [0, 0.43056, 0, 0],\n        \"100\": [0, 0.61111, 0, 0],\n        \"101\": [0, 0.43056, 0, 0],\n        \"102\": [0, 0.61111, 0, 0],\n        \"103\": [0.22222, 0.43056, 0, 0],\n        \"104\": [0, 0.61111, 0, 0],\n        \"105\": [0, 0.61111, 0, 0],\n        \"106\": [0.22222, 0.61111, 0, 0],\n        \"107\": [0, 0.61111, 0, 0],\n        \"108\": [0, 0.61111, 0, 0],\n        \"109\": [0, 0.43056, 0, 0],\n        \"110\": [0, 0.43056, 0, 0],\n        \"111\": [0, 0.43056, 0, 0],\n        \"112\": [0.22222, 0.43056, 0, 0],\n        \"113\": [0.22222, 0.43056, 0, 0],\n        \"114\": [0, 0.43056, 0, 0],\n        \"115\": [0, 0.43056, 0, 0],\n        \"116\": [0, 0.55358, 0, 0],\n        \"117\": [0, 0.43056, 0, 0],\n        \"118\": [0, 0.43056, 0, 0],\n        \"119\": [0, 0.43056, 0, 0],\n        \"120\": [0, 0.43056, 0, 0],\n        \"121\": [0.22222, 0.43056, 0, 0],\n        \"122\": [0, 0.43056, 0, 0],\n        \"123\": [0.08333, 0.69444, 0, 0],\n        \"124\": [0.08333, 0.69444, 0, 0],\n        \"125\": [0.08333, 0.69444, 0, 0],\n        \"126\": [0, 0.61111, 0, 0],\n        \"127\": [0, 0.61111, 0, 0],\n        \"305\": [0, 0.43056, 0, 0],\n        \"567\": [0.22222, 0.43056, 0, 0],\n        \"768\": [0, 0.61111, 0, 0],\n        \"769\": [0, 0.61111, 0, 0],\n        \"770\": [0, 0.61111, 0, 0],\n        \"771\": [0, 0.61111, 0, 0],\n        \"772\": [0, 0.56555, 0, 0],\n        \"774\": [0, 0.61111, 0, 0],\n        \"776\": [0, 0.61111, 0, 0],\n        \"778\": [0, 0.61111, 0, 0],\n        \"780\": [0, 0.56597, 0, 0],\n        \"915\": [0, 0.61111, 0, 0],\n        \"916\": [0, 0.61111, 0, 0],\n        \"920\": [0, 0.61111, 0, 0],\n        \"923\": [0, 0.61111, 0, 0],\n        \"926\": [0, 0.61111, 0, 0],\n        \"928\": [0, 0.61111, 0, 0],\n        \"931\": [0, 0.61111, 0, 0],\n        \"933\": [0, 0.61111, 0, 0],\n        \"934\": [0, 0.61111, 0, 0],\n        \"936\": [0, 0.61111, 0, 0],\n        \"937\": [0, 0.61111, 0, 0],\n        \"2018\": [0, 0.61111, 0, 0],\n        \"2019\": [0, 0.61111, 0, 0],\n        \"8216\": [0, 0.61111, 0, 0],\n        \"8217\": [0, 0.61111, 0, 0],\n        \"8242\": [0, 0.61111, 0, 0],\n        \"9251\": [0.11111, 0.21944, 0, 0]\n    }\n};\n\nexports.default = fontMetricsData;\n\n},{}],103:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _ParseNode = require(\"./ParseNode\");\n\nvar _ParseNode2 = _interopRequireDefault(_ParseNode);\n\nvar _defineFunction2 = require(\"./defineFunction\");\n\nvar _defineFunction3 = _interopRequireDefault(_defineFunction2);\n\nrequire(\"./functions/phantom\");\n\nrequire(\"./functions/operators\");\n\nrequire(\"./functions/delimsizing\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// WARNING: New functions should be added to src/functions and imported here.\n\n/** Include this to ensure that all functions are defined. */\nvar functions = _defineFunction2._functions;\nexports.default = functions;\n\n// Define a convenience function that mimcs the old semantics of defineFunction\n// to support existing code so that we can migrate it a little bit at a time.\n\nvar defineFunction = function defineFunction(names, props, handler) // null only if handled in parser\n{\n    (0, _defineFunction3.default)({ names: names, props: props, handler: handler });\n};\n\n// A normal square root\ndefineFunction([\"\\\\sqrt\"], {\n    numArgs: 1,\n    numOptionalArgs: 1\n}, function (context, args, optArgs) {\n    var index = optArgs[0];\n    var body = args[0];\n    return {\n        type: \"sqrt\",\n        body: body,\n        index: index\n    };\n});\n\n// Non-mathy text, possibly in a font\nvar textFunctionFonts = {\n    \"\\\\text\": undefined, \"\\\\textrm\": \"mathrm\", \"\\\\textsf\": \"mathsf\",\n    \"\\\\texttt\": \"mathtt\", \"\\\\textnormal\": \"mathrm\", \"\\\\textbf\": \"mathbf\",\n    \"\\\\textit\": \"textit\"\n};\n\ndefineFunction([\"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", \"\\\\textbf\", \"\\\\textit\"], {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n    allowedInText: true\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"text\",\n        body: (0, _defineFunction2.ordargument)(body),\n        font: textFunctionFonts[context.funcName]\n    };\n});\n\n// A two-argument custom color\ndefineFunction([\"\\\\textcolor\"], {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"]\n}, function (context, args) {\n    var color = args[0];\n    var body = args[1];\n    return {\n        type: \"color\",\n        color: color.value,\n        value: (0, _defineFunction2.ordargument)(body)\n    };\n});\n\n// \\color is handled in Parser.js's parseImplicitGroup\ndefineFunction([\"\\\\color\"], {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\"]\n}, null);\n\n// colorbox\ndefineFunction([\"\\\\colorbox\"], {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"text\"]\n}, function (context, args) {\n    var color = args[0];\n    var body = args[1];\n    return {\n        type: \"enclose\",\n        label: context.funcName,\n        backgroundColor: color,\n        body: body\n    };\n});\n\n// fcolorbox\ndefineFunction([\"\\\\fcolorbox\"], {\n    numArgs: 3,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"color\", \"text\"]\n}, function (context, args) {\n    var borderColor = args[0];\n    var backgroundColor = args[1];\n    var body = args[2];\n    return {\n        type: \"enclose\",\n        label: context.funcName,\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        body: body\n    };\n});\n\n// An overline\ndefineFunction([\"\\\\overline\"], {\n    numArgs: 1\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"overline\",\n        body: body\n    };\n});\n\n// An underline\ndefineFunction([\"\\\\underline\"], {\n    numArgs: 1\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"underline\",\n        body: body\n    };\n});\n\n// A box of the width and height\ndefineFunction([\"\\\\rule\"], {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n}, function (context, args, optArgs) {\n    var shift = optArgs[0];\n    var width = args[0];\n    var height = args[1];\n    return {\n        type: \"rule\",\n        shift: shift && shift.value,\n        width: width.value,\n        height: height.value\n    };\n});\n\n// TODO: In TeX, \\mkern only accepts mu-units, and \\kern does not accept\n// mu-units. In current KaTeX we relax this; both commands accept any unit.\ndefineFunction([\"\\\\kern\", \"\\\\mkern\"], {\n    numArgs: 1,\n    argTypes: [\"size\"]\n}, function (context, args) {\n    return {\n        type: \"kern\",\n        dimension: args[0].value\n    };\n});\n\n// A KaTeX logo\ndefineFunction([\"\\\\KaTeX\"], {\n    numArgs: 0,\n    allowedInText: true\n}, function (context) {\n    return {\n        type: \"katex\"\n    };\n});\n\n// Math class commands except \\mathop\ndefineFunction([\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"], {\n    numArgs: 1\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"mclass\",\n        mclass: \"m\" + context.funcName.substr(5),\n        value: (0, _defineFunction2.ordargument)(body)\n    };\n});\n\n// Build a relation by placing one symbol on top of another\ndefineFunction([\"\\\\stackrel\"], {\n    numArgs: 2\n}, function (context, args) {\n    var top = args[0];\n    var bottom = args[1];\n\n    var bottomop = new _ParseNode2.default(\"op\", {\n        type: \"op\",\n        limits: true,\n        alwaysHandleSupSub: true,\n        symbol: false,\n        value: (0, _defineFunction2.ordargument)(bottom)\n    }, bottom.mode);\n\n    var supsub = new _ParseNode2.default(\"supsub\", {\n        base: bottomop,\n        sup: top,\n        sub: null\n    }, top.mode);\n\n    return {\n        type: \"mclass\",\n        mclass: \"mrel\",\n        value: [supsub]\n    };\n});\n\n// \\mod-type functions\ndefineFunction([\"\\\\bmod\"], {\n    numArgs: 0\n}, function (context, args) {\n    return {\n        type: \"mod\",\n        modType: \"bmod\",\n        value: null\n    };\n});\n\ndefineFunction([\"\\\\pod\", \"\\\\pmod\", \"\\\\mod\"], {\n    numArgs: 1\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"mod\",\n        modType: context.funcName.substr(1),\n        value: (0, _defineFunction2.ordargument)(body)\n    };\n});\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\"\n};\n\n// Single-argument color functions\ndefineFunction([\"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\", \"\\\\green\", \"\\\\gray\", \"\\\\purple\", \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\", \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\", \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\", \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\", \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\", \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\", \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\", \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\", \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\", \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\", \"\\\\kaBlue\", \"\\\\kaGreen\"], {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"color\",\n        color: \"katex-\" + context.funcName.slice(1),\n        value: (0, _defineFunction2.ordargument)(body)\n    };\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\n// No limits, not symbols\ndefineFunction([\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"], {\n    numArgs: 0\n}, function (context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: false,\n        body: context.funcName\n    };\n});\n\n// Limits, not symbols\ndefineFunction([\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\liminf\", \"\\\\limsup\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"], {\n    numArgs: 0\n}, function (context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: false,\n        body: context.funcName\n    };\n});\n\n// No limits, symbols\ndefineFunction([\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\"], {\n    numArgs: 0\n}, function (context) {\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: true,\n        body: context.funcName\n    };\n});\n\n// Limits, symbols\ndefineFunction([\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\"], {\n    numArgs: 0\n}, function (context) {\n    return {\n        type: \"op\",\n        limits: true,\n        symbol: true,\n        body: context.funcName\n    };\n});\n\n// \\mathop class command\ndefineFunction([\"\\\\mathop\"], {\n    numArgs: 1\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"op\",\n        limits: false,\n        symbol: false,\n        value: (0, _defineFunction2.ordargument)(body)\n    };\n});\n\n// Fractions\ndefineFunction([\"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\"], {\n    numArgs: 2,\n    greediness: 2\n}, function (context, args) {\n    var numer = args[0];\n    var denom = args[1];\n    var hasBarLine = void 0;\n    var leftDelim = null;\n    var rightDelim = null;\n    var size = \"auto\";\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\frac\":\n        case \"\\\\tfrac\":\n            hasBarLine = true;\n            break;\n        case \"\\\\\\\\atopfrac\":\n            hasBarLine = false;\n            break;\n        case \"\\\\dbinom\":\n        case \"\\\\binom\":\n        case \"\\\\tbinom\":\n            hasBarLine = false;\n            leftDelim = \"(\";\n            rightDelim = \")\";\n            break;\n        default:\n            throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (context.funcName) {\n        case \"\\\\dfrac\":\n        case \"\\\\dbinom\":\n            size = \"display\";\n            break;\n        case \"\\\\tfrac\":\n        case \"\\\\tbinom\":\n            size = \"text\";\n            break;\n    }\n\n    return {\n        type: \"genfrac\",\n        numer: numer,\n        denom: denom,\n        hasBarLine: hasBarLine,\n        leftDelim: leftDelim,\n        rightDelim: rightDelim,\n        size: size\n    };\n});\n\n// Horizontal overlap functions\ndefineFunction([\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"], {\n    numArgs: 1,\n    allowedInText: true\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"lap\",\n        alignment: context.funcName.slice(5),\n        body: body\n    };\n});\n\n// smash, with optional [tb], as in AMS\ndefineFunction([\"\\\\smash\"], {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n}, function (context, args, optArgs) {\n    var smashHeight = false;\n    var smashDepth = false;\n    var tbArg = optArgs[0];\n    if (tbArg) {\n        // Optional [tb] argument is engaged.\n        // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n        //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n        var letter = \"\";\n        for (var i = 0; i < tbArg.value.length; ++i) {\n            letter = tbArg.value[i].value;\n            if (letter === \"t\") {\n                smashHeight = true;\n            } else if (letter === \"b\") {\n                smashDepth = true;\n            } else {\n                smashHeight = false;\n                smashDepth = false;\n                break;\n            }\n        }\n    } else {\n        smashHeight = true;\n        smashDepth = true;\n    }\n\n    var body = args[0];\n    return {\n        type: \"smash\",\n        body: body,\n        smashHeight: smashHeight,\n        smashDepth: smashDepth\n    };\n});\n\n// Sizing functions (handled in Parser.js explicitly, hence no handler)\ndefineFunction([\"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"], { numArgs: 0 }, null);\n\n// Style changing functions (handled in Parser.js explicitly, hence no\n// handler)\ndefineFunction([\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"], { numArgs: 0 }, null);\n\n// Old font changing functions\ndefineFunction([\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"], { numArgs: 0 }, null);\n\ndefineFunction([\n// styles\n\"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n// families\n\"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\",\n\n// aliases\n\"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"], {\n    numArgs: 1,\n    greediness: 2\n}, function (context, args) {\n    var body = args[0];\n    var func = context.funcName;\n    if (func in fontAliases) {\n        func = fontAliases[func];\n    }\n    return {\n        type: \"font\",\n        font: func.slice(1),\n        body: body\n    };\n});\n\n// Accents\ndefineFunction([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"], {\n    numArgs: 1\n}, function (context, args) {\n    var base = args[0];\n\n    var isStretchy = !_utils2.default.contains([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\"], context.funcName);\n\n    var isShifty = !isStretchy || _utils2.default.contains([\"\\\\widehat\", \"\\\\widetilde\"], context.funcName);\n\n    return {\n        type: \"accent\",\n        label: context.funcName,\n        isStretchy: isStretchy,\n        isShifty: isShifty,\n        base: base\n    };\n});\n\n// Text-mode accents\ndefineFunction([\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\"], {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: false\n}, function (context, args) {\n    var base = args[0];\n\n    return {\n        type: \"accent\",\n        label: context.funcName,\n        isStretchy: false,\n        isShifty: true,\n        base: base\n    };\n});\n\n// Horizontal stretchy braces\ndefineFunction([\"\\\\overbrace\", \"\\\\underbrace\"], {\n    numArgs: 1\n}, function (context, args) {\n    var base = args[0];\n    return {\n        type: \"horizBrace\",\n        label: context.funcName,\n        isOver: /^\\\\over/.test(context.funcName),\n        base: base\n    };\n});\n\n// Stretchy accents under the body\ndefineFunction([\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\undertilde\"], {\n    numArgs: 1\n}, function (context, args) {\n    var base = args[0];\n    return {\n        type: \"accentUnder\",\n        label: context.funcName,\n        base: base\n    };\n});\n\n// Stretchy arrows with an optional argument\ndefineFunction([\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xLongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xLongequal\", \"\\\\xtofrom\"], {\n    numArgs: 1,\n    numOptionalArgs: 1\n}, function (context, args, optArgs) {\n    var below = optArgs[0];\n    var body = args[0];\n    return {\n        type: \"xArrow\", // x for extensible\n        label: context.funcName,\n        body: body,\n        below: below\n    };\n});\n\n// enclose\ndefineFunction([\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\", \"\\\\fbox\"], {\n    numArgs: 1\n}, function (context, args) {\n    var body = args[0];\n    return {\n        type: \"enclose\",\n        label: context.funcName,\n        body: body\n    };\n});\n\n// Infix generalized fractions\ndefineFunction([\"\\\\over\", \"\\\\choose\", \"\\\\atop\"], {\n    numArgs: 0,\n    infix: true\n}, function (context) {\n    var replaceWith = void 0;\n    switch (context.funcName) {\n        case \"\\\\over\":\n            replaceWith = \"\\\\frac\";\n            break;\n        case \"\\\\choose\":\n            replaceWith = \"\\\\binom\";\n            break;\n        case \"\\\\atop\":\n            replaceWith = \"\\\\\\\\atopfrac\";\n            break;\n        default:\n            throw new Error(\"Unrecognized infix genfrac command\");\n    }\n    return {\n        type: \"infix\",\n        replaceWith: replaceWith,\n        token: context.token\n    };\n});\n\n// Row breaks for aligned data\ndefineFunction([\"\\\\\\\\\", \"\\\\cr\"], {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"]\n}, function (context, args, optArgs) {\n    var size = optArgs[0];\n    return {\n        type: \"cr\",\n        size: size\n    };\n});\n\n// Environment delimiters\ndefineFunction([\"\\\\begin\", \"\\\\end\"], {\n    numArgs: 1,\n    argTypes: [\"text\"]\n}, function (context, args) {\n    var nameGroup = args[0];\n    if (nameGroup.type !== \"ordgroup\") {\n        throw new _ParseError2.default(\"Invalid environment name\", nameGroup);\n    }\n    var name = \"\";\n    for (var i = 0; i < nameGroup.value.length; ++i) {\n        name += nameGroup.value[i].value;\n    }\n    return {\n        type: \"environment\",\n        name: name,\n        nameGroup: nameGroup\n    };\n});\n\n// Box manipulation\ndefineFunction([\"\\\\raisebox\"], {\n    numArgs: 2,\n    argTypes: [\"size\", \"text\"],\n    allowedInText: true\n}, function (context, args) {\n    var amount = args[0];\n    var body = args[1];\n    return {\n        type: \"raisebox\",\n        dy: amount,\n        body: body,\n        value: (0, _defineFunction2.ordargument)(body)\n    };\n});\n\n// \\verb and \\verb* are dealt with directly in Parser.js.\n// If we end up here, it's because of a failure to match the two delimiters\n// in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n// terminated by end of line (or file).\ndefineFunction([\"\\\\verb\"], {\n    numArgs: 0,\n    allowedInText: true\n}, function (context) {\n    throw new _ParseError2.default(\"\\\\verb ended by end of line instead of matching delimiter\");\n});\n\n},{\"./ParseError\":84,\"./ParseNode\":85,\"./defineFunction\":96,\"./functions/delimsizing\":104,\"./functions/operators\":105,\"./functions/phantom\":106,\"./utils\":115}],104:[function(require,module,exports){\n\"use strict\";\n\nvar _buildCommon = require(\"../buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _defineFunction = require(\"../defineFunction\");\n\nvar _defineFunction2 = _interopRequireDefault(_defineFunction);\n\nvar _delimiter = require(\"../delimiter\");\n\nvar _delimiter2 = _interopRequireDefault(_delimiter);\n\nvar _mathMLTree = require(\"../mathMLTree\");\n\nvar _mathMLTree2 = _interopRequireDefault(_mathMLTree);\n\nvar _ParseError = require(\"../ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _utils = require(\"../utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _buildHTML = require(\"../buildHTML\");\n\nvar html = _interopRequireWildcard(_buildHTML);\n\nvar _buildMathML = require(\"../buildMathML\");\n\nvar mml = _interopRequireWildcard(_buildMathML);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\": { mclass: \"mopen\", size: 1 },\n    \"\\\\Bigl\": { mclass: \"mopen\", size: 2 },\n    \"\\\\biggl\": { mclass: \"mopen\", size: 3 },\n    \"\\\\Biggl\": { mclass: \"mopen\", size: 4 },\n    \"\\\\bigr\": { mclass: \"mclose\", size: 1 },\n    \"\\\\Bigr\": { mclass: \"mclose\", size: 2 },\n    \"\\\\biggr\": { mclass: \"mclose\", size: 3 },\n    \"\\\\Biggr\": { mclass: \"mclose\", size: 4 },\n    \"\\\\bigm\": { mclass: \"mrel\", size: 1 },\n    \"\\\\Bigm\": { mclass: \"mrel\", size: 2 },\n    \"\\\\biggm\": { mclass: \"mrel\", size: 3 },\n    \"\\\\Biggm\": { mclass: \"mrel\", size: 4 },\n    \"\\\\big\": { mclass: \"mord\", size: 1 },\n    \"\\\\Big\": { mclass: \"mord\", size: 2 },\n    \"\\\\bigg\": { mclass: \"mord\", size: 3 },\n    \"\\\\Bigg\": { mclass: \"mord\", size: 4 }\n};\n\nvar delimiters = [\"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\", \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n    if (_utils2.default.contains(delimiters, delim.value)) {\n        return delim;\n    } else {\n        throw new _ParseError2.default(\"Invalid delimiter: '\" + delim.value + \"' after '\" + context.funcName + \"'\", delim);\n    }\n}\n\n(0, _defineFunction2.default)({\n    type: \"delimsizing\",\n    names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n\n        return {\n            type: \"delimsizing\",\n            size: delimiterSizes[context.funcName].size,\n            mclass: delimiterSizes[context.funcName].mclass,\n            value: delim.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var delim = group.value.value;\n\n        if (delim === \".\") {\n            // Empty delimiters still count as elements, even though they don't\n            // show anything.\n            return _buildCommon2.default.makeSpan([group.value.mclass]);\n        }\n\n        // Use delimiter.sizedDelim to generate the delimiter.\n        return _delimiter2.default.sizedDelim(delim, group.value.size, options, group.mode, [group.value.mclass]);\n    },\n    mathmlBuilder: function mathmlBuilder(group) {\n        var children = [];\n\n        if (group.value.value !== \".\") {\n            children.push(mml.makeText(group.value.value, group.mode));\n        }\n\n        var node = new _mathMLTree2.default.MathNode(\"mo\", children);\n\n        if (group.value.mclass === \"mopen\" || group.value.mclass === \"mclose\") {\n            // Only some of the delimsizing functions act as fences, and they\n            // return \"mopen\" or \"mclose\" mclass.\n            node.setAttribute(\"fence\", \"true\");\n        } else {\n            // Explicitly disable fencing if it's not a fence, to override the\n            // defaults.\n            node.setAttribute(\"fence\", \"false\");\n        }\n\n        return node;\n    }\n});\n\n(0, _defineFunction2.default)({\n    type: \"leftright\",\n    names: [\"\\\\left\", \"\\\\right\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n\n        // \\left and \\right are caught somewhere in Parser.js, which is\n        // why this data doesn't match what is in buildHTML.\n        return {\n            type: \"leftright\",\n            value: delim.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Build the inner expression\n        var inner = html.buildExpression(group.value.body, options, true);\n\n        var innerHeight = 0;\n        var innerDepth = 0;\n        var hadMiddle = false;\n\n        // Calculate its height and depth\n        for (var i = 0; i < inner.length; i++) {\n            if (inner[i].isMiddle) {\n                hadMiddle = true;\n            } else {\n                innerHeight = Math.max(inner[i].height, innerHeight);\n                innerDepth = Math.max(inner[i].depth, innerDepth);\n            }\n        }\n\n        // The size of delimiters is the same, regardless of what style we are\n        // in. Thus, to correctly calculate the size of delimiter we need around\n        // a group, we scale down the inner size based on the size.\n        innerHeight *= options.sizeMultiplier;\n        innerDepth *= options.sizeMultiplier;\n\n        var leftDelim = void 0;\n        if (group.value.left === \".\") {\n            // Empty delimiters in \\left and \\right make null delimiter spaces.\n            leftDelim = html.makeNullDelimiter(options, [\"mopen\"]);\n        } else {\n            // Otherwise, use leftRightDelim to generate the correct sized\n            // delimiter.\n            leftDelim = _delimiter2.default.leftRightDelim(group.value.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n        }\n        // Add it to the beginning of the expression\n        inner.unshift(leftDelim);\n\n        // Handle middle delimiters\n        if (hadMiddle) {\n            for (var _i = 1; _i < inner.length; _i++) {\n                var middleDelim = inner[_i];\n                if (middleDelim.isMiddle) {\n                    // Apply the options that were active when \\middle was called\n                    inner[_i] = _delimiter2.default.leftRightDelim(middleDelim.isMiddle.value, innerHeight, innerDepth, middleDelim.isMiddle.options, group.mode, []);\n                    // Add back spaces shifted into the delimiter\n                    var spaces = html.spliceSpaces(middleDelim.children, 0);\n                    if (spaces) {\n                        _buildCommon2.default.prependChildren(inner[_i], spaces);\n                    }\n                }\n            }\n        }\n\n        var rightDelim = void 0;\n        // Same for the right delimiter\n        if (group.value.right === \".\") {\n            rightDelim = html.makeNullDelimiter(options, [\"mclose\"]);\n        } else {\n            rightDelim = _delimiter2.default.leftRightDelim(group.value.right, innerHeight, innerDepth, options, group.mode, [\"mclose\"]);\n        }\n        // Add it to the end of the expression.\n        inner.push(rightDelim);\n\n        return _buildCommon2.default.makeSpan([\"minner\"], inner, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = mml.buildExpression(group.value.body, options);\n\n        if (group.value.left !== \".\") {\n            var leftNode = new _mathMLTree2.default.MathNode(\"mo\", [mml.makeText(group.value.left, group.mode)]);\n\n            leftNode.setAttribute(\"fence\", \"true\");\n\n            inner.unshift(leftNode);\n        }\n\n        if (group.value.right !== \".\") {\n            var rightNode = new _mathMLTree2.default.MathNode(\"mo\", [mml.makeText(group.value.right, group.mode)]);\n\n            rightNode.setAttribute(\"fence\", \"true\");\n\n            inner.push(rightNode);\n        }\n\n        var outerNode = new _mathMLTree2.default.MathNode(\"mrow\", inner);\n\n        return outerNode;\n    }\n});\n\n(0, _defineFunction2.default)({\n    type: \"middle\",\n    names: [\"\\\\middle\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n        if (!context.parser.leftrightDepth) {\n            throw new _ParseError2.default(\"\\\\middle without preceding \\\\left\", delim);\n        }\n\n        return {\n            type: \"middle\",\n            value: delim.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var middleDelim = void 0;\n        if (group.value.value === \".\") {\n            middleDelim = html.makeNullDelimiter(options, []);\n        } else {\n            middleDelim = _delimiter2.default.sizedDelim(group.value.value, 1, options, group.mode, []);\n            middleDelim.isMiddle = { value: group.value.value, options: options };\n        }\n        return middleDelim;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var middleNode = new _mathMLTree2.default.MathNode(\"mo\", [mml.makeText(group.value.middle, group.mode)]);\n        middleNode.setAttribute(\"fence\", \"true\");\n        return middleNode;\n    }\n});\n\n},{\"../ParseError\":84,\"../buildCommon\":91,\"../buildHTML\":92,\"../buildMathML\":93,\"../defineFunction\":96,\"../delimiter\":97,\"../mathMLTree\":108,\"../utils\":115}],105:[function(require,module,exports){\n\"use strict\";\n\nvar _defineFunction = require(\"../defineFunction\");\n\nvar _defineFunction2 = _interopRequireDefault(_defineFunction);\n\nvar _buildCommon = require(\"../buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _mathMLTree = require(\"../mathMLTree\");\n\nvar _mathMLTree2 = _interopRequireDefault(_mathMLTree);\n\nvar _domTree = require(\"../domTree\");\n\nvar _domTree2 = _interopRequireDefault(_domTree);\n\nvar _buildHTML = require(\"../buildHTML\");\n\nvar html = _interopRequireWildcard(_buildHTML);\n\nvar _buildMathML = require(\"../buildMathML\");\n\nvar mml = _interopRequireWildcard(_buildMathML);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n(0, _defineFunction2.default)({\n    type: \"operatorname\",\n    names: [\"\\\\operatorname\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var body = args[0];\n        return {\n            type: \"operatorname\",\n            value: (0, _defineFunction.ordargument)(body)\n        };\n    },\n\n    htmlBuilder: function htmlBuilder(group, options) {\n        var output = [];\n        if (group.value.value.length > 0) {\n            var letter = \"\";\n            var mode = \"\";\n\n            // Consolidate Greek letter function names into symbol characters.\n            var temp = html.buildExpression(group.value.value, options, true);\n\n            // All we want from temp are the letters. With them, we'll\n            // create a text operator similar to \\tan or \\cos.\n            for (var i = 0; i < temp.length; i++) {\n                letter = temp[i].value;\n\n                // In the amsopn package, \\newmcodes@ changes four\n                // characters, *-/:’, from math operators back into text.\n                // Given what is in temp, we have to address two of them.\n                letter = letter.replace(/\\u2212/, \"-\"); // minus => hyphen\n                letter = letter.replace(/\\u2217/, \"*\");\n\n                // Use math mode for Greek letters\n                mode = /[\\u0391-\\u03D7]/.test(letter) ? \"math\" : \"text\";\n                output.push(_buildCommon2.default.mathsym(letter, mode));\n            }\n        }\n        return _buildCommon2.default.makeSpan([\"mop\"], output, options);\n    },\n\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // The steps taken here are similar to the html version.\n        var output = [];\n        if (group.value.value.length > 0) {\n            var temp = mml.buildExpression(group.value.value, options);\n\n            var word = \"\";\n            for (var i = 0; i < temp.length; i++) {\n                word += temp[i].children[0].text;\n            }\n            word = word.replace(/\\u2212/g, \"-\");\n            word = word.replace(/\\u2217/g, \"*\");\n            output = [new _mathMLTree2.default.TextNode(word)];\n        }\n        var identifier = new _mathMLTree2.default.MathNode(\"mi\", output);\n        identifier.setAttribute(\"mathvariant\", \"normal\");\n\n        var operator = new _mathMLTree2.default.MathNode(\"mo\", [mml.makeText(\"&ApplyFunction;\", \"text\")]);\n\n        return new _domTree2.default.documentFragment([identifier, operator]);\n    }\n});\n\n},{\"../buildCommon\":91,\"../buildHTML\":92,\"../buildMathML\":93,\"../defineFunction\":96,\"../domTree\":98,\"../mathMLTree\":108}],106:[function(require,module,exports){\n\"use strict\";\n\nvar _defineFunction = require(\"../defineFunction\");\n\nvar _defineFunction2 = _interopRequireDefault(_defineFunction);\n\nvar _buildCommon = require(\"../buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _mathMLTree = require(\"../mathMLTree\");\n\nvar _mathMLTree2 = _interopRequireDefault(_mathMLTree);\n\nvar _buildHTML = require(\"../buildHTML\");\n\nvar html = _interopRequireWildcard(_buildHTML);\n\nvar _buildMathML = require(\"../buildMathML\");\n\nvar mml = _interopRequireWildcard(_buildMathML);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _defineFunction2.default)({\n    type: \"phantom\",\n    names: [\"\\\\phantom\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var body = args[0];\n        return {\n            type: \"phantom\",\n            value: (0, _defineFunction.ordargument)(body)\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = html.buildExpression(group.value.value, options.withPhantom(), false);\n\n        // \\phantom isn't supposed to affect the elements it contains.\n        // See \"color\" for more details.\n        return new _buildCommon2.default.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = mml.buildExpression(group.value.value, options);\n        return new _mathMLTree2.default.MathNode(\"mphantom\", inner);\n    }\n});\n\n\n(0, _defineFunction2.default)({\n    type: \"hphantom\",\n    names: [\"\\\\hphantom\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var body = args[0];\n        return {\n            type: \"hphantom\",\n            value: (0, _defineFunction.ordargument)(body),\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var node = _buildCommon2.default.makeSpan([], [html.buildGroup(group.value.body, options.withPhantom())]);\n        node.height = 0;\n        node.depth = 0;\n        if (node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                node.children[i].height = 0;\n                node.children[i].depth = 0;\n            }\n        }\n\n        // See smash for comment re: use of makeVList\n        node = _buildCommon2.default.makeVList([{ type: \"elem\", elem: node }], \"firstBaseline\", null, options);\n\n        return node;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = mml.buildExpression(group.value.value, options);\n        var node = new _mathMLTree2.default.MathNode(\"mphantom\", inner);\n        node.setAttribute(\"height\", \"0px\");\n        return node;\n    }\n});\n\n(0, _defineFunction2.default)({\n    type: \"vphantom\",\n    names: [\"\\\\vphantom\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var body = args[0];\n        return {\n            type: \"vphantom\",\n            value: (0, _defineFunction.ordargument)(body),\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var inner = _buildCommon2.default.makeSpan([\"inner\"], [html.buildGroup(group.value.body, options.withPhantom())]);\n        var fix = _buildCommon2.default.makeSpan([\"fix\"], []);\n        return _buildCommon2.default.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = mml.buildExpression(group.value.value, options);\n        var node = new _mathMLTree2.default.MathNode(\"mphantom\", inner);\n        node.setAttribute(\"width\", \"0px\");\n        return node;\n    }\n});\n\n},{\"../buildCommon\":91,\"../buildHTML\":92,\"../buildMathML\":93,\"../defineFunction\":96,\"../mathMLTree\":108}],107:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _symbols = require(\"./symbols\");\n\nvar _symbols2 = _interopRequireDefault(_symbols);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _Token = require(\"./Token\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Provides context to macros defined by functions. Implemented by\n * MacroExpander.\n */\n\n\n/** Macro tokens (in reverse order). */\nvar builtinMacros = {};\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n\nexports.default = builtinMacros;\n\n// This function might one day accept an additional argument and do more things.\n\nfunction defineMacro(name, body) {\n    builtinMacros[name] = body;\n}\n\n//////////////////////////////////////////////////////////////////////\n// basics\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\");\ndefineMacro(\"\\\\begingroup\", \"{\");\ndefineMacro(\"\\\\endgroup\", \"}\");\n\n// We don't distinguish between math and nonmath kerns.\n// (In TeX, the mu unit works only with \\mkern.)\ndefineMacro(\"\\\\mkern\", \"\\\\kern\");\n\n// \\llap and \\rlap render their contents in text mode\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\");\n\n//////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n\n// \\def\\overset#1#2{\\binrel@{#2}\\binrel@@{\\mathop{\\kern\\z@#2}\\limits^{#1}}}\ndefineMacro(\"\\\\overset\", \"\\\\mathop{#2}\\\\limits^{#1}\");\ndefineMacro(\"\\\\underset\", \"\\\\mathop{#2}\\\\limits_{#1}\");\n\n// \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{\\\\displaystyle{#1}}\");\n\n// \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\");\n\n// AMSMath's automatic \\dots, based on \\mdots@@ macro.\nvar dotsByToken = {\n    ',': '\\\\dotsc',\n    '\\\\not': '\\\\dotsb',\n    // \\keybin@ checks for the following:\n    '+': '\\\\dotsb',\n    '=': '\\\\dotsb',\n    '<': '\\\\dotsb',\n    '>': '\\\\dotsb',\n    '-': '\\\\dotsb',\n    '*': '\\\\dotsb',\n    ':': '\\\\dotsb',\n    // Symbols whose definition starts with \\DOTSB:\n    '\\\\DOTSB': '\\\\dotsb',\n    '\\\\coprod': '\\\\dotsb',\n    '\\\\bigvee': '\\\\dotsb',\n    '\\\\bigwedge': '\\\\dotsb',\n    '\\\\biguplus': '\\\\dotsb',\n    '\\\\bigcap': '\\\\dotsb',\n    '\\\\bigcup': '\\\\dotsb',\n    '\\\\prod': '\\\\dotsb',\n    '\\\\sum': '\\\\dotsb',\n    '\\\\bigotimes': '\\\\dotsb',\n    '\\\\bigoplus': '\\\\dotsb',\n    '\\\\bigodot': '\\\\dotsb',\n    '\\\\bigsqcup': '\\\\dotsb',\n    '\\\\implies': '\\\\dotsb',\n    '\\\\impliedby': '\\\\dotsb',\n    '\\\\And': '\\\\dotsb',\n    '\\\\longrightarrow': '\\\\dotsb',\n    '\\\\Longrightarrow': '\\\\dotsb',\n    '\\\\longleftarrow': '\\\\dotsb',\n    '\\\\Longleftarrow': '\\\\dotsb',\n    '\\\\longleftrightarrow': '\\\\dotsb',\n    '\\\\Longleftrightarrow': '\\\\dotsb',\n    '\\\\mapsto': '\\\\dotsb',\n    '\\\\longmapsto': '\\\\dotsb',\n    '\\\\hookrightarrow': '\\\\dotsb',\n    '\\\\iff': '\\\\dotsb',\n    '\\\\doteq': '\\\\dotsb',\n    // Symbols whose definition starts with \\mathbin:\n    '\\\\mathbin': '\\\\dotsb',\n    '\\\\bmod': '\\\\dotsb',\n    // Symbols whose definition starts with \\mathrel:\n    '\\\\mathrel': '\\\\dotsb',\n    '\\\\relbar': '\\\\dotsb',\n    '\\\\Relbar': '\\\\dotsb',\n    '\\\\xrightarrow': '\\\\dotsb',\n    '\\\\xleftarrow': '\\\\dotsb',\n    // Symbols whose definition starts with \\DOTSI:\n    '\\\\DOTSI': '\\\\dotsi',\n    '\\\\int': '\\\\dotsi',\n    '\\\\oint': '\\\\dotsi',\n    '\\\\iint': '\\\\dotsi',\n    '\\\\iiint': '\\\\dotsi',\n    '\\\\iiiint': '\\\\dotsi',\n    '\\\\idotsint': '\\\\dotsi',\n    // Symbols whose definition starts with \\DOTSX:\n    '\\\\DOTSX': '\\\\dotsx'\n};\n\ndefineMacro(\"\\\\dots\", function (context) {\n    // TODO: If used in text mode, should expand to \\textellipsis.\n    // However, in KaTeX, \\textellipsis and \\ldots behave the same\n    // (in text mode), and it's unlikely we'd see any of the math commands\n    // that affect the behavior of \\dots when in text mode.  So fine for now\n    // (until we support \\ifmmode ... \\else ... \\fi).\n    var thedots = '\\\\dotso';\n    var next = context.expandAfterFuture().text;\n    if (next in dotsByToken) {\n        thedots = dotsByToken[next];\n    } else if (next.substr(0, 4) === '\\\\not') {\n        thedots = '\\\\dotsb';\n    } else if (next in _symbols2.default.math) {\n        if (_utils2.default.contains(['bin', 'rel'], _symbols2.default.math[next].group)) {\n            thedots = '\\\\dotsb';\n        }\n    }\n    return thedots;\n});\n\nvar spaceAfterDots = {\n    // \\rightdelim@ checks for the following:\n    ')': true,\n    ']': true,\n    '\\\\rbrack': true,\n    '\\\\}': true,\n    '\\\\rbrace': true,\n    '\\\\rangle': true,\n    '\\\\rceil': true,\n    '\\\\rfloor': true,\n    '\\\\rgroup': true,\n    '\\\\rmoustache': true,\n    '\\\\right': true,\n    '\\\\bigr': true,\n    '\\\\biggr': true,\n    '\\\\Bigr': true,\n    '\\\\Biggr': true,\n    // \\extra@ also tests for the following:\n    '$': true,\n    // \\extrap@ checks for the following:\n    ';': true,\n    '.': true,\n    ',': true\n};\n\ndefineMacro(\"\\\\dotso\", function (context) {\n    var next = context.future().text;\n    if (next in spaceAfterDots) {\n        return \"\\\\ldots\\\\,\";\n    } else {\n        return \"\\\\ldots\";\n    }\n});\n\ndefineMacro(\"\\\\dotsc\", function (context) {\n    var next = context.future().text;\n    // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n    // ';' and '.', but doesn't check for ','.\n    if (next in spaceAfterDots && next !== ',') {\n        return \"\\\\ldots\\\\,\";\n    } else {\n        return \"\\\\ldots\";\n    }\n});\n\ndefineMacro(\"\\\\cdots\", function (context) {\n    var next = context.future().text;\n    if (next in spaceAfterDots) {\n        return \"\\\\@cdots\\\\,\";\n    } else {\n        return \"\\\\@cdots\";\n    }\n});\n\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\");\n// amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\");\n\n// \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\");\n\n// http://texdoc.net/texmf-dist/doc/latex/amsmath/amsmath.pdf\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); //   \\let\\thinspace\\,\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); //   \\let\\medspace\\:\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); //   \\let\\thickspace\\;\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n\n// \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// KaTeX doesn't do line breaks, so \\hspace is the same as \\kern\ndefineMacro(\"\\\\hspace\", \"\\\\kern{#1}\");\n\n//////////////////////////////////////////////////////////////////////\n// mathtools.sty\n\n//\\providecommand\\ordinarycolon{:}\ndefineMacro(\"\\\\ordinarycolon\", \":\");\n//\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\");\n// \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\ndefineMacro(\"\\\\dblcolon\", \"\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon\");\n// \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\ndefineMacro(\"\\\\coloneqq\", \"\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=\");\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\ndefineMacro(\"\\\\Coloneqq\", \"\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=\");\n// \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\coloneq\", \"\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}\");\n// \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\Coloneq\", \"\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}\");\n// \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\ndefineMacro(\"\\\\eqqcolon\", \"=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon\");\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqqcolon\", \"=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon\");\n// \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\ndefineMacro(\"\\\\eqcolon\", \"\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon\");\n// \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqcolon\", \"\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon\");\n// \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\colonapprox\", \"\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx\");\n// \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\Colonapprox\", \"\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx\");\n// \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\colonsim\", \"\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim\");\n// \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\Colonsim\", \"\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim\");\n\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n\n// Alternate names for mathtools's macros:\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\");\n// \\colonapprox name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\");\n// \\colonsim name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\");\n\n// Additional macros, implemented by analogy with mathtools definitions:\ndefineMacro(\"\\\\simcolon\", \"\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon\");\n\n},{\"./Token\":90,\"./symbols\":112,\"./utils\":115}],108:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nvar MathNode = function () {\n    function MathNode(type, children) {\n        (0, _classCallCheck3.default)(this, MathNode);\n\n        this.type = type;\n        this.attributes = {};\n        this.children = children || [];\n    }\n\n    /**\n     * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n     * semantic content, so this is used heavily.\n     */\n\n\n    (0, _createClass3.default)(MathNode, [{\n        key: \"setAttribute\",\n        value: function setAttribute(name, value) {\n            this.attributes[name] = value;\n        }\n\n        /**\n         * Converts the math node into a MathML-namespaced DOM element.\n         */\n\n    }, {\n        key: \"toNode\",\n        value: function toNode() {\n            var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n            for (var attr in this.attributes) {\n                if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                    node.setAttribute(attr, this.attributes[attr]);\n                }\n            }\n\n            for (var i = 0; i < this.children.length; i++) {\n                node.appendChild(this.children[i].toNode());\n            }\n\n            return node;\n        }\n\n        /**\n         * Converts the math node into an HTML markup string.\n         */\n\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            var markup = \"<\" + this.type;\n\n            // Add the attributes\n            for (var attr in this.attributes) {\n                if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                    markup += \" \" + attr + \"=\\\"\";\n                    markup += _utils2.default.escape(this.attributes[attr]);\n                    markup += \"\\\"\";\n                }\n            }\n\n            markup += \">\";\n\n            for (var i = 0; i < this.children.length; i++) {\n                markup += this.children[i].toMarkup();\n            }\n\n            markup += \"</\" + this.type + \">\";\n\n            return markup;\n        }\n    }]);\n    return MathNode;\n}();\n\n/**\n * This node represents a piece of text.\n */\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\nvar TextNode = function () {\n    function TextNode(text) {\n        (0, _classCallCheck3.default)(this, TextNode);\n\n        this.text = text;\n    }\n\n    /**\n     * Converts the text node into a DOM text node.\n     */\n\n\n    (0, _createClass3.default)(TextNode, [{\n        key: \"toNode\",\n        value: function toNode() {\n            return document.createTextNode(this.text);\n        }\n\n        /**\n         * Converts the text node into HTML markup (which is just the text itself).\n         */\n\n    }, {\n        key: \"toMarkup\",\n        value: function toMarkup() {\n            return _utils2.default.escape(this.text);\n        }\n    }]);\n    return TextNode;\n}();\n\nexports.default = {\n    MathNode: MathNode,\n    TextNode: TextNode\n};\n\n},{\"./utils\":115,\"babel-runtime/helpers/classCallCheck\":8,\"babel-runtime/helpers/createClass\":9}],109:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Parser = require('./Parser');\n\nvar _Parser2 = _interopRequireDefault(_Parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n  var parser = new _Parser2.default(toParse, settings);\n\n  return parser.parse();\n}; /**\n    * Provides a single function for parsing an expression using a Parser\n    * TODO(emily): Remove this\n    */\n\nexports.default = parseTree;\n\n},{\"./Parser\":86}],110:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray2 = require(\"babel-runtime/helpers/slicedToArray\");\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _domTree = require(\"./domTree\");\n\nvar _domTree2 = _interopRequireDefault(_domTree);\n\nvar _buildCommon = require(\"./buildCommon\");\n\nvar _buildCommon2 = _interopRequireDefault(_buildCommon);\n\nvar _mathMLTree = require(\"./mathMLTree\");\n\nvar _mathMLTree2 = _interopRequireDefault(_mathMLTree);\n\nvar _utils = require(\"./utils\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\nvar stretchyCodePoint = {\n    widehat: \"^\",\n    widetilde: \"~\",\n    undertilde: \"~\",\n    overleftarrow: \"\\u2190\",\n    underleftarrow: \"\\u2190\",\n    xleftarrow: \"\\u2190\",\n    overrightarrow: \"\\u2192\",\n    underrightarrow: \"\\u2192\",\n    xrightarrow: \"\\u2192\",\n    underbrace: \"\\u23B5\",\n    overbrace: \"\\u23DE\",\n    overleftrightarrow: \"\\u2194\",\n    underleftrightarrow: \"\\u2194\",\n    xleftrightarrow: \"\\u2194\",\n    Overrightarrow: \"\\u21D2\",\n    xRightarrow: \"\\u21D2\",\n    overleftharpoon: \"\\u21BC\",\n    xleftharpoonup: \"\\u21BC\",\n    overrightharpoon: \"\\u21C0\",\n    xrightharpoonup: \"\\u21C0\",\n    xLeftarrow: \"\\u21D0\",\n    xLeftrightarrow: \"\\u21D4\",\n    xhookleftarrow: \"\\u21A9\",\n    xhookrightarrow: \"\\u21AA\",\n    xmapsto: \"\\u21A6\",\n    xrightharpoondown: \"\\u21C1\",\n    xleftharpoondown: \"\\u21BD\",\n    xrightleftharpoons: \"\\u21CC\",\n    xleftrightharpoons: \"\\u21CB\",\n    xtwoheadleftarrow: \"\\u219E\",\n    xtwoheadrightarrow: \"\\u21A0\",\n    xLongequal: \"=\",\n    xtofrom: \"\\u21C4\"\n};\n\nvar mathMLnode = function mathMLnode(label) {\n    var node = new _mathMLTree2.default.MathNode(\"mo\", [new _mathMLTree2.default.TextNode(stretchyCodePoint[label.substr(1)])]);\n    node.setAttribute(\"stretchy\", \"true\");\n    return node;\n};\n\n// Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n\n//    The SVG typically contains a very long (400 em) arrow.\n\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\nvar katexImagesData = {\n    //   path(s), minWidth, height, align\n    overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n    overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n    underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n    underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n    xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n    xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n    Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n    xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n    xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n    overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n    xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n    xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n    overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n    xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n    xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n    xLongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n    xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n    xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n\n    overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n    overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n    underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n    underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n    xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n    xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n    xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n    xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n    xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n    xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n    overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n    underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n    overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n    undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n    xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n    xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528]\n};\n\nvar groupLength = function groupLength(arg) {\n    if (arg.type === \"ordgroup\") {\n        return arg.value.length;\n    } else {\n        return 1;\n    }\n};\n\nvar svgSpan = function svgSpan(group, options) {\n    // Create a span with inline SVG for the element.\n    var label = group.value.label.substr(1);\n    var attributes = [];\n    var height = void 0;\n    var viewBoxWidth = 400000; // default\n    var viewBoxHeight = 0;\n    var minWidth = 0;\n    var path = void 0;\n    var paths = void 0;\n    var pathName = void 0;\n    var svgNode = void 0;\n    var span = void 0;\n\n    if (_utils2.default.contains([\"widehat\", \"widetilde\", \"undertilde\"], label)) {\n        // There are four SVG images available for each function.\n        // Choose a taller image when there are more characters.\n        var numChars = groupLength(group.value.base);\n        var _viewBoxHeight = void 0;\n\n        if (numChars > 5) {\n            _viewBoxHeight = label === \"widehat\" ? 420 : 312;\n            viewBoxWidth = label === \"widehat\" ? 2364 : 2340;\n            // Next get the span height, in 1000 ems\n            height = label === \"widehat\" ? 0.42 : 0.34;\n            pathName = (label === \"widehat\" ? \"widehat\" : \"tilde\") + \"4\";\n        } else {\n            var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n            if (label === \"widehat\") {\n                viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n                _viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n                height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n                pathName = \"widehat\" + imgIndex;\n            } else {\n                viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n                _viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n                height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n                pathName = \"tilde\" + imgIndex;\n            }\n        }\n        path = new _domTree2.default.pathNode(pathName);\n        attributes.push([\"width\", \"100%\"]);\n        attributes.push([\"height\", height + \"em\"]);\n        attributes.push([\"viewBox\", \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight]);\n        attributes.push([\"preserveAspectRatio\", \"none\"]);\n\n        svgNode = new _domTree2.default.svgNode([path], attributes);\n        span = _buildCommon2.default.makeSpan([], [svgNode], options);\n    } else {\n        var widthClass = void 0;\n        var align = void 0;\n        var spans = [];\n\n        var _katexImagesData$labe = (0, _slicedToArray3.default)(katexImagesData[label], 4);\n\n        paths = _katexImagesData$labe[0];\n        minWidth = _katexImagesData$labe[1];\n        viewBoxHeight = _katexImagesData$labe[2];\n        align = _katexImagesData$labe[3];\n\n        var numSvgChildren = paths.length;\n        height = viewBoxHeight / 1000;\n\n        for (var i = 0; i < numSvgChildren; i++) {\n            path = new _domTree2.default.pathNode(paths[i]);\n\n            attributes = [[\"width\", \"400em\"], [\"height\", height + \"em\"]];\n            attributes.push([\"viewBox\", \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight]);\n\n            if (numSvgChildren === 2) {\n                widthClass = [\"halfarrow-left\", \"halfarrow-right\"][i];\n                align = [\"xMinYMin\", \"xMaxYMin\"][i];\n            } else if (numSvgChildren === 3) {\n                widthClass = [\"brace-left\", \"brace-center\", \"brace-right\"][i];\n                align = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"][i];\n            }\n\n            attributes.push([\"preserveAspectRatio\", align + \" slice\"]);\n            svgNode = new _domTree2.default.svgNode([path], attributes);\n\n            if (numSvgChildren === 1) {\n                span = _buildCommon2.default.makeSpan([\"hide-tail\"], [svgNode], options);\n            } else {\n                span = _buildCommon2.default.makeSpan([widthClass], [svgNode], options);\n                span.style.height = height + \"em\";\n                spans.push(span);\n            }\n        }\n\n        if (numSvgChildren > 1) {\n            span = _buildCommon2.default.makeSpan([\"stretchy\"], spans, options);\n        }\n    }\n\n    // Note that we are returning span.depth = 0.\n    // Any adjustments relative to the baseline must be done in buildHTML.\n    span.height = height;\n    span.style.height = height + \"em\";\n    if (minWidth > 0) {\n        span.style.minWidth = minWidth + \"em\";\n    }\n\n    return span;\n};\n\nvar encloseSpan = function encloseSpan(inner, label, pad, options) {\n    // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n    var img = void 0;\n    var totalHeight = inner.height + inner.depth + 2 * pad;\n\n    if (/(fbox)|(color)/.test(label)) {\n        img = _buildCommon2.default.makeSpan([\"stretchy\", label], [], options);\n\n        if (label === \"fbox\" && options.color) {\n            img.style.borderColor = options.getColor();\n        }\n    } else {\n        // \\cancel, \\bcancel, or \\xcancel\n        // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n        // its stroke-width will not vary with span area.\n\n        var attributes = [[\"x1\", \"0\"]];\n        var lines = [];\n\n        if (label !== \"cancel\") {\n            attributes.push([\"y1\", \"0\"]);\n            attributes.push([\"x2\", \"100%\"]);\n            attributes.push([\"y2\", \"100%\"]);\n            attributes.push([\"stroke-width\", \"0.046em\"]);\n            lines.push(new _domTree2.default.lineNode(attributes));\n        }\n\n        if (label === \"xcancel\") {\n            attributes = [[\"x1\", \"0\"]]; // start a second line.\n        }\n\n        if (label !== \"bcancel\") {\n            attributes.push([\"y1\", \"100%\"]);\n            attributes.push([\"x2\", \"100%\"]);\n            attributes.push([\"y2\", \"0\"]);\n            attributes.push([\"stroke-width\", \"0.046em\"]);\n            lines.push(new _domTree2.default.lineNode(attributes));\n        }\n\n        attributes = [[\"width\", \"100%\"], [\"height\", totalHeight + \"em\"]];\n        var svgNode = new _domTree2.default.svgNode(lines, attributes);\n\n        img = _buildCommon2.default.makeSpan([], [svgNode], options);\n    }\n\n    img.height = totalHeight;\n    img.style.height = totalHeight + \"em\";\n\n    return img;\n};\n\nexports.default = {\n    encloseSpan: encloseSpan,\n    mathMLnode: mathMLnode,\n    svgSpan: svgSpan\n};\n\n},{\"./buildCommon\":91,\"./domTree\":98,\"./mathMLTree\":108,\"./utils\":115,\"babel-runtime/helpers/slicedToArray\":10}],111:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar path = {\n    // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n    sqrtMain: \"M95 622c-2.667 0-7.167-2.667-13.5\\n-8S72 604 72 600c0-2 .333-3.333 1-4 1.333-2.667 23.833-20.667 67.5-54s\\n65.833-50.333 66.5-51c1.333-1.333 3-2 5-2 4.667 0 8.667 3.333 12 10l173\\n378c.667 0 35.333-71 104-213s137.5-285 206.5-429S812 17.333 812 14c5.333\\n-9.333 12-14 20-14h399166v40H845.272L620 507 385 993c-2.667 4.667-9 7-19\\n7-6 0-10-1-12-3L160 575l-65 47zM834 0h399166v40H845z\",\n\n    // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n    sqrtSize1: \"M263 601c.667 0 18 39.667 52 119s68.167\\n 158.667 102.5 238 51.833 119.333 52.5 120C810 373.333 980.667 17.667 982 11\\nc4.667-7.333 11-11 19-11h398999v40H1012.333L741 607c-38.667 80.667-84 175-136\\n 283s-89.167 185.333-111.5 232-33.833 70.333-34.5 71c-4.667 4.667-12.333 7-23\\n 7l-12-1-109-253c-72.667-168-109.333-252-110-252-10.667 8-22 16.667-34 26-22\\n 17.333-33.333 26-34 26l-26-26 76-59 76-60zM1001 0h398999v40H1012z\",\n\n    // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n    sqrtSize2: \"M1001 0h398999v40H1013.084S929.667 308 749\\n 880s-277 876.333-289 913c-4.667 4.667-12.667 7-24 7h-12c-1.333-3.333-3.667\\n-11.667-7-25-35.333-125.333-106.667-373.333-214-744-10 12-21 25-33 39l-32 39\\nc-6-5.333-15-14-27-26l25-30c26.667-32.667 52-63 76-91l52-60 208 722c56-175.333\\n 126.333-397.333 211-666s153.833-488.167 207.5-658.5C944.167 129.167 975 32.667\\n 983 10c4-6.667 10-10 18-10zm0 0h398999v40H1013z\",\n\n    // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n    sqrtSize3: \"M424 2398c-1.333-.667-38.5-172-111.5-514 S202.667 1370.667 202\\n 1370c0-2-10.667 14.333-32 49-4.667 7.333-9.833 15.667-15.5 25s-9.833 16-12.5\\n 20l-5 7c-4-3.333-8.333-7.667-13-13l-13-13 76-122 77-121 209 968c0-2 84.667\\n-361.667 254-1079C896.333 373.667 981.667 13.333 983 10c4-6.667 10-10 18-10\\nh398999v40H1014.622S927.332 418.667 742 1206c-185.333 787.333-279.333 1182.333\\n-282 1185-2 6-10 9-24 9-8 0-12-.667-12-2zM1001 0h398999v40H1014z\",\n\n    // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n    sqrtSize4: \"M473 2713C812.333 913.667 982.333 13 983 11c3.333-7.333 9.333\\n-11 18-11h399110v40H1017.698S927.168 518 741.5 1506C555.833 2494 462 2989 460\\n 2991c-2 6-10 9-24 9-8 0-12-.667-12-2s-5.333-32-16-92c-50.667-293.333-119.667\\n-693.333-207-1200 0-1.333-5.333 8.667-16 30l-32 64-16 33-26-26 76-153 77-151\\nc.667.667 35.667 202 105 604 67.333 400.667 102 602.667 104 606z\\nM1001 0h398999v40H1017z\",\n\n    // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n    doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n\n    // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n    doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n\n    // leftarrow is from glyph U+2190 in font KaTeX Main\n    leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n\n    // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n    leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n\n    leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n\n    // overgroup is from the MnSymbol package (public domain)\n    leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n\n    leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n\n    // Harpoons are from glyph U+21BD in font KaTeX Main\n    leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n\n    leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n\n    leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n\n    leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n\n    // hook is from glyph U+21A9 in font KaTeX Main\n    lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n\n    leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n\n    leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n\n    // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n    leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n\n    longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n\n    midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n\n    midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n\n    rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n\n    rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n\n    rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n\n    rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n\n    rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n\n    rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n\n    rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n\n    rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n\n    rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n\n    righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n\n    rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n\n    rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n\n    // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n    twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n\n    twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n\n    // tilde1 is a modified version of a glyph from the MnSymbol package\n    tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n\n    // ditto tilde2, tilde3, & tilde4\n    tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n\n    tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n\n    tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n\n    // widehat1 is a modified version of a glyph from the MnSymbol package\n    widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n\n    // ditto widehat2, widehat3, & widehat4\n    widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\"\n};\n\nexports.default = { path: path };\n\n},{}],112:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nvar symbols = {\n    \"math\": {},\n    \"text\": {}\n};\nexports.default = symbols;\n\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n    symbols[mode][name] = { font: font, group: group, replace: replace };\n\n    if (acceptUnicodeChar && replace) {\n        symbols[mode][replace] = symbols[mode][name];\n    }\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nvar math = \"math\";\nvar text = \"text\";\n\n// fonts:\nvar main = \"main\";\nvar ams = \"ams\";\n\n// groups:\nvar accent = \"accent\";\nvar bin = \"bin\";\nvar close = \"close\";\nvar inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op\";\nvar open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\");\ndefineSymbol(math, main, rel, \"\\u227A\", \"\\\\prec\");\ndefineSymbol(math, main, rel, \"\\u227B\", \"\\\\succ\");\ndefineSymbol(math, main, rel, \"\\u223C\", \"\\\\sim\");\ndefineSymbol(math, main, rel, \"\\u22A5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2AAF\", \"\\\\preceq\");\ndefineSymbol(math, main, rel, \"\\u2AB0\", \"\\\\succeq\");\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\");\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\");\ndefineSymbol(math, main, rel, \"\\u226A\", \"\\\\ll\");\ndefineSymbol(math, main, rel, \"\\u226B\", \"\\\\gg\");\ndefineSymbol(math, main, rel, \"\\u224D\", \"\\\\asymp\");\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22C8\", \"\\\\bowtie\");\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\");\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\");\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\");\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\");\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\");\ndefineSymbol(math, main, rel, \"\\u220B\", \"\\\\ni\");\ndefineSymbol(math, main, rel, \"\\u221D\", \"\\\\propto\");\ndefineSymbol(math, main, rel, \"\\u22A2\", \"\\\\vdash\");\ndefineSymbol(math, main, rel, \"\\u22A3\", \"\\\\dashv\");\ndefineSymbol(math, main, rel, \"\\u220B\", \"\\\\owns\");\n\n// Punctuation\ndefineSymbol(math, main, punct, \".\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22C5\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(math, main, textord, \"#\", \"\\\\#\");\ndefineSymbol(text, main, textord, \"#\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"&\", \"\\\\&\");\ndefineSymbol(text, main, textord, \"&\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\");\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\");\ndefineSymbol(math, main, textord, \"\\u210F\", \"\\\\hbar\");\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\");\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\");\ndefineSymbol(math, main, textord, \"\\u266D\", \"\\\\flat\");\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\");\ndefineSymbol(math, main, textord, \"\\u266E\", \"\\\\natural\");\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\");\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\");\ndefineSymbol(math, main, textord, \"\\u266F\", \"\\\\sharp\");\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\");\ndefineSymbol(math, main, textord, \"\\u211C\", \"\\\\Re\");\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\");\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\");\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\");\n\n// Math and Text\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text, main, textord, \"\\u2020\", \"\\\\textdaggerdbl\");\n\n// Large Delimiters\ndefineSymbol(math, main, close, \"\\u23B1\", \"\\\\rmoustache\");\ndefineSymbol(math, main, open, \"\\u23B0\", \"\\\\lmoustache\");\ndefineSymbol(math, main, close, \"\\u27EF\", \"\\\\rgroup\");\ndefineSymbol(math, main, open, \"\\u27EE\", \"\\\\lgroup\");\n\n// Binary Operators\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\");\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\");\ndefineSymbol(math, main, bin, \"\\u228E\", \"\\\\uplus\");\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\");\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\");\ndefineSymbol(math, main, bin, \"\\u25EF\", \"\\\\bigcirc\");\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\");\ndefineSymbol(math, main, bin, \"\\u2A3F\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"&\", \"\\\\And\"); // from amsmath\n\n// Arrow Symbols\ndefineSymbol(math, main, rel, \"\\u27F5\", \"\\\\longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21D0\", \"\\\\Leftarrow\");\ndefineSymbol(math, main, rel, \"\\u27F8\", \"\\\\Longleftarrow\");\ndefineSymbol(math, main, rel, \"\\u27F6\", \"\\\\longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21D2\", \"\\\\Rightarrow\");\ndefineSymbol(math, main, rel, \"\\u27F9\", \"\\\\Longrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27F7\", \"\\\\longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21D4\", \"\\\\Leftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u27FA\", \"\\\\Longleftrightarrow\");\ndefineSymbol(math, main, rel, \"\\u21A6\", \"\\\\mapsto\");\ndefineSymbol(math, main, rel, \"\\u27FC\", \"\\\\longmapsto\");\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\");\ndefineSymbol(math, main, rel, \"\\u21A9\", \"\\\\hookleftarrow\");\ndefineSymbol(math, main, rel, \"\\u21AA\", \"\\\\hookrightarrow\");\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\");\ndefineSymbol(math, main, rel, \"\\u21BC\", \"\\\\leftharpoonup\");\ndefineSymbol(math, main, rel, \"\\u21C0\", \"\\\\rightharpoonup\");\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\");\ndefineSymbol(math, main, rel, \"\\u21BD\", \"\\\\leftharpoondown\");\ndefineSymbol(math, main, rel, \"\\u21C1\", \"\\\\rightharpoondown\");\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\");\ndefineSymbol(math, main, rel, \"\\u21CC\", \"\\\\rightleftharpoons\");\n\n// AMS Negated Binary Relations\ndefineSymbol(math, ams, rel, \"\\u226E\", \"\\\\nless\");\ndefineSymbol(math, ams, rel, \"\\uE010\", \"\\\\nleqslant\");\ndefineSymbol(math, ams, rel, \"\\uE011\", \"\\\\nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2A87\", \"\\\\lneq\");\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\");\ndefineSymbol(math, ams, rel, \"\\uE00C\", \"\\\\lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22E6\", \"\\\\lnsim\");\ndefineSymbol(math, ams, rel, \"\\u2A89\", \"\\\\lnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\");\ndefineSymbol(math, ams, rel, \"\\u22E0\", \"\\\\npreceq\");\ndefineSymbol(math, ams, rel, \"\\u22E8\", \"\\\\precnsim\");\ndefineSymbol(math, ams, rel, \"\\u2AB9\", \"\\\\precnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\");\ndefineSymbol(math, ams, rel, \"\\uE006\", \"\\\\nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\");\ndefineSymbol(math, ams, rel, \"\\u22AC\", \"\\\\nvdash\");\ndefineSymbol(math, ams, rel, \"\\u22AD\", \"\\\\nvDash\");\ndefineSymbol(math, ams, rel, \"\\u22EA\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22EC\", \"\\\\ntrianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u228A\", \"\\\\subsetneq\");\ndefineSymbol(math, ams, rel, \"\\uE01A\", \"\\\\varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2ACB\", \"\\\\subsetneqq\");\ndefineSymbol(math, ams, rel, \"\\uE017\", \"\\\\varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226F\", \"\\\\ngtr\");\ndefineSymbol(math, ams, rel, \"\\uE00F\", \"\\\\ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\uE00E\", \"\\\\ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2A88\", \"\\\\gneq\");\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\");\ndefineSymbol(math, ams, rel, \"\\uE00D\", \"\\\\gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22E7\", \"\\\\gnsim\");\ndefineSymbol(math, ams, rel, \"\\u2A8A\", \"\\\\gnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\");\ndefineSymbol(math, ams, rel, \"\\u22E1\", \"\\\\nsucceq\");\ndefineSymbol(math, ams, rel, \"\\u22E9\", \"\\\\succnsim\");\ndefineSymbol(math, ams, rel, \"\\u2ABA\", \"\\\\succnapprox\");\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\");\ndefineSymbol(math, ams, rel, \"\\uE007\", \"\\\\nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\");\ndefineSymbol(math, ams, rel, \"\\u22AF\", \"\\\\nVDash\");\ndefineSymbol(math, ams, rel, \"\\u22EB\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ED\", \"\\\\ntrianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\uE018\", \"\\\\nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228B\", \"\\\\supsetneq\");\ndefineSymbol(math, ams, rel, \"\\uE01B\", \"\\\\varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2ACC\", \"\\\\supsetneqq\");\ndefineSymbol(math, ams, rel, \"\\uE019\", \"\\\\varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22AE\", \"\\\\nVdash\");\ndefineSymbol(math, ams, rel, \"\\u2AB5\", \"\\\\precneqq\");\ndefineSymbol(math, ams, rel, \"\\u2AB6\", \"\\\\succneqq\");\ndefineSymbol(math, ams, rel, \"\\uE016\", \"\\\\nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22B4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22B5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(math, ams, rel, \"\\u219A\", \"\\\\nleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219B\", \"\\\\nrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21CD\", \"\\\\nLeftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21CF\", \"\\\\nRightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21AE\", \"\\\\nleftrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21CE\", \"\\\\nLeftrightarrow\");\n\n// AMS Misc\ndefineSymbol(math, ams, rel, \"\\u25B3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210F\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25BD\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25CA\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24C8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(text, ams, textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\");\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\");\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\");\ndefineSymbol(math, ams, textord, \"k\", \"\\\\Bbbk\");\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25B2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25BC\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25A0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29EB\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\");\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\");\ndefineSymbol(math, ams, textord, \"\\xF0\", \"\\\\eth\");\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25A1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25A1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25CA\", \"\\\\Diamond\");\ndefineSymbol(math, ams, textord, \"\\xA5\", \"\\\\yen\");\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\");\ndefineSymbol(text, ams, textord, \"\\u2713\", \"\\\\checkmark\");\n\n// AMS Hebrew\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\");\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\");\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\");\n\n// AMS Greek\ndefineSymbol(math, ams, textord, \"\\u03DD\", \"\\\\digamma\");\ndefineSymbol(math, ams, textord, \"\\u03F0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(math, ams, open, \"\\u250C\", \"\\\\ulcorner\");\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\");\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\");\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\");\n\n// AMS Binary Relations\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\");\ndefineSymbol(math, ams, rel, \"\\u2A7D\", \"\\\\leqslant\");\ndefineSymbol(math, ams, rel, \"\\u2A95\", \"\\\\eqslantless\");\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\");\ndefineSymbol(math, ams, rel, \"\\u2A85\", \"\\\\lessapprox\");\ndefineSymbol(math, ams, rel, \"\\u224A\", \"\\\\approxeq\");\ndefineSymbol(math, ams, bin, \"\\u22D6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22D8\", \"\\\\lll\");\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\");\ndefineSymbol(math, ams, rel, \"\\u22DA\", \"\\\\lesseqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2A8B\", \"\\\\lesseqqgtr\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\");\ndefineSymbol(math, ams, rel, \"\\u223D\", \"\\\\backsim\");\ndefineSymbol(math, ams, rel, \"\\u22CD\", \"\\\\backsimeq\");\ndefineSymbol(math, ams, rel, \"\\u2AC5\", \"\\\\subseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22D0\", \"\\\\Subset\");\ndefineSymbol(math, ams, rel, \"\\u228F\", \"\\\\sqsubset\");\ndefineSymbol(math, ams, rel, \"\\u227C\", \"\\\\preccurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22DE\", \"\\\\curlyeqprec\");\ndefineSymbol(math, ams, rel, \"\\u227E\", \"\\\\precsim\");\ndefineSymbol(math, ams, rel, \"\\u2AB7\", \"\\\\precapprox\");\ndefineSymbol(math, ams, rel, \"\\u22B2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22B4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22A8\", \"\\\\vDash\");\ndefineSymbol(math, ams, rel, \"\\u22AA\", \"\\\\Vvdash\");\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224F\", \"\\\\bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u224E\", \"\\\\Bumpeq\");\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\");\ndefineSymbol(math, ams, rel, \"\\u2A7E\", \"\\\\geqslant\");\ndefineSymbol(math, ams, rel, \"\\u2A96\", \"\\\\eqslantgtr\");\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\");\ndefineSymbol(math, ams, rel, \"\\u2A86\", \"\\\\gtrapprox\");\ndefineSymbol(math, ams, bin, \"\\u22D7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22D9\", \"\\\\ggg\");\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\");\ndefineSymbol(math, ams, rel, \"\\u22DB\", \"\\\\gtreqless\");\ndefineSymbol(math, ams, rel, \"\\u2A8C\", \"\\\\gtreqqless\");\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\");\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\");\ndefineSymbol(math, ams, rel, \"\\u225C\", \"\\\\triangleq\");\ndefineSymbol(math, ams, rel, \"\\u223C\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2AC6\", \"\\\\supseteqq\");\ndefineSymbol(math, ams, rel, \"\\u22D1\", \"\\\\Supset\");\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\");\ndefineSymbol(math, ams, rel, \"\\u227D\", \"\\\\succcurlyeq\");\ndefineSymbol(math, ams, rel, \"\\u22DF\", \"\\\\curlyeqsucc\");\ndefineSymbol(math, ams, rel, \"\\u227F\", \"\\\\succsim\");\ndefineSymbol(math, ams, rel, \"\\u2AB8\", \"\\\\succapprox\");\ndefineSymbol(math, ams, rel, \"\\u22B3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22B5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22A9\", \"\\\\Vdash\");\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226C\", \"\\\\between\");\ndefineSymbol(math, ams, rel, \"\\u22D4\", \"\\\\pitchfork\");\ndefineSymbol(math, ams, rel, \"\\u221D\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25C0\", \"\\\\blacktriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\");\ndefineSymbol(math, ams, rel, \"\\u220D\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25B6\", \"\\\\blacktriangleright\");\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\");\ndefineSymbol(math, ams, rel, \"\\u22D8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22D9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22B2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22B3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\");\ndefineSymbol(math, main, rel, \"\\u22C8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\");\n\n// AMS Binary Operators\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\");\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22D2\", \"\\\\Cap\");\ndefineSymbol(math, ams, bin, \"\\u22D3\", \"\\\\Cup\");\ndefineSymbol(math, ams, bin, \"\\u2A5E\", \"\\\\doublebarwedge\");\ndefineSymbol(math, ams, bin, \"\\u229F\", \"\\\\boxminus\");\ndefineSymbol(math, ams, bin, \"\\u229E\", \"\\\\boxplus\");\ndefineSymbol(math, ams, bin, \"\\u22C7\", \"\\\\divideontimes\");\ndefineSymbol(math, ams, bin, \"\\u22C9\", \"\\\\ltimes\");\ndefineSymbol(math, ams, bin, \"\\u22CA\", \"\\\\rtimes\");\ndefineSymbol(math, ams, bin, \"\\u22CB\", \"\\\\leftthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22CC\", \"\\\\rightthreetimes\");\ndefineSymbol(math, ams, bin, \"\\u22CF\", \"\\\\curlywedge\");\ndefineSymbol(math, ams, bin, \"\\u22CE\", \"\\\\curlyvee\");\ndefineSymbol(math, ams, bin, \"\\u229D\", \"\\\\circleddash\");\ndefineSymbol(math, ams, bin, \"\\u229B\", \"\\\\circledast\");\ndefineSymbol(math, ams, bin, \"\\u22C5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22BA\", \"\\\\intercal\");\ndefineSymbol(math, ams, bin, \"\\u22D2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22D3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22A0\", \"\\\\boxtimes\");\n\n// AMS Arrows\ndefineSymbol(math, ams, rel, \"\\u21E2\", \"\\\\dashrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21E0\", \"\\\\dashleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21C7\", \"\\\\leftleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21C6\", \"\\\\leftrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21DA\", \"\\\\Lleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u219E\", \"\\\\twoheadleftarrow\");\ndefineSymbol(math, ams, rel, \"\\u21A2\", \"\\\\leftarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21AB\", \"\\\\looparrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21CB\", \"\\\\leftrightharpoons\");\ndefineSymbol(math, ams, rel, \"\\u21B6\", \"\\\\curvearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21BA\", \"\\\\circlearrowleft\");\ndefineSymbol(math, ams, rel, \"\\u21B0\", \"\\\\Lsh\");\ndefineSymbol(math, ams, rel, \"\\u21C8\", \"\\\\upuparrows\");\ndefineSymbol(math, ams, rel, \"\\u21BF\", \"\\\\upharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u21C3\", \"\\\\downharpoonleft\");\ndefineSymbol(math, ams, rel, \"\\u22B8\", \"\\\\multimap\");\ndefineSymbol(math, ams, rel, \"\\u21AD\", \"\\\\leftrightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21C9\", \"\\\\rightrightarrows\");\ndefineSymbol(math, ams, rel, \"\\u21C4\", \"\\\\rightleftarrows\");\ndefineSymbol(math, ams, rel, \"\\u21A0\", \"\\\\twoheadrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21A3\", \"\\\\rightarrowtail\");\ndefineSymbol(math, ams, rel, \"\\u21AC\", \"\\\\looparrowright\");\ndefineSymbol(math, ams, rel, \"\\u21B7\", \"\\\\curvearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21BB\", \"\\\\circlearrowright\");\ndefineSymbol(math, ams, rel, \"\\u21B1\", \"\\\\Rsh\");\ndefineSymbol(math, ams, rel, \"\\u21CA\", \"\\\\downdownarrows\");\ndefineSymbol(math, ams, rel, \"\\u21BE\", \"\\\\upharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21C2\", \"\\\\downharpoonright\");\ndefineSymbol(math, ams, rel, \"\\u21DD\", \"\\\\rightsquigarrow\");\ndefineSymbol(math, ams, rel, \"\\u21DD\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21DB\", \"\\\\Rrightarrow\");\ndefineSymbol(math, ams, rel, \"\\u21BE\", \"\\\\restriction\");\n\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\");\ndefineSymbol(math, main, textord, \"\\u221E\", \"\\\\infty\");\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25B3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039B\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039E\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03A0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03A3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03A5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03A6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03A8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03A9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"\\xAC\", \"\\\\neg\");\ndefineSymbol(math, main, textord, \"\\xAC\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22A4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22A5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03B1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03B2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03B3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03B4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03F5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03B6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03B7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03B8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03B9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03BA\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03BB\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03BC\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03BD\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03BE\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03BF\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03C0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03C1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03C3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03C4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03C5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03D5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03C7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03C8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03C9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03B5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03D1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03D6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03F1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03C2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03C6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22C5\", \"\\\\cdot\");\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\xF7\", \"\\\\div\");\ndefineSymbol(math, main, bin, \"\\xB1\", \"\\\\pm\");\ndefineSymbol(math, main, bin, \"\\xD7\", \"\\\\times\");\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\");\ndefineSymbol(math, main, bin, \"\\u222A\", \"\\\\cup\");\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\");\ndefineSymbol(math, main, textord, \"\\u221A\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"(\", \"(\");\ndefineSymbol(math, main, open, \"[\", \"[\");\ndefineSymbol(math, main, open, \"\\u27E8\", \"\\\\langle\");\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \")\", \")\");\ndefineSymbol(math, main, close, \"]\", \"]\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27E9\", \"\\\\rangle\");\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \"<\", \"<\");\ndefineSymbol(math, main, rel, \">\", \">\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\");\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\");\ndefineSymbol(math, main, rel, \"\\u2209\", \"\\\\notin\");\ndefineSymbol(math, main, rel, \"\\u0338\", \"\\\\not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\");\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\");\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\");\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\");\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\");\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\");\ndefineSymbol(math, main, rel, \"\\u22A8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\");\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\ne\");\ndefineSymbol(math, main, rel, \"\\u2260\", \"\\\\neq\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\");\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\");\ndefineSymbol(math, main, spacing, null, \"\\\\!\");\ndefineSymbol(math, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(math, main, spacing, null, \"\\\\,\");\ndefineSymbol(math, main, spacing, null, \"\\\\:\");\ndefineSymbol(math, main, spacing, null, \"\\\\;\");\ndefineSymbol(math, main, spacing, null, \"\\\\enspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\qquad\");\ndefineSymbol(math, main, spacing, null, \"\\\\quad\");\ndefineSymbol(math, main, spacing, \"\\xA0\", \"\\\\space\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, main, punct, \":\", \"\\\\colon\");\ndefineSymbol(math, ams, bin, \"\\u22BC\", \"\\\\barwedge\");\ndefineSymbol(math, ams, bin, \"\\u22BB\", \"\\\\veebar\");\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\");\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\");\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\");\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\");\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\");\ndefineSymbol(math, ams, bin, \"\\u229A\", \"\\\\circledcirc\");\ndefineSymbol(math, ams, bin, \"\\u22A1\", \"\\\\boxdot\");\ndefineSymbol(math, main, bin, \"\\u25B3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25BD\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22C4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22C6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25C3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25B9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(text, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(text, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\");\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\");\ndefineSymbol(text, main, textord, \"<\", \"\\\\textless\"); // in T1 fontenc\ndefineSymbol(text, main, textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\ndefineSymbol(math, main, open, \"\\u230A\", \"\\\\lfloor\");\ndefineSymbol(math, main, close, \"\\u230B\", \"\\\\rfloor\");\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\");\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\");\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(text, main, textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(text, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\");\ndefineSymbol(math, main, rel, \"\\u21D1\", \"\\\\Uparrow\");\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\");\ndefineSymbol(math, main, rel, \"\\u21D3\", \"\\\\Downarrow\");\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\");\ndefineSymbol(math, main, rel, \"\\u21D5\", \"\\\\Updownarrow\");\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22C1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22C0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2A04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22C2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22C3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222B\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222B\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222C\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222D\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220F\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2A02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2A01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2A00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222E\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u2A06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222B\", \"\\\\smallint\");\ndefineSymbol(text, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22EF\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22F1\", \"\\\\ddots\", true);\ndefineSymbol(math, main, textord, \"\\u22EE\", \"\\\\vdots\", true);\ndefineSymbol(math, main, accent, \"\\xB4\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"`\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\xA8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"~\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\xAF\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02D8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02C7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"^\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20D7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02D9\", \"\\\\dot\");\ndefineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\");\ndefineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\");\ndefineSymbol(text, main, accent, \"\\u02CA\", \"\\\\'\"); // acute\ndefineSymbol(text, main, accent, \"\\u02CB\", \"\\\\`\"); // grave\ndefineSymbol(text, main, accent, \"\\u02C6\", \"\\\\^\"); // circumflex\ndefineSymbol(text, main, accent, \"\\u02DC\", \"\\\\~\"); // tilde\ndefineSymbol(text, main, accent, \"\\u02C9\", \"\\\\=\"); // macron\ndefineSymbol(text, main, accent, \"\\u02D8\", \"\\\\u\"); // breve\ndefineSymbol(text, main, accent, \"\\u02D9\", \"\\\\.\"); // dot above\ndefineSymbol(text, main, accent, \"\\u02DA\", \"\\\\r\"); // ring above\ndefineSymbol(text, main, accent, \"\\u02C7\", \"\\\\v\"); // caron\ndefineSymbol(text, main, accent, \"\\xA8\", '\\\\\"'); // diaresis\ndefineSymbol(text, main, accent, \"\\u030B\", \"\\\\H\"); // double acute\n\ndefineSymbol(text, main, textord, \"\\u2013\", \"--\");\ndefineSymbol(text, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text, main, textord, \"\\u2014\", \"---\");\ndefineSymbol(text, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(text, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text, main, textord, \"\\u2019\", \"'\");\ndefineSymbol(text, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text, main, textord, \"\\u201C\", \"``\");\ndefineSymbol(text, main, textord, \"\\u201C\", \"\\\\textquotedblleft\");\ndefineSymbol(text, main, textord, \"\\u201D\", \"''\");\ndefineSymbol(text, main, textord, \"\\u201D\", \"\\\\textquotedblright\");\ndefineSymbol(math, main, textord, \"\\xB0\", \"\\\\degree\");\ndefineSymbol(text, main, textord, \"\\xB0\", \"\\\\degree\");\n// TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\ndefineSymbol(math, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(math, main, mathord, \"\\xA3\", \"\\\\mathsterling\");\ndefineSymbol(text, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(text, main, mathord, \"\\xA3\", \"\\\\textsterling\");\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text, ams, textord, \"\\u2720\", \"\\\\maltese\");\n\ndefineSymbol(text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(text, main, spacing, \"\\xA0\", \" \");\ndefineSymbol(text, main, spacing, \"\\xA0\", \"~\");\n\n// There are lots of symbols which are the same, so we add them in afterwards.\n\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (var i = 0; i < mathTextSymbols.length; i++) {\n    var ch = mathTextSymbols.charAt(i);\n    defineSymbol(math, main, textord, ch, ch);\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\nfor (var _i = 0; _i < textSymbols.length; _i++) {\n    var _ch = textSymbols.charAt(_i);\n    defineSymbol(text, main, textord, _ch, _ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nfor (var _i2 = 0; _i2 < letters.length; _i2++) {\n    var _ch2 = letters.charAt(_i2);\n    defineSymbol(math, main, mathord, _ch2, _ch2);\n    defineSymbol(text, main, textord, _ch2, _ch2);\n}\n\n// Latin-1 letters\nfor (var _i3 = 0x00C0; _i3 <= 0x00D6; _i3++) {\n    var _ch3 = String.fromCharCode(_i3);\n    defineSymbol(math, main, mathord, _ch3, _ch3);\n    defineSymbol(text, main, textord, _ch3, _ch3);\n}\n\nfor (var _i4 = 0x00D8; _i4 <= 0x00F6; _i4++) {\n    var _ch4 = String.fromCharCode(_i4);\n    defineSymbol(math, main, mathord, _ch4, _ch4);\n    defineSymbol(text, main, textord, _ch4, _ch4);\n}\n\nfor (var _i5 = 0x00F8; _i5 <= 0x00FF; _i5++) {\n    var _ch5 = String.fromCharCode(_i5);\n    defineSymbol(math, main, mathord, _ch5, _ch5);\n    defineSymbol(text, main, textord, _ch5, _ch5);\n}\n\n// Cyrillic\nfor (var _i6 = 0x0410; _i6 <= 0x044F; _i6++) {\n    var _ch6 = String.fromCharCode(_i6);\n    defineSymbol(text, main, textord, _ch6, _ch6);\n}\n\n// Unicode versions of existing characters\ndefineSymbol(text, main, textord, \"\\u2013\", \"–\");\ndefineSymbol(text, main, textord, \"\\u2014\", \"—\");\ndefineSymbol(text, main, textord, \"\\u2018\", \"‘\");\ndefineSymbol(text, main, textord, \"\\u2019\", \"’\");\ndefineSymbol(text, main, textord, \"\\u201C\", \"“\");\ndefineSymbol(text, main, textord, \"\\u201D\", \"”\");\n\n},{}],113:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar hangulRegex = exports.hangulRegex = /[\\uAC00-\\uD7AF]/;\n\n// This regex combines\n// - CJK symbols and punctuation: [\\u3000-\\u303F]\n// - Hiragana: [\\u3040-\\u309F]\n// - Katakana: [\\u30A0-\\u30FF]\n// - CJK ideograms: [\\u4E00-\\u9FAF]\n// - Hangul syllables: [\\uAC00-\\uD7AF]\n// - Fullwidth punctuation: [\\uFF00-\\uFF60]\n// Notably missing are halfwidth Katakana and Romanji glyphs.\nvar cjkRegex = exports.cjkRegex = /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uAC00-\\uD7AF\\uFF00-\\uFF60]/;\n\n},{}],114:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.calculateSize = exports.validUnit = undefined;\n\nvar _ParseError = require(\"./ParseError\");\n\nvar _ParseError2 = _interopRequireDefault(_ParseError);\n\nvar _Options = require(\"./Options\");\n\nvar _Options2 = _interopRequireDefault(_Options);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\nvar ptPerUnit = {\n    // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n    // https://tex.stackexchange.com/a/8263\n    \"pt\": 1, // TeX point\n    \"mm\": 7227 / 2540, // millimeter\n    \"cm\": 7227 / 254, // centimeter\n    \"in\": 72.27, // inch\n    \"bp\": 803 / 800, // big (PostScript) points\n    \"pc\": 12, // pica\n    \"dd\": 1238 / 1157, // didot\n    \"cc\": 14856 / 1157, // cicero (12 didot)\n    \"nd\": 685 / 642, // new didot\n    \"nc\": 1370 / 107, // new cicero (12 new didot)\n    \"sp\": 1 / 65536, // scaled point (TeX's internal smallest unit)\n    // https://tex.stackexchange.com/a/41371\n    \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n};\n\n// Dictionary of relative units, for fast validity testing.\nvar relativeUnit = {\n    \"ex\": true,\n    \"em\": true,\n    \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = exports.validUnit = function validUnit(unit) {\n    if (typeof unit !== \"string\") {\n        unit = unit.unit;\n    }\n    return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\nvar calculateSize = exports.calculateSize = function calculateSize(sizeValue, options) {\n    var scale = void 0;\n    if (sizeValue.unit in ptPerUnit) {\n        // Absolute units\n        scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n        / options.fontMetrics().ptPerEm // Convert pt to CSS em\n        / options.sizeMultiplier; // Unscale to make absolute units\n    } else if (sizeValue.unit === \"mu\") {\n        // `mu` units scale with scriptstyle/scriptscriptstyle.\n        scale = options.fontMetrics().cssEmPerMu;\n    } else {\n        // Other relative units always refer to the *textstyle* font\n        // in the current size.\n        var unitOptions = void 0;\n        if (options.style.isTight()) {\n            // isTight() means current style is script/scriptscript.\n            unitOptions = options.havingStyle(options.style.text());\n        } else {\n            unitOptions = options;\n        }\n        // TODO: In TeX these units are relative to the quad of the current\n        // *text* font, e.g. cmr10. KaTeX instead uses values from the\n        // comparably-sized *Computer Modern symbol* font. At 10pt, these\n        // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n        // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n        // TeX \\showlists shows a kern of 1.13889 * fontsize;\n        // KaTeX shows a kern of 1.171 * fontsize.\n        if (sizeValue.unit === \"ex\") {\n            scale = unitOptions.fontMetrics().xHeight;\n        } else if (sizeValue.unit === \"em\") {\n            scale = unitOptions.fontMetrics().quad;\n        } else {\n            throw new _ParseError2.default(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n        }\n        if (unitOptions !== options) {\n            scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n        }\n    }\n    return Math.min(sizeValue.number * scale, options.maxSize);\n};\n\n},{\"./Options\":83,\"./ParseError\":84}],115:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Provide an `indexOf` function which works in IE8, but defers to native if\n * possible.\n */\nvar nativeIndexOf = Array.prototype.indexOf;\nvar indexOf = function indexOf(list, elem) {\n    if (list == null) {\n        return -1;\n    }\n    if (nativeIndexOf && list.indexOf === nativeIndexOf) {\n        return list.indexOf(elem);\n    }\n    var l = list.length;\n    for (var i = 0; i < l; i++) {\n        if (list[i] === elem) {\n            return i;\n        }\n    }\n    return -1;\n};\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n    return indexOf(list, elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\nvar deflt = function deflt(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function hyphenate(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n    \"&\": \"&amp;\",\n    \">\": \"&gt;\",\n    \"<\": \"&lt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#x27;\"\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\n/**\n * Escapes text to prevent scripting attacks.\n */\nfunction escape(text) {\n    return String(text).replace(ESCAPE_REGEX, function (match) {\n        return ESCAPE_LOOKUP[match];\n    });\n}\n\n/**\n * A function to set the text content of a DOM element in all supported\n * browsers. Note that we don't define this if there is no document.\n */\nvar setTextContent = void 0;\nif (typeof document !== \"undefined\") {\n    var testNode = document.createElement(\"span\");\n    if (\"textContent\" in testNode) {\n        setTextContent = function setTextContent(node, text) {\n            node.textContent = text;\n        };\n    } else {\n        setTextContent = function setTextContent(node, text) {\n            node.innerText = text;\n        };\n    }\n}\n\n/**\n * A function to clear a node.\n */\nfunction clearNode(node) {\n    setTextContent(node, \"\");\n}\n\nexports.default = {\n    contains: contains,\n    deflt: deflt,\n    escape: escape,\n    hyphenate: hyphenate,\n    indexOf: indexOf,\n    setTextContent: setTextContent,\n    clearNode: clearNode\n};\n\n},{}]},{},[1])(1)\n});"],"sourceRoot":""}