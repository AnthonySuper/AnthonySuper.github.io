{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/gcode.js"],"names":["module","exports","hljs","GCODE_CODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","inherit","C_NUMBER_MODE","begin","C_NUMBER_RE","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","className","end","variants","aliases","case_insensitive","lexemes","keywords","contains","concat"],"mappings":"6EAAAA,EAAAC,QAAA,SAAAC,GACA,IASAC,GACAD,EAAAE,oBACAF,EAAAG,qBACAH,EAAAI,QAAA,WACAJ,EAAAK,QAAAL,EAAAM,eAA0CC,MAAA,iCAAAP,EAAAQ,cAC1CR,EAAAK,QAAAL,EAAAS,kBAA6CC,QAAA,OAC7CV,EAAAK,QAAAL,EAAAW,mBAA8CD,QAAA,QAE9CE,UAAA,OACAL,MAAA,4BAGAK,UAAA,OACAL,MAAA,4BAGAK,UAAA,OACAL,MAAA,YACAM,IAAA,WAGAD,UAAA,OACAL,MAAA,wBAGAK,UAAA,WACAL,MAAA,6DACAM,IAAA,uCAGAD,UAAA,SACAE,WAEAP,MAAA,IAAAM,IAAA,OACAH,QAAA,UAMA,OACAK,SAAA,MAGAC,kBAAA,EACAC,QAtDA,oBAuDAC,SApDA,4FAqDAC,WAEAP,UAAA,OACAL,MA1DA,QAKAK,UAAA,OACAL,MAAA,kBAuDAa,OAAAnB","file":"120.f7137f19.bundle.js","sourcesContent":["module.exports = function(hljs) {\n    var GCODE_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n    var GCODE_CLOSE_RE = '\\\\%';\n    var GCODE_KEYWORDS =\n      'IF DO WHILE ENDWHILE CALL ENDIF SUB ENDSUB GOTO REPEAT ENDREPEAT ' +\n      'EQ LT GT NE GE LE OR XOR';\n    var GCODE_START = {\n        className: 'meta',\n        begin: '([O])([0-9]+)'\n    };\n    var GCODE_CODE = [\n        hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        hljs.COMMENT(/\\(/, /\\)/),\n        hljs.inherit(hljs.C_NUMBER_MODE, {begin: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))|' + hljs.C_NUMBER_RE}),\n        hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n        hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n        {\n            className: 'name',\n            begin: '([G])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'name',\n            begin: '([M])([0-9]+\\\\.?[0-9]?)'\n        },\n        {\n            className: 'attr',\n            begin: '(VC|VS|#)',\n            end: '(\\\\d+)'\n        },\n        {\n            className: 'attr',\n            begin: '(VZOFX|VZOFY|VZOFZ)'\n        },\n        {\n            className: 'built_in',\n            begin: '(ATAN|ABS|ACOS|ASIN|SIN|COS|EXP|FIX|FUP|ROUND|LN|TAN)(\\\\[)',\n            end: '([-+]?([0-9]*\\\\.?[0-9]+\\\\.?))(\\\\])'\n        },\n        {\n            className: 'symbol',\n            variants: [\n                {\n                    begin: 'N', end: '\\\\d+',\n                    illegal: '\\\\W'\n                }\n            ]\n        }\n    ];\n\n    return {\n        aliases: ['nc'],\n        // Some implementations (CNC controls) of G-code are interoperable with uppercase and lowercase letters seamlessly.\n        // However, most prefer all uppercase and uppercase is customary.\n        case_insensitive: true,\n        lexemes: GCODE_IDENT_RE,\n        keywords: GCODE_KEYWORDS,\n        contains: [\n            {\n                className: 'meta',\n                begin: GCODE_CLOSE_RE\n            },\n            GCODE_START\n        ].concat(GCODE_CODE)\n    };\n};"],"sourceRoot":""}